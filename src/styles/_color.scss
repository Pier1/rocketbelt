.color-contrast-calculator {
  display: inline-flex;
  align-items: flex-start;

  .form-group {
    margin-top: 0;

    input {
      width: 16em;
      font-family: font-family(monospace);
    }
  }

  .swatch {
    margin-left: 0.5rem;
    width: 2.2em;
    height: 2.2em;
    border-radius: 50%;
    background: transparent;
  }

  .contrast_example {
    display: flex;
    flex-direction: column;
    margin-left: 1rem;
    padding: 0.5rem;
    $size: 9rem;
    min-width: $size;
    min-height: $size;
    transition: background 200ms linear, color 200ms linear;
    justify-content: center;
    align-items: center;

    .contrast_wcag-level {
      font-weight: font-weight(extrabold);
      font-size: font-size(2);
    }

    .contrast_wcag-level-fail {
      font-size: font-size(8);
      line-height: 1.2;

      & + .contrast_ratio {
        line-height: 1;
      }
    }
    .contrast_ratio {
      font-size: font-size(-1);
    }
  }
}

.swatches {
  display: grid;
  margin: 1rem auto 5rem auto;
  grid-template-columns: repeat(auto-fill, 10rem);
  grid-gap: 1rem;
  justify-content: space-between;
}

.swatch_wrapper {
  display: inline-flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;

  .swatch_name {
    color: color(black);
  }

  .swatch {
    display: block;
    margin-bottom: 1rem;
    width: 10rem;
    height: 10rem;
    border-radius: 50%;
    transition: box-shadow 100ms linear;

    $hover-shadow-props: 0 3px 8px;
    $active-shadow-props: 0 1px 4px;
    $mix-percentage: 25%;
    $hover-alpha: 0.3;
    $active-alpha: 0.6;

    $brand-colors: (
      (
        'colorName': 'prussian-blue',
        'colorValue': color(brand),
      ),
      (
        'colorName': 'logo-blue',
        'colorValue': color(brand, logoBlue),
      ),
      (
        'colorName': 'columbia-blue',
        'colorValue': color(brand, columbiaBlue),
      ),
      (
        'colorName': 'catskill-blue',
        'colorValue': color(brand, catskillBlue),
      ),
      (
        'colorName': 'alabaster',
        'colorValue': color(brand, alabaster),
      ),
      (
        'colorName': 'white',
        'colorValue': color(white),
      ),
      (
        'colorName': 'black-haze',
        'colorValue': color(gray, plus2),
      ),
      (
        'colorName': 'silver-sand',
        'colorValue': color(gray, plus1),
      ),
      (
        'colorName': 'sonic-silver',
        'colorValue': color(gray),
      ),
      (
        'colorName': 'abbey',
        'colorValue': color(gray, minus1),
      ),
      (
        'colorName': 'jet',
        'colorValue': color(gray, minus2),
      ),
      (
        'colorName': 'black',
        'colorValue': color(black),
      ),
      (
        'colorName': 'error',
        'colorValue': color(error),
      ),
      (
        'colorName': 'warning',
        'colorValue': color(warning),
      ),
      (
        'colorName': 'warning-b',
        'colorValue': color(warning-b),
      ),
      (
        'colorName': 'success',
        'colorValue': color(success),
      ),
      (
        'colorName': 'info',
        'colorValue': color(brand, logoBlue),
      )
    );

    @each $color in $brand-colors {
      &.#{map-get($color, 'colorName')} {
        $fetched-color: map-get($color, 'colorValue');

        &:hover {
          box-shadow: $hover-shadow-props
            rgba(mix(black, $fetched-color, $mix-percentage), $hover-alpha);
        }

        &,
        &:active {
          box-shadow: $active-shadow-props
            rgba(mix(black, $fetched-color, $mix-percentage), 0.4);
        }
      }
    }
  }
}
