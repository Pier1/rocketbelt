@import 'emphasis/emphasis',
        'entrances-and-exits/entrances-and-exits',
        'state-change/state-change';

@import 'properties',
        './~legacy/legacy';

@mixin animation-duration($duration, $nesting: 0) {
  $duration: animation-duration($duration);
  transition-duration: $duration;
  animation-duration: $duration;

  @if ($nesting > 0) {
    & [class*='rbAnim'] {
      transition-delay: $duration;
      transition-duration: $duration;
      animation-duration: $duration;
      animation-delay: $duration;
    }
  }
}

.rbAnim_animatable,
.animatable {
  @include animation-duration(md);
  animation-fill-mode: both;

  & [class*='rbAnim'] {
    animation-fill-mode: both;
  }

  &.rbAnim_slide-and-fade {
    display: block;
    visibility: visible;
    opacity: 1;

    animation: rbAnim_slide-down 800ms cubic-bezier(0.39, 0.575, 0.565, 1);

    .rbAnim_fadable {
      opacity: 0;
      animation: rbAnim_fade-in 250ms linear;
      animation-delay: 200ms;
      animation-fill-mode: both;
    }
  }
}

@keyframes rbAnim_slide-down {
  0% {
    display: none;
    visibility: hidden;
  }

  1% {
    display: block;
    visibility: visible;
    max-height: 0;
  }

  100% {
    max-height: 500px;
  }
}

@keyframes rbAnim_fade-in {
  from {
    display: none;
    visibility: hidden;
    opacity: 0;
  }

  to {
    display: block;
    visibility: visible;
    opacity: 1;
  }
}
