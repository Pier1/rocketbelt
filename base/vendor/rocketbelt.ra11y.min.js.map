{"version":3,"sources":["base/vendor/rocketbelt.ra11y.min.js"],"names":["a11y","module","define","window","rb","state","A11yState","this","suppressWarnings","states","busy","used","value","checked","undefined","disabled","expanded","grabbed","validate","console","hidden","invalid","val","self","pressed","selected","suppress","Object","keys","newVal","current","get","error","el","setAttribute","getAttribute","attr","exports","toggle","set","warn","remove","removeAttribute","amd"],"mappings":"AAAA,cACA,SAAEA,EAAMC,EAAQC,GAuLdC,OAAOC,GAAGJ,KAAOG,OAAOC,GAAGJ,SAC3BG,OAAOC,GAAGJ,KAAKK,MAAQ,IAxLjBJ,WACN,IAAMK,EAAAA,KAGJC,KAAAC,kBAAA,EAGAD,KAAKE,QAALC,MACEC,MAAQ,EACNC,QACA,GAHU,IAUVC,SAVUF,MAAA,UAiBZC,QACE,GACA,EAnBU,aAwBZE,IAAYC,UAgBZJ,MAAA,EACEC,QACA,GA1CU,IAkDVI,UAlDUL,MAuDZ,SACE,WACA,OAzDU,UAgEZ,cACE,YACA,UAOFC,QACE,GAMA,OAPUE,IAedG,SACAN,MAAKO,EACHN,QACE,GACE,OACEO,IAGFC,QACDT,MAAA,EA/CDC,QAiDA,GAVY,IAcZS,SACEC,MAAMC,EA/CRX,QAiDE,GACE,EACEO,UACD,aAGFK,SA/CHb,MAAS,UAiDPC,QACD,GA/CC,EAiDF,aACDE,IAGHW,UACAd,MACE,WADF,SA7CM,MAiDN,OAEEC,QACIP,GACF,OADFS,KAxCFP,KAAKW,UAiDLb,MAAA,SAAAA,EAAAqB,GACA,OAA+B,IAA/BC,OAAWC,KAAAL,EAAKlB,QAAOiB,QAAQjB,MAC7B,IAAIwB,GAAJN,EAAAf,kBACIc,QAAQR,MAARQ,IAAmBjB,EAAnBiB,gCAGO,IAKVV,MAAA,SAAAP,EAAAO,EAAAc,GA9CC,SAAIH,EAAKL,SAASb,MAAMA,KAmDV,IAFlBkB,EAAAd,OAAAJ,GAAAO,MAEQkB,QAAeC,MA/CE,IAAbL,GAAsBH,EAAKf,kBAiDjCsB,QAAYE,MAAZF,IAAoBA,EAApBA,oCAAyCzB,EAAzCyB,KAGF,MAYAG,KAAAA,IAAGC,SAAAA,EAAAA,GACJ,OAAAD,EAAAE,aAAA,QAAAC,IAILjC,KAAOC,IAAGJ,SAAViC,EAAiB9B,GACjBA,IAAUH,EAAKK,EAAQ0B,IAAIzB,EAAAA,GAhDvB,OAAc,OAAVD,IAmDN,IAAOgC,GAAP,UAAAhC,GAQDF,KAAAA,IAnMH,SAmMgBA,EAAAA,EAAOF,GAhDjB,IAAI4B,EAASP,OACDR,IAARQ,EACFO,GAAS,EACCN,EAAKL,SAASN,MAAMP,EAAOwB,KACrCA,EAAS,MAGC,OAARP,GACFW,EAAGC,aAAH,QAAwB7B,EAASwB,IAKrCtB,KAAK+B,OAAS,SAACL,EAAI5B,GACjB,IAAMyB,EAAUP,EAAKQ,IAAIE,EAAI5B,GAEb,OAAZyB,GAAgC,UAAZA,EACtBP,EAAKgB,IAAIN,EAAI5B,GAAO,GACC,SAAZyB,EACTP,EAAKgB,IAAIN,EAAI5B,GAAO,GACVkB,EAAKf,kBACfW,QAAQqB,KAAR,uBAAqCnC,EAArC,6DACayB,EADb,OAMJvB,KAAKkC,OAAS,SAACR,EAAI5B,GACbkB,EAAKL,SAASN,MAAMP,OAAOS,GAAW,GACxCmB,EAAGS,gBAAH,QAA2BrC,GAE3B4B,EAAGC,aAAH,QAAwB7B,GAAS,UAQjB,IAAXJ,GAA0BA,EAAOoC,QAC1CpC,EAAOoC,QAAUrC,EACU,mBAAXE,GAAyBA,EAAOyC,IAChDzC,EAAO,WACL,OAAOF,IAGTG,OAAOH,KAAOA,EAjMlB,CAmMGG,OAAOH,KAAMG,OAAOF,OAAQE,OAAOD","file":"rocketbelt.ra11y.min.js","sourcesContent":["'use strict';\n((a11y, module, define) => {\n  const A11yState = function A11yState() {\n    const self = this;\n\n    // Toggle for suppressing output\n    this.suppressWarnings = false;\n\n    this.states = {\n      'busy': {\n        'used': true,\n        'value': [\n          true,\n          false\n        ]\n      },\n      'checked': {\n        'used': ['option'],\n        'value': [\n          true,\n          false,\n          'mixed',\n          undefined\n        ]\n      },\n      'disabled': {\n        'used': true,\n        'value': [\n          true,\n          false\n        ]\n      },\n      'expanded': {\n        'used': [\n          'button',\n          'document',\n          'link',\n          'section',\n          'sectionhead',\n          'separator',\n          'window'\n        ],\n        'value': [\n          true,\n          false,\n          undefined\n        ]\n      },\n      'grabbed': {\n        'used': true,\n        'value': [\n          true,\n          false,\n          undefined\n        ]\n      },\n      'hidden': {\n        'used': true,\n        'value': [\n          true,\n          false\n        ]\n      },\n      'invalid': {\n        'used': true,\n        'value': [\n          true,\n          false,\n          'grammar',\n          'spelling'\n        ]\n      },\n      'pressed': {\n        'used': ['button'],\n        'value': [\n          true,\n          false,\n          'mixed',\n          undefined\n        ]\n      },\n      'selected': {\n        'used': [\n          'gridcell',\n          'option',\n          'row',\n          'tab'\n        ],\n        'value': [\n          true,\n          false,\n          undefined\n        ]\n      }\n    };\n\n    // State Validation\n    this.validate = {\n      'state': (state, suppress) => {\n        if (Object.keys(self.states).indexOf(state) === -1) {\n          if (suppress !== true && !self.suppressWarnings) {\n            console.error(`\\`${state}\\` is not a valid ARIA state`);\n          }\n\n          return false;\n        }\n\n        return true;\n      },\n      'value': (state, value, suppress) => {\n        let val;\n        if (self.validate.state(state)) {\n          val = self.states[state].value;\n\n          if (val.indexOf(value) === -1) {\n            if (suppress !== true && !self.suppressWarnings) {\n              console.error(`\\`${value}\\` is not a valid value for \\`aria-${state}\\``);\n            }\n\n            return false;\n          }\n\n          return true;\n        }\n\n        return false;\n      }\n    };\n\n    // Gets the current state of the ARIA attribute\n    this.get = (el, attr) => {\n      return el.getAttribute(`aria-${attr}`);\n    };\n\n    // Has the current ARIA state\n    this.has = (el, attr) => {\n      const state = self.get(el, attr);\n      if (state === null) {\n        return false;\n      } else if (state === false || state === 'false') {\n        return false;\n      }\n\n      return true;\n    };\n\n    // Sets the given state\n    this.set = (el, state, val) => {\n      let newVal = val;\n      if (val === undefined) {\n        newVal = true;\n      } else if (!self.validate.value(state, newVal)) {\n        newVal = null;\n      }\n\n      if (val !== null) {\n        el.setAttribute(`aria-${state}`, newVal);\n      }\n    };\n\n    // Toggles a given state\n    this.toggle = (el, state) => {\n      const current = self.get(el, state);\n\n      if (current === null || current === 'false') {\n        self.set(el, state, true);\n      } else if (current === 'true') {\n        self.set(el, state, false);\n      } else if (!self.suppressWarnings) {\n        console.warn(`Cannot toggle \\`aria-${state}\\` as its starting value is not a boolean \\\n          (it\\'s \\`${current}\\`)`);\n      }\n    };\n\n    // Removes a given state\n    this.remove = (el, state) => {\n      if (self.validate.value(state, undefined, true)) {\n        el.removeAttribute(`aria-${state}`);\n      } else {\n        el.setAttribute(`aria-${state}`, false);\n      }\n    };\n  };\n\n  window.rb.a11y = window.rb.a11y || {};\n  window.rb.a11y.state = new A11yState();\n\n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports = a11y;\n  } else if (typeof define === 'function' && define.amd) {\n    define(() => {\n      return a11y;\n    });\n  } else {\n    window.a11y = a11y;\n  }\n})(window.a11y, window.module, window.define);\n"],"sourceRoot":"../.."}