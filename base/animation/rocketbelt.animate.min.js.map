{"version":3,"sources":["base/animation/rocketbelt.animate.min.js"],"names":["window","document","$","emphasis","inOrOut","getAnimationNames","slide","prefix","fadeSlide","fade","rb","animTypes","animate","in","out","state","scale","expandCollapse","color","pulse","easing","motion","easingPrefix","duration","xs","durationPrefix","sm","xl","el","animationName","configOrCallback","_el$classList","classesToRemove","callback","includes","resetAfterAnimating","isAnimation","_typeof","push","classList","add","apply","cb","_el$classList2","remove","onAnimationEnd","this","each","animate.onTransitionEnd","once","arguments","length","undefined","onTransitionEnd","animate.onAnimationEnd","fn","functions","functionAndOptions","Array","prototype","slice","call","error","expandOrCollapse","collapsedDataAttr","addEventListener","onExpandEnd","removeEventListener","isCollapsed","scrollHeight","elementTransition","style","transition","height","elHeight","requestAnimationFrame","jQuery"],"mappings":"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","file":"rocketbelt.animate.min.js","sourcesContent":["'use strict';\n((window, document, $) => {\n  const rb = window.rb;\n\n  const prefix = 'animation_';\n  const animTypes = {\n    in: 'in_',\n    out: 'out_',\n    state: 'state_',\n    emphasis: 'emphasis_'\n  };\n\n  const getAnimationNames = (inOrOut) => {\n    return {\n      // Entrances & Exits\n      fade:      `${prefix}${inOrOut}fade`,\n      slide:     `${prefix}${inOrOut}slide`,\n      fadeSlide: `${prefix}${inOrOut}fade-slide`,\n      grow:      `${prefix}${inOrOut}grow`,\n      shrink:    `${prefix}${inOrOut}shrink`\n    };\n  };\n\n  rb.animate = rb.animate || {};\n  rb.animate.in  = rb.animate.in  || getAnimationNames(animTypes.in);\n  rb.animate.out = rb.animate.out || getAnimationNames(animTypes.out);\n\n  rb.animate.state = rb.animate.state || {\n    expandCollapse: `${prefix}${animTypes.state}expand-collapse`,\n    scale:   `${prefix}${animTypes.state}scale`,\n    opacity: `${prefix}${animTypes.state}opacity`,\n    color:   `${prefix}${animTypes.state}color`\n  };\n\n  rb.animate.emphasis = rb.animate.emphasis || {\n    pulse: `${prefix}${animTypes.emphasis}pulse`\n  };\n\n  const easingPrefix = `${prefix}easing_`;\n  rb.animate.easing = rb.animate.easing || {\n    motion: `${easingPrefix}motion`\n  };\n\n  const durationPrefix = `${prefix}duration_`;\n  rb.animate.duration = rb.animate.duration || {\n    xs: `${durationPrefix}xs`,\n    sm: `${durationPrefix}sm`,\n    md: `${durationPrefix}md`,\n    lg: `${durationPrefix}lg`,\n    xl: `${durationPrefix}xl`\n  };\n\n  rb.animate.animate = (el, animationName, configOrCallback) => {\n    const classesToRemove = ['animatable', animationName];\n    let callback = null;\n    let resetAfterAnimating = false;\n    let isAnimation = !(animationName.includes('expand') || animationName.includes('collapse'));\n\n    if (typeof configOrCallback === 'function') {\n      callback = configOrCallback;\n    } else if (typeof configOrCallback === 'object') {\n      if (configOrCallback.easing) {\n        classesToRemove.push(configOrCallback.easing);\n      }\n\n      if (configOrCallback.duration) {\n        classesToRemove.push(configOrCallback.duration);\n      } else {\n        // Provide a default duration\n        classesToRemove.push(rb.animate.duration.md);\n      }\n\n      if (configOrCallback.callback) {\n        callback = configOrCallback.callback;\n      }\n\n      if (configOrCallback.resetAfterAnimating) {\n        resetAfterAnimating = true;\n      }\n    }\n\n    if (el && el.classList) {\n      el.classList.add(...classesToRemove);\n    }\n\n    const cb = () => {\n      if (resetAfterAnimating && el && el.classList) {\n        el.classList.remove(...classesToRemove);\n      }\n\n      if (callback) {\n        callback();\n      }\n    };\n\n    if (isAnimation) {\n      rb.animate.onAnimationEnd(el, cb, true);\n    } else {\n      rb.animate.onTransitionEnd(el, cb, true);\n    }\n\n    if (animationName.includes('expand') || animationName.includes('collapse')) {\n      isAnimation = false;\n      expandOrCollapse(el);\n    }\n  };\n\n  if ($) {\n    const functions = {\n      /**\n       * Add a Rocketbelt animation to a jQuery object.\n       *\n       * @param  {string} animationName The Rocketbelt animation name.\n       * @param  {(object|function)} configOrCallback A configuration object or a callback to run after the animation finishes.\n       * @returns {object} A chainable jQuery object.\n       */\n      'animate': function animate(animationName, configOrCallback) {\n        return this.each(function eachAnimate() {\n          return window.rb.animate.animate(this, animationName, configOrCallback);\n        });\n      },\n\n      /**\n       * Execute a function after a transition finishes.\n       *\n       * @param {function} callback The function to execute after the transition.\n       * @param {boolean} [once=false] Whether to execute the callback after subsequent transitions. If true, removes the event listener after the first execution of the callback.\n       * @returns {object} A chainable jQuery object.\n       */\n      'animate.onTransitionEnd': function onTransitionEnd(callback, once = false) {\n        return this.each(function eachTransitionEnd() {\n          return window.rb.animate.onTransitionEnd(this, callback, once);\n        });\n      },\n\n      /**\n       * Execute a function after a transition finishes.\n       *\n       * @param {function} callback The function to execute after the transition.\n       * @param {boolean} [once=false] Whether to execute the callback after subsequent animations. If true, removes the event listener after the first execution of the callback.\n       * @returns {object} A chainable jQuery object.\n       */\n      'animate.onAnimationEnd': function onAnimationEnd(callback, once = false) {\n        return this.each(function eachAnimationEnd() {\n          return window.rb.animate.onAnimationEnd(this, callback, once);\n        });\n      }\n    };\n\n    /**\n     * Rocketbelt helper functions.\n     *\n     * @param {any} functionAndOptions A Rocketbelt helper function name as a string.\n     * @return {any} The value returned by the passed function name.\n     */\n    $.fn.rb = function $rb(functionAndOptions) {\n      if (functions[functionAndOptions]) {\n        return functions[functionAndOptions].apply(this, Array.prototype.slice.call(arguments, 1));\n      } else if (typeof functionAndOptions === 'object' || !functionAndOptions) {\n        // console.warn about calling $.rb with no parameters.\n      }\n\n      return $.error(`Function ${functionAndOptions} does not exist on jQuery.rb`);\n    };\n  }\n\n  const expandOrCollapse = (el) => {\n    // See https://css-tricks.com/using-css-transitions-auto-dimensions/\n    const collapsedDataAttr = 'data-rb-is-collapsed';\n    const isCollapsed = el.getAttribute(collapsedDataAttr) === 'true';\n\n    if (isCollapsed) {\n      el.addEventListener('transitionend', function onExpandEnd() {\n        el.removeEventListener('transitionend', onExpandEnd);\n      });\n\n      // Expand\n      el.style.height = null;\n\n      // Mark the element as expanded\n      el.setAttribute(collapsedDataAttr, 'false');\n    } else {\n      // Collapse\n      const elHeight = el.scrollHeight;\n\n      // Temporarily disable all css transitions\n      const elementTransition = el.style.transition;\n      el.style.transition = '';\n\n      // On the next frame, explicitly set the element's height to its\n      // current pixel height, so we aren't transitioning out of 'auto'\n      requestAnimationFrame(() => {\n        el.style.height = `${elHeight}px`;\n        el.style.transition = elementTransition;\n\n        // On the next frame, have the element transition to height: 0\n        requestAnimationFrame(() => {\n          el.style.height = '0px';\n        });\n      });\n\n      // Mark the element as expanded\n      el.setAttribute(collapsedDataAttr, 'true');\n    }\n  };\n})(window, document, jQuery);\n"],"sourceRoot":"../.."}