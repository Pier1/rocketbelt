$primary: #00205b;

$brand-palette: (
  base: $primary,
  prussianBlue: $primary,
  brandBlue: #0033a0,
  logoBlue: #0033a0,
  columbiaBlue: #ced9e5,
  catskillBlue: #e8edf3,
  alabaster: #f0ece2,
  deepBlue: #2e2b70,
  warmRed: #f04e37,
  sand: #fed4a0,
  deepBrown: #431e1b,
  sunYellow: #fdb913,
  paleRed: #e58d83,
  mint: #7cccbf,
);

$base-families: (
  sale: #c1292e,
  primary: $primary,
  accent: adjust-hue($primary, 60),
  gray: #73777c,
  success: #3d7733,
  warning: #edd18d,
  warning-b: #d5a021,
  error: #c1292e,
  info: #ced9e5,
  black: #000,
  white: #fff,
);

$base-variants: (
  base: 0,
  lighter: 0.4,
  lightest: 0.8,
  darker: -0.2,
  darkest: -0.5,
);

$gray-variants: (
  base: 0,
  plus1: 0.2,
  plus2: 0.4,
  plus3: 0.6,
  plus4: 0.8,
  plus5: 0.9,
  minus1: -0.2,
  minus2: -0.4,
);

$black-white-variants: (
  base: 0,
);

@function build-families() {
  $families: (
    brand: $brand-palette,
  );

  @each $family, $color in $base-families {
    $variants: ();

    $v: if(
      $family == gray,
      $gray-variants,
      if(
        $family == black or $family == white,
        $black-white-variants,
        $base-variants
      )
    );

    @each $variant, $percentage in $v {
      $variants: map-merge(
        $variants,
        (#{$variant}: scale-color($color, $lightness: percentage($percentage)))
      );
    }

    $families: map-merge($families, (#{$family}: $variants));
  }

  @return $families;
}

$color-families: build-families();
