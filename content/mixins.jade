//- Escaping HTML in the Jade buffer: https://github.com/pugjs/pug/issues/1468#issuecomment-38195976
mixin escape
  - var oldBuf = buf;
  - buf = [];
  block
  //- This is a little hacky, but it strips <script> tags so that Slipway
  //- doesn't appear to prefer <script> blocks. The design library itself uses
  //- <script> blocks because they're short and need to be included (escaped) 
  //- in the page as examples.
  - var addition = _.remove(buf.map(jade.escape), function (o) {
  -   return !o.match(/\s*&lt;\/?script&gt;\s*/gi);
  - });
  - buf  = oldBuf.concat(addition);

mixin exampleWithCode(htmlOrJs)
  - htmlOrJs = htmlOrJs || 'html';
  - if (htmlOrJs === 'js') htmlOrJs = 'javascript';
  
  - var id = shortid.generate();
  .example
    block
  .code
    button.copy-code(data-clipboard-target='#' + id) Copy
    pre
      code(id=id, class='language-' + htmlOrJs.toLowerCase())
        +escape
          block

- var toTitleCase = function (str) {
-   return str.replace(/-/g, ' ').replace(/\w\S*/g, function(txt){return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();});
- }

mixin buildNav(navObject, rootHref)
  ul
    each item in navObject.sort(function (a, b) { return a.name > b.name })
      - var name = toTitleCase(item.name);
      unless item.name.indexOf('index.') > -1
        li
          - var newRootHref = rootHref ? rootHref : '';
          if item.type == 'file'
            a(href=newRootHref + '/' + item.name.replace('jade', 'html')) #{name.replace('.jade', '')}
          else
            a(href=newRootHref + '/' + item.name) #{name}

            mixin buildNav(item.children, newRootHref + '/' + item.name)
