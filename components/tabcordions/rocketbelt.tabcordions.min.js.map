{"version":3,"sources":["components/tabcordions/rocketbelt.tabcordions.min.js"],"names":["rb","document","init","selector","$tabcordion","$","this","Number","isInteger","$navlist","find","on","keyVent","target","adjacentTab","findAdjacentTab","$list","key","dir","keys","allTabs","startTab","parentNode","prev","next","length","setActiveAndInactive","which","preventDefault","focus","dispatchEvent","event","detail","CustomEvent","newTarget","click","assocPanel","getAttribute","currentTarget","eventData","previousTarget","addAriaAttributes","determineView","el","posinset","$tabTriggers","each","i","setsize","e","PAGE_UP","anchor","newActive","setAttribute","assocPanelID","first","attr","hasClass","closest","removeClass","$tabContainer","breakpointOverride","breakpoint","containerWidth","$panels","addClass","isStatic","panelID","assocLink","append","isAccordionView","isTabsView","id","$tabcordions","tabcordions","wasAccordion","body","activeTab","window","addEventListener","jQuery"],"mappings":"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","file":"rocketbelt.tabcordions.min.js","sourcesContent":["'use strict';\n\n((rb, document, $) => {\n  const keys = {\n    ARROWS: [37, 38, 39, 40],\n    ARROW_LEFT: 37,\n    ARROW_UP: 38,\n    ARROW_RIGHT: 39,\n    ARROW_DOWN: 40,\n    ENTER: 13,\n    SPACE: 32,\n    PAGE_UP: 33,\n    PAGE_DOWN: 34\n  };\n\n  const init = function init(selector) {\n    let $tabcordion = $(this);\n\n    // Check Number.isInteger because the init function is called\n    // from $.each, which passes the array index.\n    if (selector && !(Number.isInteger(selector))) {\n      $tabcordion = $(selector);\n    }\n\n    const $navlist = $tabcordion.find('.tabcordion_navlist');\n\n    $navlist.on('keydown', '.tabcordion_nav-item .tabcordion_nav-trigger',\n      function onKeydown(keyVent) {\n        const which = keyVent.which;\n        const target = keyVent.target;\n\n        if ($.inArray(which, keys.ARROWS) > -1) {\n          const adjacentTab = findAdjacentTab(target, $navlist, which);\n\n          if (adjacentTab) {\n            keyVent.preventDefault();\n            adjacentTab.focus();\n\n            const eventData = { 'previousTarget': target, 'newTarget': adjacentTab };\n            const event = new CustomEvent('rb.tabcordion.tabChanged', { detail: eventData });\n            $tabcordion[0].dispatchEvent(event);\n\n            setActiveAndInactive(adjacentTab, $navlist);\n          }\n        } else if (which === keys.ENTER || which === keys.SPACE) {\n          keyVent.preventDefault();\n          target.click();\n        } else if (which === keys.PAGE_DOWN) {\n          keyVent.preventDefault();\n          const assocPanel = $(`#${this.getAttribute('aria-controls')}`);\n\n          if (assocPanel) {\n            assocPanel.focus();\n          }\n        }\n      }\n    );\n\n    // Click support\n    $navlist.on('click', '.tabcordion_nav-item .tabcordion_nav-trigger',\n      function onClick() {\n        const currentTarget =\n          $navlist.find('.tabcordion_nav-item.is-active .tabcordion_nav-trigger')[0];\n        if (currentTarget != $(this)[0]) {\n          const eventData = { 'previousTarget': currentTarget, 'newTarget': $(this)[0] };\n          const event = new CustomEvent('rb.tabcordion.tabChanged', { detail: eventData });\n          $tabcordion[0].dispatchEvent(event);\n        }\n\n        setActiveAndInactive(this, $navlist);\n      }\n    );\n\n    addAriaAttributes($tabcordion);\n\n    // Initial configuration based on viewport width\n    determineView();\n  };\n\n  const addAriaAttributes = ($tabcordion) => {\n    const $tabTriggers = $tabcordion.find('.tabcordion_nav-trigger');\n\n    $tabTriggers.each((i, el) => {\n      $(el).attr(rb.aria.setsize, $tabTriggers.length);\n      $(el).attr(rb.aria.posinset, i + 1);\n    });\n  };\n\n  $(document.body).on('keydown', '.tabcordion_panel', function onKeydown(e) {\n    if (e.which === keys.PAGE_UP) {\n      e.preventDefault();\n      const $navlist = $(this).closest('.tabcordion').find('.tabcordion_navlist');\n      const activeTab = $navlist.find('.tabcordion_nav-item.is-active .tabcordion_nav-trigger')[0];\n\n      if (activeTab) {\n        activeTab.focus();\n      }\n    }\n  });\n\n  function findAdjacentTab(startTab, $list, key) {\n    const dir = (key === keys.ARROW_LEFT || key === keys.ARROW_UP) ? 'prev' : 'next';\n    let adjacentTab = (dir === 'prev') ?\n                      $(startTab.parentNode).prev()[0] :\n                      $(startTab.parentNode).next()[0];\n\n    if (!adjacentTab) {\n      const allTabs = $list.find('.tabcordion_nav-item');\n      if (dir === 'prev') {\n        adjacentTab = allTabs[allTabs.length - 1];\n      } else {\n        adjacentTab = allTabs[0];\n      }\n    }\n\n    return $(adjacentTab).find('.tabcordion_nav-trigger')[0];\n  }\n\n  function setActiveAndInactive(newActive, $list) {\n    $list.find('.tabcordion_nav-item').each(function decorateNavItems() {\n      const assocPanelID = $(this)\n                            .find('.tabcordion_nav-trigger')\n                            .first()\n                            .attr('aria-controls');\n      const anchor = $(this).find('.tabcordion_nav-trigger')[0];\n\n      if (this !== newActive.parentNode ||\n          ($(this).hasClass('is-active') &&\n           $(this).closest('.tabcordion').hasClass('is-accordion'))) {\n        $(this).removeClass('is-active');\n        anchor.tabIndex = -1;\n        anchor.setAttribute('aria-selected', 'false');\n        $('#' + assocPanelID)\n          .removeClass('is-current')\n          .attr('aria-hidden', 'true');\n      } else {\n        $(this).addClass('is-active');\n        anchor.tabIndex = 0;\n        anchor.setAttribute('aria-selected', 'true');\n        $(`#${assocPanelID}`)\n          .addClass('is-current')\n          .removeAttr('aria-hidden');\n      }\n    });\n  }\n\n  function determineView() {\n    const $tabContainer = $('.tabcordion');\n    const breakpointOverride = $tabContainer.data('breakpoint');\n    const breakpoint = breakpointOverride ? breakpointOverride : 480;\n\n    $tabContainer.each(function setView() {\n      const $tabcordion = $(this);\n      const containerWidth = $tabcordion.width();\n      const $panels = $tabcordion.find('.tabcordion_panels');\n      const $navlist = $tabcordion.find('.tabcordion_navlist');\n\n      const isStatic = $tabcordion.hasClass('is-static');\n      const isAccordionView = $tabcordion.hasClass('is-accordion');\n      const isTabsView = !isAccordionView;\n\n      if (!isStatic) {\n        if (containerWidth <= breakpoint && !isAccordionView) {\n          // Switch to accordion\n          $tabcordion\n            .removeClass('is-tabs')\n            .addClass('is-accordion');\n\n          // Better markup semantics for accordion\n          $panels.find('.tabcordion_panel').each(function setPanelID() {\n            const panelID = this.id;\n            const assocLink = panelID &&\n              $(`.tabcordion_navlist .tabcordion_nav-trigger[aria-controls=\"${panelID}\"]`)[0];\n            if (assocLink) {\n              $(assocLink.parentNode).append(this);\n            }\n          });\n        } else if (containerWidth > breakpoint && !isTabsView) {\n          // Switch to tabs\n          const wasAccordion = $tabcordion.hasClass('is-accordion');\n          $tabcordion\n            .removeClass('is-accordion')\n            .addClass('is-tabs');\n\n          if (wasAccordion) {\n            $navlist.find('.tabcordion_panel').each(function appendPanel() {\n              $panels.append(this);\n            });\n          }\n        }\n      }\n    });\n  }\n\n  const $tabcordions = $('.tabcordion');\n  $tabcordions.each(init);\n  window.addEventListener('rb.optimizedResize', determineView);\n\n  rb.tabcordions = rb.tabcordions || {};\n  rb.tabcordions.init = init;\n  rb.tabcordions.addAriaAttributes = addAriaAttributes;\n})(window.rb, document, jQuery);\n"],"sourceRoot":"../.."}