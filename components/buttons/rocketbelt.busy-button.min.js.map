{"version":3,"sources":["components/buttons/rocketbelt.busy-button.min.js"],"names":["$","buttonActionComplete","btnChild","btnText","btnClass","text","this","prop","css","removeClass","busyButton","el","addEventEls","textEl","base","opts","baseText","busyIcon","newStructure","buttonActionBusy","target","baseWidth","outerWidth","busyText","addClass","$el","trigger","type","data","init","extend","defaultOptions","empty","append","children","on","call","fn","options","method","methodResult","methods","apply","Array","prototype","slice","arguments","console","warn","each","jQuery"],"mappings":"CAAA,SAAUA,GAuDN,QAASC,GAAsBC,EAAUC,EAASC,GAChDF,EAASG,KAAKF,GACdH,EAAEM,MAAMC,KAAK,YAAW,GAAOC,IAAI,YAAa,QAAQC,YAAYL,GAxDxEJ,EAAEU,WAAa,SAASC,GA8BtB,QAASC,KACP,GAAIC,GAAS,kCAAoCC,EAAKC,KAAKC,SAAW,UAClEC,EAAW,yCACXC,EAAeL,EAASI,CAE5B,OAAOC,GAGT,QAASC,GAAiBjB,EAAUE,GAElC,GAAIgB,GAASpB,EAAEM,MACXe,EAAYD,EAAOE,YACvBpB,GAASG,KAAKS,EAAKC,KAAKQ,SAAWT,EAAKC,KAAKQ,SAAWT,EAAKC,KAAKC,UAElEI,EAAOb,KAAK,YAAW,GAAMC,IAAI,YAAYa,GAAWG,SAASpB,GAG/DU,EAAKW,IAAIC,SACLC,KAAM,mBACNhB,GAAIG,EAAKH,KAhDjB,GAAIG,GAAOR,IACXQ,GAAKH,GAAKA,EACVG,EAAKW,IAAMzB,EAAEW,GACbG,EAAKW,IAAIG,KAAK,aAAcd,GAE5BA,EAAKe,KAAO,WACVf,EAAKC,KAAOf,EAAE8B,UAAW9B,EAAEU,WAAWqB,gBACtCjB,EAAKC,KAAKC,SAAWF,EAAKW,IAAIpB,QAAUS,EAAKC,KAAKC,SAClDF,EAAKC,KAAKQ,SAAWT,EAAKW,IAAIG,KAAK,cAAgBd,EAAKC,KAAKQ,SAI5DT,EAAQ,IAAEkB,QAAQC,OAAOrB,EAG1B,IAAIV,GAAYY,EAAQ,IAAEoB,SAAS,qBAC/B9B,EAAWU,EAAKC,KAAKQ,SAAW,oCAAsC,aAG1ET,GAAKW,IAAIU,GAAG,QAAS,WACnBhB,EAAiBiB,KAAK9B,KAAMJ,EAAUE,KAExCU,EAAKW,IAAIU,GAAG,uBAAwB,WAClClC,EAAqBmC,KAAK9B,KAAMJ,EAAUY,EAAKC,KAAKC,SAAUZ,MAIlEU,EAAKe,QA+BL7B,EAAEU,WAAWqB,gBACTf,SAAU,GACVO,SAAU,MAGdvB,EAAEqC,GAAG3B,WAAa,SAAS4B,GACvB,GAAI5B,GAAY6B,EAAQC,CACxB,OAAwB,gBAAZF,IACRC,EAASD,EACT5B,EAAaJ,KAAKsB,KAAK,cACnBlB,IACIA,EAAW+B,QAAQF,GACnBC,EAAe9B,EAAW+B,QAAQF,GAAQG,MAAMhC,EAAYiC,MAAMC,UAAUC,MAAMT,KAAMU,UAAW,IAEnGC,QAAQC,KAAK,cAAgBT,EAAS,mCAGvCC,GAAgBlC,MAEpBA,KAAK2C,KAAK,WACbjD,EAAE4B,KAAKtB,KAAM,eAAiB,GAAMN,GAAEU,WAAWJ,KAAMgC,OAIhEY","file":"rocketbelt.busy-button.min.js","sourcesContent":["(function($) {\n  $.busyButton = function(el) {\n    var base = this;\n    base.el = el;\n    base.$el = $(el);\n    base.$el.data(\"busyButton\", base);\n\n    base.init = function(){\n      base.opts = $.extend({}, $.busyButton.defaultOptions);\n      base.opts.baseText = base.$el.text() || base.opts.baseText;\n      base.opts.busyText = base.$el.data('busy-text') || base.opts.busyText;\n\n\n      // Build Button DOM\n      (base.$el).empty().append(addEventEls)\n\n      // Init Variables\n      var btnChild = (base.$el).children('.button-busy-text');\n      var btnClass = base.opts.busyText ? 'button-busy button-busy-with-text' : 'button-busy';\n\n      // Event attachment\n      base.$el.on('click', function() {\n        buttonActionBusy.call(this, btnChild, btnClass);\n      });\n      base.$el.on('buttonActionComplete', function() {\n        buttonActionComplete.call(this, btnChild, base.opts.baseText, btnClass);\n      });\n    };\n\n    base.init();\n\n    function addEventEls () {\n      var textEl = '<span class=\"button-busy-text\">' + base.opts.baseText + '</span>';\n      var busyIcon = '<span class=\"button-busy-icon\"></span>';\n      var newStructure = textEl + busyIcon;\n\n      return newStructure;\n    }\n\n    function buttonActionBusy(btnChild, btnClass){\n\n      var target = $(this);\n      var baseWidth = target.outerWidth()\n      btnChild.text(base.opts.busyText ? base.opts.busyText : base.opts.baseText)\n      \n      target.prop('disabled',true).css('min-width',baseWidth).addClass(btnClass);\n\n        // Sample Event Trigger\n        base.$el.trigger({\n            type: \"busyButton.click\",\n            el: base.el\n        });\n      }\n    };\n\n    function buttonActionComplete (btnChild, btnText, btnClass) {\n      btnChild.text(btnText);\n      $(this).prop('disabled',false).css('min-width', 'auto').removeClass(btnClass)\n    }\n\n    $.busyButton.defaultOptions = {\n        baseText: '',\n        busyText: null\n    };\n\n    $.fn.busyButton = function(options){\n        var busyButton, method, methodResult;\n        if ( typeof options === 'string' ){\n            method = options;\n            busyButton = this.data('busyButton');\n            if (busyButton) {\n                if (busyButton.methods[method]) {\n                    methodResult = busyButton.methods[method].apply(busyButton, Array.prototype.slice.call( arguments, 1 ) );\n                } else {\n                    console.warn('The method ' + method + ' does not exist in busyButton.');\n                }\n            }\n            return methodResult || this;\n        }\n        return this.each(function(){\n            $.data(this, 'busyButton') || ( new $.busyButton(this, options) );\n        });\n    };\n \n})(jQuery);"],"sourceRoot":"../.."}