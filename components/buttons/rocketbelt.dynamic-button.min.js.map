{"version":3,"sources":["components/buttons/rocketbelt.dynamic-button.min.js"],"names":["$","dynamicButton","el","buttonActionBusy","btnClass","baseWidth","btn","this","find","text","base","opts","busyText","baseText","prop","css","addClass","$el","trigger","type","buttonActionComplete","statusMsg","customDelay","stateText","btnStateIcon","textSlot","delay","recognizedMsg","outerWidth","hide","indexOf","removeClass","show","setTimeout","buttonReset","data","init","dynamicElements","extend","defaultOptions","successText","failureText","empty","append","on","e","call","fn","options","method","methodResult","methods","apply","Array","prototype","slice","arguments","console","warn","each","jQuery"],"mappings":"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","file":"rocketbelt.dynamic-button.min.js","sourcesContent":["(function ($) {\n  $.dynamicButton = function (el) {\n    var base = this;\n    base.el = el;\n    base.$el = $(el);\n    base.$el.data('dynamicButton', base);\n\n    base.init = function () {\n      base.opts = $.extend({}, $.dynamicButton.defaultOptions);\n      base.opts.baseText = base.$el.text() || base.opts.baseText;\n      base.opts.busyText = base.$el.data('busy-text') || base.opts.busyText;\n      base.opts.successText = base.$el.data('success-text') || base.opts.successText;\n      base.opts.failureText = base.$el.data('failure-text') || base.opts.failureText;\n\n      function dynamicElements() {\n        var textEl = '<span class=\"button-state-text\">' + base.opts.baseText + '</span>';\n        var busyIcon = '<span class=\"button-state-icon\"></span>';\n        var newStructure = textEl + busyIcon;\n\n        return newStructure;\n      }\n\n\n      // Build Button DOM\n      (base.$el)\n      .empty()\n        .append(dynamicElements);\n\n      // Init Variables\n      var baseText = base.opts.baseText;\n      // Because button has to go into a busy state first, we initilize btnClass with \"busy\" classes\n      var btnClass = base.opts.busyText ? 'button-busy button-state-with-text' : 'button-busy';\n      var baseWidth = base.$el.outerWidth();\n\n      // Event attachment\n      base.$el.on('click', function (e) {\n        buttonActionBusy.call(this, btnClass, baseWidth);\n      });\n\n      base.$el.on('buttonActionComplete', function (e, statusMsg, customDelay) {\n        if (statusMsg === 'success') {\n          var stateText = base.opts.successText;\n        }\n        if (statusMsg === 'failure') {\n          var stateText = base.opts.failureText;\n        }\n        buttonActionComplete.call(this, statusMsg, customDelay, btnClass, baseWidth, baseText, stateText);\n      });\n    };\n\n    base.init();\n\n    function buttonActionBusy(btnClass, baseWidth) {\n      // busyClass arg here is determined whether/not busy-state has text\n      var btn = $(this),\n        textSlot = btn.find('.button-state-text');\n\n      textSlot.text(base.opts.busyText ? base.opts.busyText : base.opts.baseText);\n      btn.prop('disabled', true)\n        .css('min-width', baseWidth)\n        .addClass(btnClass);\n\n      base.$el.trigger({\n        type: 'dynamicButton.busy',\n        el: base.el\n      });\n    }\n\n    function buttonActionComplete(statusMsg, customDelay, btnClass, baseWidth, baseText, stateText) {\n      var btn = $(this),\n        btnStateIcon = btn.find('.button-state-icon'),\n        textSlot = btn.find('.button-state-text'),\n        delay = customDelay || 0;\n\n      var recognizedMsg = ['success', 'failure'];\n\n      btn.css('min-width', btn.outerWidth());\n      btnStateIcon.hide();\n\n      if (recognizedMsg.indexOf(statusMsg) > -1) {\n        delay = customDelay || 2000;\n\n        btn.removeClass(btnClass);\n        btnClass = stateText ? 'button-state-with-text' : '';\n        btnClass += ' button-' + statusMsg;\n\n        btn.css('min-width', baseWidth);\n        btn.addClass(btnClass);\n        textSlot.text(stateText);\n      }\n\n      btnStateIcon.show();\n\n      setTimeout(function () {\n        buttonReset(btn, btnClass, textSlot, baseText);\n      }, delay);\n    }\n\n    function buttonReset(btn, btnClass, textSlot, baseText) {\n      textSlot.text(baseText);\n      btn.prop('disabled', false)\n        .removeClass(btnClass);\n    }\n\n  };\n\n  $.dynamicButton.defaultOptions = {\n    baseText: '',\n    busyText: null\n  };\n\n  $.fn.dynamicButton = function (options) {\n    var dynamicButton, method, methodResult;\n    if (typeof options === 'string') {\n      method = options;\n      dynamicButton = this.data('dynamicButton');\n      if (dynamicButton) {\n        if (dynamicButton.methods[method]) {\n          methodResult = dynamicButton.methods[method].apply(dynamicButton, Array.prototype.slice.call(arguments, 1));\n        } else {\n          console.warn('The method ' + method + ' does not exist in dynamicButton.');\n        }\n      }\n      return methodResult || this;\n    }\n    return this.each(function () {\n      $.data(this, 'dynamicButton') || (new $.dynamicButton(this, options));\n    });\n  };\n})(jQuery);\n"],"sourceRoot":"../.."}