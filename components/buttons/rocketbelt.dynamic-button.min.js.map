{"version":3,"sources":["components/buttons/rocketbelt.dynamic-button.min.js"],"names":["$","dynamicButton","el","buttonActionBusy","btnClass","baseWidth","btn","this","textSlot","find","text","base","opts","busyText","baseText","prop","css","addClass","$el","trigger","type","buttonActionComplete","statusMsg","customDelay","stateText","btnStateIcon","delay","recognizedMsg","outerWidth","hide","indexOf","removeClass","show","setTimeout","buttonReset","data","init","dynamicElements","textEl","busyIcon","newStructure","extend","defaultOptions","successText","failureText","empty","append","on","e","call","fn","options","method","methodResult","methods","apply","Array","prototype","slice","arguments","console","warn","each","jQuery"],"mappings":"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","file":"rocketbelt.dynamic-button.min.js","sourcesContent":["(function($) {\n  $.dynamicButton = function(el) {\n    var base = this;\n    base.el = el;\n    base.$el = $(el);\n    base.$el.data(\"dynamicButton\", base);\n\n    base.init = function(){\n      base.opts = $.extend({}, $.dynamicButton.defaultOptions);\n      base.opts.baseText = base.$el.text() || base.opts.baseText;\n      base.opts.busyText = base.$el.data('busy-text') || base.opts.busyText;\n      base.opts.successText = base.$el.data('success-text') || base.opts.successText;\n      base.opts.failureText = base.$el.data('failure-text') || base.opts.failureText;\n\n      function dynamicElements () {\n        var textEl = '<span class=\"button-state-text\">' + base.opts.baseText + '</span>';\n        var busyIcon = '<span class=\"button-state-icon\"></span>';\n        var newStructure = textEl + busyIcon;\n\n        return newStructure;\n      }\n\n\n      // Build Button DOM\n      (base.$el).empty().append(dynamicElements);\n\n      // Init Variables\n      var baseText = base.opts.baseText;\n      // Because button has to go into a busy state first, we initilize btnClass with \"busy\" classes\n      var btnClass = base.opts.busyText ? 'button-busy button-state-with-text' : 'button-busy';\n      var baseWidth = base.$el.outerWidth();\n\n      // Event attachment\n      base.$el.on('click', function(e) {\n        buttonActionBusy.call(this, btnClass, baseWidth);\n      });\n\n      base.$el.on('buttonActionComplete', function(e, statusMsg, customDelay) {\n        if (statusMsg === 'success') { var stateText = base.opts.successText}\n        if (statusMsg === 'failure') { var stateText = base.opts.failureText}\n        buttonActionComplete.call(this, statusMsg, customDelay, btnClass, baseWidth, baseText, stateText);\n      });\n\n    };\n\n    base.init();\n\n    function buttonActionBusy(btnClass, baseWidth){\n      // busyClass arg here is determined whether/not busy-state has text\n      var btn = $(this),\n      textSlot = btn.find('.button-state-text');\n      \n      textSlot.text(base.opts.busyText ? base.opts.busyText : base.opts.baseText);\n      btn.prop('disabled',true).css('min-width',baseWidth).addClass(btnClass);\n\n      base.$el.trigger({\n          type: \"dynamicButton.busy\",\n          el: base.el\n       });\n    }\n\n    function buttonActionComplete (statusMsg, customDelay, btnClass, baseWidth, baseText, stateText) {\n      var btn = $(this),\n      btnStateIcon = btn.find('.button-state-icon'),\n      textSlot = btn.find('.button-state-text'),\n      delay = customDelay || 0;\n\n      var recognizedMsg = ['success','failure'];\n\n      btn.css('min-width',btn.outerWidth());\n      btnStateIcon.hide();\n\n      if (recognizedMsg.indexOf(statusMsg) > -1) {\n        delay = customDelay || 2000;\n\n        btn.removeClass(btnClass);\n        btnClass = stateText ? 'button-state-with-text' : '';\n        btnClass += ' button-' + statusMsg;\n\n        btn.css('min-width',baseWidth);\n        btn.addClass(btnClass);\n        textSlot.text(stateText);\n      }\n\n      btnStateIcon.show();\n\n      setTimeout(function() {\n        buttonReset(btn, btnClass, textSlot, baseText)\n      }, delay)\n    }\n\n    function buttonReset (btn, btnClass, textSlot, baseText) {\n      textSlot.text(baseText);\n      btn.prop('disabled',false).css('min-width', 'auto').removeClass(btnClass);\n    }\n\n  };\n\n    $.dynamicButton.defaultOptions = {\n        baseText: '',\n        busyText: null\n    };\n\n    $.fn.dynamicButton = function(options){\n        var dynamicButton, method, methodResult;\n        if ( typeof options === 'string' ){\n            method = options;\n            dynamicButton = this.data('dynamicButton');\n            if (dynamicButton) {\n                if (dynamicButton.methods[method]) {\n                    methodResult = dynamicButton.methods[method].apply(dynamicButton, Array.prototype.slice.call( arguments, 1 ) );\n                } else {\n                    console.warn('The method ' + method + ' does not exist in dynamicButton.');\n                }\n            }\n            return methodResult || this;\n        }\n        return this.each(function(){\n            $.data(this, 'dynamicButton') || ( new $.dynamicButton(this, options) );\n        });\n    };\n \n})(jQuery);"],"sourceRoot":"../.."}