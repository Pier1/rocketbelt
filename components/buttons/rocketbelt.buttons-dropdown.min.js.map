{"version":3,"sources":["components/buttons/rocketbelt.buttons-dropdown.min.js"],"names":["rb","document","decorateDropdowns","triggers","querySelectorAll","onChange","e","target","input","checked","parentNode","querySelector","aria","expanded","setAttribute","i","triggersLen","trigger","label","ddContent","defaultButton","DEFAULT_BUTTON_SELECTOR","icon","triggerId","id","getShortId","ddLabelledBy","haspopup","hidden","addEventListener","el","closest","classList","contains","ddTriggers","length","k","ddTriggersLen","onDocumentReady","buttons"],"mappings":"AAAA,cACA,SAAEA,EAAIC,GAGJ,SAASC,IAoBP,IAAK,IApBPC,EAASD,EAATE,iBAA6B,4BACrBD,EAAWF,EAASG,OAKpBC,EAAW,SAACC,GAAlB,IAAMD,EAAWC,EAAAC,OACTC,EAAUD,EAAhBE,QACMA,EAAUD,EAAMC,OAAtBC,WAAAC,cAAA,4BAGIF,GAAJD,EAAIC,aAASG,EAAAC,UAAA,GACXL,EAAMM,aAAaF,EAAKC,QAAU,KADpCL,EAGOM,aAAAF,EAAAC,UAAA,GACLL,EAAMM,aAAaF,EAAKC,QAAU,KAK7BE,EAAI,EAAGA,EAAIC,EAAaD,IAAK,CAAtC,IAAKE,EAAWF,EAAIC,GACZC,EAAUd,EAAAA,WAAhBQ,cAAA,SACMO,EAAQD,EAAQP,WAAWC,cAAc,4BACzCQ,EAAYF,EAAQP,WAAWC,cAnBP,mBAoBxBS,EAAgBH,EAAQP,GAAWC,EAAcU,GAAjCJ,WAAiCI,EAAAA,aAG1CJ,EAAQP,WAAWC,cAAc,+BAAxCW,aAAOL,EAAQP,QAAWC,GAGhC,IAAMY,EAAYN,EAAQO,GAAKP,EAAQO,GAArB,WAAqCxB,EAAGyB,aAA1DR,EAAMM,GAAAA,EACNN,EAAAA,aAAaM,MAAbA,GAGIJ,IAAJC,EAAeI,GAAAE,EAGbT,EAAQH,aAAaF,EAAKe,UAAU,GAApCV,EAAQH,aAAaF,EAAKe,UAAU,GACpCV,EAAQH,aAAaF,EAAKC,MAAAA,mBAG1BM,EAAUL,aAAaF,EAAKgB,QAAQ,GAApCT,EAAUL,aAAaF,EAAKgB,WAA5BF,IAIFT,EAAQY,iBAAiB,SAAU,SAACvB,GAAQD,EAASC,KAAKL,EAA1D4B,iBAAA,QAAA,SAAAvB,GACD,IAAAwB,EAAAxB,EAAAC,OAIC,IAAKuB,EAAGC,QAAQ,sBAAwBD,EAAGE,UAAUC,SAAS,oBAA9D,IAAKH,IAFED,EAAAA,EAAiBzB,iBAAgB,4BAClC0B,EAANI,EAAAC,OACQJ,EAAH,EAAWK,EAAAC,EAAZD,IACFF,EAAMA,GAAAA,SAAsB9B,IAtDnC,IAAAQ,EAAKX,EAAAA,KA4DDD,EATDsC,gBAAApC,GAUDF,EAAAuC,QAAAvC,EAAAuC,YAIDvC,EAAGuC,QAAQrC,kBAAoBA,EAjEjC,CA+DEF,OAAGsC,GAAAA","file":"rocketbelt.buttons-dropdown.min.js","sourcesContent":["'use strict';\n((rb, document) => {\n  const aria = rb.aria;\n\n  function decorateDropdowns() {\n    const triggers = document.querySelectorAll('.button-dropdown_trigger');\n    const triggersLen = triggers.length;\n\n    const DEFAULT_BUTTON_SELECTOR = '.button, button';\n\n    const onChange = (e) => {\n      const input = e.target;\n      const checked = input.checked;\n      const ddContent = e.target.parentNode.querySelector('.button-dropdown_content');\n\n      if (checked) {\n        input.setAttribute(aria.expanded, true);\n        ddContent.setAttribute(aria.hidden, false);\n      } else {\n        input.setAttribute(aria.expanded, false);\n        ddContent.setAttribute(aria.hidden, true);\n      }\n    };\n\n    for (let i = 0; i < triggersLen; i++) {\n      const trigger = triggers[i];\n      const label = trigger.parentNode.querySelector('label');\n      const ddContent = trigger.parentNode.querySelector('.button-dropdown_content');\n      const defaultButton = trigger.parentNode.querySelector(DEFAULT_BUTTON_SELECTOR);\n      const ddLabelledBy = defaultButton.id ? defaultButton.id : `rb-a11y_${rb.getShortId()}`;\n\n      const icon = trigger.parentNode.querySelector('.button-dropdown_icon .icon');\n      icon.setAttribute(aria.hidden, true);\n\n      const triggerId = trigger.id ? trigger.id : `rb-a11y_${rb.getShortId()}`;\n      trigger.id = triggerId;\n      label.setAttribute('for', triggerId);\n\n      if (ddContent) {\n        defaultButton.id = ddLabelledBy;\n\n        trigger.setAttribute(aria.haspopup, true);\n        trigger.setAttribute(aria.expanded, false);\n        trigger.setAttribute(aria.label, 'Toggle Dropdown');\n\n        ddContent.setAttribute(aria.hidden, true);\n        ddContent.setAttribute(aria.labelledby, ddLabelledBy);\n      }\n\n      trigger.addEventListener('change', (e) => { onChange(e); });\n    }\n\n    document.addEventListener('click', (e) => {\n      const el = e.target;\n      if (!el.closest('.button-dropdown') && !el.classList.contains('.button-dropdown')) {\n        const ddTriggers = document.querySelectorAll('.button-dropdown_trigger');\n        const ddTriggersLen = ddTriggers.length;\n        for (let k = 0; k < ddTriggersLen; k++) {\n          ddTriggers[k].checked = false;\n        }\n      }\n    });\n  }\n\n  rb.onDocumentReady(decorateDropdowns);\n  rb.buttons = rb.buttons || {};\n  rb.buttons.decorateDropdowns = decorateDropdowns;\n})(window.rb, document);\n"],"sourceRoot":"../.."}