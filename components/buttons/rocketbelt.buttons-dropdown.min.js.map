{"version":3,"sources":["components/buttons/rocketbelt.buttons-dropdown.min.js"],"names":["rb","document","aria","decorateDropdowns","triggers","querySelectorAll","i","triggersLen","trigger","querySelector","label","parentNode","ddContent","defaultButton","DEFAULT_BUTTON_SELECTOR","icon","triggerId","id","getShortId","ddLabelledBy","setAttribute","haspopup","expanded","hidden","addEventListener","e","onChange","input","checked","target","el","classList","contains","closest","ddTriggers","ddTriggersLen","length","k","onDocumentReady","buttons"],"mappings":"AAAA,cACA,SAAEA,EAAIC,GAAL,IAAAC,EAAKD,EAAAA,KAGJ,SAASE,IAoBP,IApBF,IAAAC,EAASD,EAATE,iBAA6B,4BACrBD,EAAWH,EAASI,OAmBjBC,EAAI,EAAGA,EAAIC,EAAaD,IAAK,CAAtC,IAAKE,EAAWF,EAAIC,GACZC,EAAUJ,EAAAA,WAAhBK,cAAA,SACMC,EAAQF,EAAQG,WAAWF,cAAc,4BACzCG,EAAYJ,EAAQG,WAAWF,cAnBP,mBAoBxBI,EAAgBL,EAAQG,GAAWF,EAAcK,GAAjCN,WAAiCM,EAAAA,aAG1CN,EAAQG,WAAWF,cAAc,+BAAxCM,aAAOP,EAAQG,QAAWF,GAGhC,IAAMO,EAAYR,EAAQS,GAAKT,EAAQS,GAArB,WAAqCjB,EAAGkB,aAA1DV,EAAMQ,GAAAA,EACNR,EAAAA,aAAaQ,MAAbA,GAGIJ,IAAJC,EAAeI,GAAAE,EAGbX,EAAQY,aAAalB,EAAKmB,UAAU,GAApCb,EAAQY,aAAalB,EAAKmB,UAAU,GACpCb,EAAQY,aAAalB,EAAKoB,MAAAA,mBAG1BV,EAAUQ,aAAalB,EAAKqB,QAAQ,GAApCX,EAAUQ,aAAalB,EAAKqB,WAA5BJ,IAIFX,EAAQgB,iBAAiB,SAAU,SAACC,GAvCrB,IAACA,EAAZC,EACEC,EACAC,EAFFF,GAAYD,EAuCqCA,GAvCtCI,OACTF,EAAUE,EAAhBD,QACMA,EAAUD,EAAMC,OAAtBjB,WAAAF,cAAA,4BAGImB,GAAJD,EAAIC,aAAS1B,EAAAoB,UAAA,GACXK,EAAMP,aAAalB,EAAKoB,QAAU,KADpCK,EAGOP,aAAAlB,EAAAoB,UAAA,GACLK,EAAMP,aAAalB,EAAKoB,QAAU,MA8BsBrB,EAA1DuB,iBAAA,QAAA,SAAAC,GACD,IAAAK,EAAAL,EAAAI,OAIC,GAAIC,EAAGC,YAFT9B,EAASuB,QAAAA,sBACDM,EAAAA,UAANE,SAAA,oBAKE,IAJF,IAAOD,EACFD,EAAGG,iBAAQ,4BAERC,EAAajC,EAASI,OACtB8B,EAAAA,EAAAA,EAAgBD,EAAWE,IACjCF,EAAaG,GAAGA,SAAIF,IAO1BnC,EAAGsC,gBAAgBnC,GAAnBH,EAAGsC,QAAAA,EAAAA,SAAgBnC,GACnBH,EAAGuC,QAAHpC,kBAAAA,EAlEF,CAmEEH,OAAGuC,GAAQpC","file":"rocketbelt.buttons-dropdown.min.js","sourcesContent":["'use strict';\n((rb, document) => {\n  const aria = rb.aria;\n\n  function decorateDropdowns() {\n    const triggers = document.querySelectorAll('.button-dropdown_trigger');\n    const triggersLen = triggers.length;\n\n    const DEFAULT_BUTTON_SELECTOR = '.button, button';\n\n    const onChange = (e) => {\n      const input = e.target;\n      const checked = input.checked;\n      const ddContent = e.target.parentNode.querySelector('.button-dropdown_content');\n\n      if (checked) {\n        input.setAttribute(aria.expanded, true);\n        ddContent.setAttribute(aria.hidden, false);\n      } else {\n        input.setAttribute(aria.expanded, false);\n        ddContent.setAttribute(aria.hidden, true);\n      }\n    };\n\n    for (let i = 0; i < triggersLen; i++) {\n      const trigger = triggers[i];\n      const label = trigger.parentNode.querySelector('label');\n      const ddContent = trigger.parentNode.querySelector('.button-dropdown_content');\n      const defaultButton = trigger.parentNode.querySelector(DEFAULT_BUTTON_SELECTOR);\n      const ddLabelledBy = defaultButton.id ? defaultButton.id : `rb-a11y_${rb.getShortId()}`;\n\n      const icon = trigger.parentNode.querySelector('.button-dropdown_icon .icon');\n      icon.setAttribute(aria.hidden, true);\n\n      const triggerId = trigger.id ? trigger.id : `rb-a11y_${rb.getShortId()}`;\n      trigger.id = triggerId;\n      label.setAttribute('for', triggerId);\n\n      if (ddContent) {\n        defaultButton.id = ddLabelledBy;\n\n        trigger.setAttribute(aria.haspopup, true);\n        trigger.setAttribute(aria.expanded, false);\n        trigger.setAttribute(aria.label, 'Toggle Dropdown');\n\n        ddContent.setAttribute(aria.hidden, true);\n        ddContent.setAttribute(aria.labelledby, ddLabelledBy);\n      }\n\n      trigger.addEventListener('change', (e) => { onChange(e); });\n    }\n\n    document.addEventListener('click', (e) => {\n      const el = e.target;\n      if (el.classList &&\n          !el.closest('.button-dropdown') &&\n          !el.classList.contains('.button-dropdown')) {\n        const ddTriggers = document.querySelectorAll('.button-dropdown_trigger');\n        const ddTriggersLen = ddTriggers.length;\n        for (let k = 0; k < ddTriggersLen; k++) {\n          ddTriggers[k].checked = false;\n        }\n      }\n    });\n  }\n\n  rb.onDocumentReady(decorateDropdowns);\n  rb.buttons = rb.buttons || {};\n  rb.buttons.decorateDropdowns = decorateDropdowns;\n})(window.rb, document);\n"],"sourceRoot":"../.."}