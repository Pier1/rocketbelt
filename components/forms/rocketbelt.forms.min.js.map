{"version":3,"sources":["components/forms/rocketbelt.forms.min.js"],"names":["rb","document","onClassMutation","mutations","mutationsLen","k","mutation","el","target","querySelector","describedByErrorId","describedByIds","oldValue","classList","contains","setAttribute","aria","invalid","DESCRIBED_BY_ERROR_ID_ATTR","getAttribute","message","role","i","push","join","removeAttribute","live","splice","describedby","decorateInputs","formEls","querySelectorAll","formElsLen","formEl","MutationObserver","observer","attributes","attributeOldValue","attributeFilter","messages","parentNode","observe","length","msgLen","hasAttribute","thisMsg","j","id","getShortId","trim","onDocumentReady","forms"],"mappings":"AAAA,cACA,SAAEA,EAAIC,GAIJ,SAASC,EAAgBC,GAGvB,IAAK,IAHPC,EAASF,EAAgBC,OAGdE,EAAI,EAAGA,EAAID,EAAcC,IAAK,CAAvC,IAAKC,EAAWD,EAAID,GACZE,EAAAA,EAAWH,OACXI,EAAKD,EAASE,WAApBC,cAAA,uBAGIC,EAAqB,GAArBA,KACAC,GAAAA,EAGsB,YAAtBL,EAASM,UAA0BN,EAASE,OAAOK,UAAUC,SAAS,YACxEP,EAAAQ,aAAAC,EAAAC,QAAA,QACAV,EAAqBU,EAAAA,aAArBC,GAEAP,GADAD,EAAAA,EAAAA,aAAwBS,EAAaD,aAAAA,MAAAA,MACpBX,QAAGY,GAGhBC,IAAJA,EAAIA,aAASJ,EAAAK,KAAA,SACXD,EAAQL,aAAaC,EAAKK,KAAM,WAIhC,IAAAC,IACAX,EAAcY,KAAAb,GACZC,EAAAA,aAAeY,EAAKb,YAAAA,EAApBc,KAAA,SAGH,YAAAlB,EAAAM,UAAAL,EAAAM,UAAAC,SAAA,aAEDP,EAAAQ,aAAAC,EAAAC,QAAA,SACAV,EAAqBU,EAAAA,aAArBC,GAEAP,GADAD,EAAAA,EAAAA,aAAwBS,EAAaD,aAAAA,MAAAA,MACpBX,QAAGY,GAGhBC,IAAJA,EAAIA,gBAAS,QACXA,EAAQK,gBAAgBT,EAAAU,MAIxBJ,GAAA,IACAX,EAAYgB,OAAAL,EAAA,GACVX,EAAAA,aAAegB,EAAfC,YAAAjB,EAAAa,KAAA,UAQV,SAASK,IAIP,IAAK,IAJPC,EAASD,EAAiBE,iBAAA,qFAClBD,EAAU7B,EAAS8B,OAGhBT,EAAI,EAAGA,EAAIU,EAAYV,IAAK,CAArC,IAAKW,EAAWX,EAAIU,GAGlB,IAAAE,iBAAA,SAAA/B,GAAAD,EAAAC,KACMgC,QAAWF,GAAIC,SAAiB,EAAAE,YAAA,EAAaC,mBAAA,EAAAC,iBAAA,WAA+B,IAAlFC,EAAAN,EAAAO,WAAAT,iBAAA,qCACAI,EAASM,EAATC,OAEA,GAAMH,EAAAA,EAAWN,CACjB,IAAMU,EAAkBD,GAEpBC,EAASC,aAAG5B,EAAAY,eACdjB,EAAqBsB,EAArBd,aAAAH,EAAAY,aAAA,KAGEjB,IAAAA,IAAAA,EAAAA,EAAAA,EAAoBsB,EAAOd,IAAAA,CAC5B,IAAA0B,EAAAN,EAAAO,GAIOC,EAAKF,EAAQE,GAAKF,EAAQE,GAArB,WAAqC/C,EAAGgD,aAFrDrC,GAAoBgC,EAApB,IAEQI,EAAKF,UAAaA,SAAQE,uBAChCpC,EAAAA,aAAAO,EAAA6B,GAICF,EAAAE,KAICF,EAAQE,GAAKA,GACdd,EAAAW,aAAA5B,EAAAY,cACFK,EAAAlB,aAAAC,EAAAY,YAAAjB,EAAAsC,UA1FR,IAAAjC,EAAKf,EAAAA,KACEe,EAAN,6BA+FGhB,EAAAkD,gBAAArB,GACF7B,EAAAmD,MAAAnD,EAAAmD,UAIDnD,EAAGmD,MAAMtB,eAAiBA,EArG5B,CAmGE7B,OAAGkD,GAAAA","file":"rocketbelt.forms.min.js","sourcesContent":["'use strict';\n((rb, document) => {\n  const aria = rb.aria;\n  const DESCRIBED_BY_ERROR_ID_ATTR = 'data-rb-describedbyerrorid';\n\n  function onClassMutation(mutations) {\n    const mutationsLen = mutations.length;\n\n    for (let k = 0; k < mutationsLen; k++) {\n      const mutation = mutations[k];\n      const el = mutation.target;\n      const message = el.parentNode.querySelector('.validation-message');\n\n      let describedByErrorId = '';\n      let describedByIds = [];\n      let i = -1;\n\n      if (mutation.oldValue !== 'invalid' && mutation.target.classList.contains('invalid')) {\n        // If \"invalid\" was added, do the decoratin'\n        el.setAttribute(aria.invalid, 'true');\n        describedByErrorId = el.getAttribute(DESCRIBED_BY_ERROR_ID_ATTR);\n        describedByIds = el.getAttribute(aria.describedby).split(' ');\n        i = describedByIds.indexOf(describedByErrorId);\n\n        if (message) {\n          message.setAttribute(aria.role, 'alert');\n          message.setAttribute(aria.live, 'polite');\n\n          // If a validation message exists && the related element is newly invalid,\n          // add message id to described-by\n          if (i === -1) {\n            describedByIds.push(describedByErrorId);\n            el.setAttribute(aria.describedby, describedByIds.join(' '));\n          }\n        }\n      } else if (mutation.oldValue === 'invalid' && !el.classList.contains('invalid')) {\n        // If \"invalid\" was removed\n        el.setAttribute(aria.invalid, 'false');\n        describedByErrorId = el.getAttribute(DESCRIBED_BY_ERROR_ID_ATTR);\n        describedByIds = el.getAttribute(aria.describedby).split(' ');\n        i = describedByIds.indexOf(describedByErrorId);\n\n        if (message) {\n          message.removeAttribute('role');\n          message.removeAttribute(aria.live);\n\n          // If a validation message exists && the related element longer invalid,\n          // remove message id from described-by\n          if (i > -1) {\n            describedByIds.splice(i, 1);\n            el.setAttribute(aria.describedby, describedByIds.join(' '));\n          }\n        }\n      }\n    }\n  }\n\n  function decorateInputs() {\n    const formEls = document.querySelectorAll('.form-group input, .form-group select, .form-group textarea, .form-group fieldset');\n    const formElsLen = formEls.length;\n\n    for (let i = 0; i < formElsLen; i++) {\n      const formEl = formEls[i];\n\n      // Set an observer to listen for .invalid.\n      const observer = new MutationObserver(mutations => { onClassMutation(mutations); });\n      observer.observe(formEl, { subtree: false, attributes: true, attributeOldValue: true, attributeFilter: ['class'] });\n\n      const messages = formEl.parentNode.querySelectorAll('.validation-message, .helper-text');\n      const msgLen = messages.length;\n\n      if (msgLen > 0) {\n        let describedByIds = '';\n\n        if (formEl.hasAttribute(aria.describedby)) {\n          describedByIds = `${formEl.getAttribute(aria.describedby)} `;\n        }\n\n        for (let j = 0; j < msgLen; j++) {\n          const thisMsg = messages[j];\n          const id = thisMsg.id ? thisMsg.id : `rb-a11y_${rb.getShortId()}`;\n          describedByIds += `${id} `;\n\n          if (thisMsg.classList.contains('validation-message')) {\n            formEl.setAttribute(DESCRIBED_BY_ERROR_ID_ATTR, id);\n          }\n\n          // Don't clobber any existing attributes!\n          if (!thisMsg.id) {\n            thisMsg.id = id;\n          }\n        }\n\n        if (!formEl.hasAttribute(aria.describedby)) {\n          formEl.setAttribute(aria.describedby, describedByIds.trim());\n        }\n      }\n    }\n  }\n\n  rb.onDocumentReady(decorateInputs);\n  rb.forms = rb.forms || {};\n  rb.forms.decorateInputs = decorateInputs;\n})(window.rb, document);\n"],"sourceRoot":"../.."}