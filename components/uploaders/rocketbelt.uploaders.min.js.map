{"version":3,"sources":["components/uploaders/rocketbelt.uploaders.min.js"],"names":["rb","document","$","activeClass","maxFilesClass","expandClickHandler","e","uploader","actualUploader","target","closest","expandUploader","classList","aria","role","removeAttribute","removeEventListener","fileInputOnchange","uploaders","files","config","preventDefaults","preventDefault","draggedOn","$dropArea","hasClass","find","css","addClass","draggedOff","removeClass","numCanAdd","dt","dataTransfer","handleFiles","forEach","eventName","body","addEventListener","addUploader","uploaderConfig","selector","querySelector","setAttribute","contains","handleDrop","scrim","createElement","add","scrimIcon","keydown","which","click","change","numFiles","maxFiles","Number","POSITIVE_INFINITY","progressBar","uploadProgress","fileNumber","percent","reduce","total","tot","curr","length","value","previewFile","file","reader","FileReader","getElementById","id","readAsDataURL","onloadend","img","src","result","f","size","push","dispatchEvent","CustomEvent","detail","button","targetId","innerHTML","label","once","dataset","imgToRemove","container","parentNode","removeChild","remove","filter","el","i","removedId","insertAdjacentElement","attr","uploadFile","formData","xhr","XMLHttpRequest","prepXhr","upload","postUri","updateProgress","loaded","readyState","status","send","filesToAdd","concat","_toConsumableArray","slice","initializeProgress","autoUpload","window","jQuery"],"mappings":"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","file":"rocketbelt.uploaders.min.js","sourcesContent":["'use strict';\n((rb, document, $) => {\n  const activeClass = 'uploader-dragged-on';\n  const maxFilesClass = 'uploader-max-files';\n\n  // Prevent default drag behaviors\n  ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {\n    document.body.addEventListener(eventName, preventDefaults);\n  });\n\n  rb.uploaders = rb.uploaders || {};\n\n  rb.uploaders.addUploader = (uploaderConfig) => {\n    if (uploaderConfig &&\n        uploaderConfig.selector) {\n      const uploader = document.querySelector(uploaderConfig.selector);\n      uploader.id = uploader.id || `rb_${rb.getShortId()}`;\n      uploaderConfig.id = uploader.id;\n\n      if (!uploader.classList.contains('uploader-expanded')) {\n        uploader.setAttribute(rb.aria.role, 'button');\n        uploader.setAttribute('tabindex', 0);\n      }\n\n      if (!uploader.classList.contains('uploader-mobile')) {\n        uploader.addEventListener('click', expandClickHandler);\n\n        ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {\n          uploader.addEventListener(eventName, preventDefaults);\n        });\n\n        ['dragenter', 'dragover'].forEach(eventName => {\n          uploader.addEventListener(eventName, draggedOn);\n        });\n\n        ['dragleave', 'drop'].forEach(eventName => {\n          uploader.addEventListener(eventName, draggedOff);\n        });\n\n        uploader.addEventListener('drop', handleDrop);\n\n        // Add scrim elements\n        const scrim = document.createElement('div');\n        scrim.classList.add('scrim');\n        uploader.insertAdjacentElement('afterbegin', scrim);\n\n        // Register drag-related listeners\n        const scrimIcon = document.createElement('div');\n        scrimIcon.classList.add('scrim_icon');\n        scrim.insertAdjacentElement('afterend', scrimIcon);\n      }\n\n      rb.uploaders.config = uploaderConfig;\n\n      // Register listener for keyboard input\n      $(uploader).find('.uploader_file-label').keydown((e) => {\n        // Since the browser's file input UI is hidden, we need to\n        // allow the label it's replaced with to be triggered via\n        // keyboard.\n        if ((e.which === 13 || e.which === 32)) {\n          $(e.target).click();\n        }\n      });\n\n      $(uploader).find('input[type=\"file\"]').change(fileInputOnchange);\n    }\n  };\n\n  function expandClickHandler(e) {\n    const actualUploader =\n      e.target.classList.contains('uploader') ? e.target : e.target.closest('.uploader');\n    expandUploader(actualUploader);\n  }\n\n  function expandUploader(uploader) {\n    uploader.classList.add('uploader-expanded');\n    uploader.removeAttribute(rb.aria.role);\n    uploader.removeAttribute('tabindex');\n\n    uploader.removeEventListener('click', expandClickHandler);\n  }\n\n  function fileInputOnchange(e) {\n    rb.uploaders.handleFiles(this.files, rb.uploaders.config);\n  }\n\n  function preventDefaults(e) {\n    e.preventDefault();\n    e.stopPropagation();\n  }\n\n  function draggedOn(e) {\n    const $dropArea =\n      $(e.target).hasClass(activeClass) ? $(e.target) : $(e.target).closest('.uploader');\n\n    if (!$dropArea.hasClass(activeClass)) {\n      $dropArea.find('.scrim, .scrim_icon').css('z-index', '1');\n      $dropArea.addClass(activeClass);\n    }\n  }\n\n  function draggedOff(e) {\n    const $dropArea =\n      $(e.target).hasClass(activeClass) ? $(e.target) : $(e.target).closest('.uploader');\n\n    if ($dropArea.hasClass(activeClass)) {\n      $dropArea.removeClass(activeClass);\n      $dropArea.find('.scrim, .scrim_icon').css('z-index', '-1');\n    }\n  }\n\n  rb.uploaders.numCanAdd = () => {\n    const numFiles = rb.uploaders.files ? rb.uploaders.files.length : 0;\n    const maxFiles = rb.uploaders.config.maxFiles || Number.POSITIVE_INFINITY;\n\n    return maxFiles - numFiles;\n  };\n\n  function handleDrop(e) {\n    if (rb.uploaders.numCanAdd() > 0) {\n      const dt = e.dataTransfer;\n      const files = dt.files;\n\n      rb.uploaders.handleFiles(files, rb.uploaders.config);\n    }\n  }\n\n  let uploadProgress = [];\n  const progressBar = document.querySelector('.uploader progress');\n\n  function initializeProgress(numFiles) {\n    progressBar.value = 0;\n    uploadProgress = [];\n\n    for (let i = numFiles; i > 0; i--) {\n      uploadProgress.push(0);\n    }\n  }\n\n  function updateProgress(fileNumber, percent) {\n    uploadProgress[fileNumber] = percent;\n    const total = uploadProgress.reduce((tot, curr) => tot + curr, 0) / uploadProgress.length;\n\n    progressBar.value = total;\n  }\n\n  rb.uploaders.handleFiles = function handleFiles(files) {\n    const numCanAdd = rb.uploaders.numCanAdd();\n\n    const filesToAdd = [...files].slice(0, numCanAdd);\n\n    initializeProgress(filesToAdd.length);\n\n    if (rb.uploaders.config.autoUpload) {\n      filesToAdd.forEach(uploadFile);\n    }\n\n    filesToAdd.forEach(previewFile);\n  };\n\n  function previewFile(file) {\n    rb.uploaders.files = rb.uploaders.files || [];\n\n    const reader = new FileReader();\n    reader.size = file.size;\n\n    document.getElementById(rb.uploaders.config.id)\n      .dispatchEvent(new CustomEvent('rb.uploaders.addingFile'));\n\n    reader.readAsDataURL(file);\n    reader.onloadend = () => {\n      const img = document.createElement('img');\n      img.src = reader.result;\n      img.id = `rb_${rb.getShortId()}`;\n      img.classList.add('uploader_thumb');\n\n      const f = { id: img.id, file: reader.result, size: reader.size };\n      rb.uploaders.files.push(f);\n\n      document.getElementById(rb.uploaders.config.id)\n        .dispatchEvent(new CustomEvent('rb.uploaders.fileAdded', { detail: f }));\n\n      const button = document.createElement('button');\n      button.dataset.targetId = img.id;\n      button.classList.add('uploader_thumbs_remove-button');\n      button.innerHTML = '&times;';\n      button.setAttribute(rb.aria.label, 'Remove this image');\n\n      rb.once(button, 'click', (e) => {\n        const id = e.target.dataset.targetId;\n        const imgToRemove = document.querySelector(`#${id}`);\n        const container = e.target.closest('.uploader');\n\n        imgToRemove.parentNode.removeChild(imgToRemove);\n        e.target.parentNode.removeChild(e.target);\n\n        if (container.querySelectorAll('.uploader_thumb').length === 0) {\n          container.classList.remove('uploader-has-thumbs');\n        }\n\n        rb.uploaders.files = rb.uploaders.files.filter((el) => {\n          return el.id !== id;\n        });\n\n        if (rb.uploaders.numCanAdd() > 0) {\n          const $dropArea = $(`#${rb.uploaders.config.id}`);\n\n          $('.uploader #uploader_file-input, .uploader .uploader_file-label')\n            .removeAttr('disabled');\n\n          $dropArea.removeClass(maxFilesClass);\n        }\n\n        const i = { removedId: id };\n        document.getElementById(rb.uploaders.config.id)\n          .dispatchEvent(new CustomEvent('rb.uploaders.fileRemoved', { detail: i }));\n      });\n\n      document.querySelector('.uploader_thumbs').appendChild(img);\n      document.querySelector(`#${img.id}`).insertAdjacentElement('afterend', button);\n\n      document.querySelector(`#${rb.uploaders.config.id}`).classList.add('uploader-has-thumbs');\n\n      if (!rb.uploaders.numCanAdd()) {\n        const $dropArea = $(`#${rb.uploaders.config.id}`);\n\n        $('.uploader #uploader_file-input, .uploader .uploader_file-label').attr('disabled', '');\n\n        $dropArea.addClass(maxFilesClass);\n      }\n    };\n  }\n\n  function uploadFile(file, i) {\n    let formData = new FormData();\n    let xhr = new XMLHttpRequest();\n\n    formData = rb.uploaders.config.prepFormData(formData);\n\n    if (rb.uploaders.config.prepXhr) {\n      xhr = rb.uploaders.config.prepXhr(xhr);\n    }\n\n    xhr.open('POST', rb.uploaders.config.postUri, true);\n    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n\n    xhr.upload.addEventListener('progress', (e) => {\n      updateProgress(i, (e.loaded * 100.0 / e.total) || 100);\n    });\n\n    xhr.addEventListener('readystatechange', (e) => {\n      if (xhr.readyState === 4 && xhr.status === 200) {\n        updateProgress(i, 100);\n        // rb.uploaders.onSuccess();\n      } else if (xhr.readyState === 4 && xhr.status !== 200) {\n        // rb.uploaders.onError(e);\n      }\n    });\n\n    xhr.send(formData);\n  }\n})(window.rb, document, jQuery);\n\n"],"sourceRoot":"../.."}