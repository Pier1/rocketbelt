{"version":3,"sources":["components/uploaders/rocketbelt.uploaders.min.js"],"names":["rb","document","$","activeClass","maxFilesClass","actualUploader","classList","el","contains","closest","mobileOpenPhotos","e","getClosestUploader","expandClickHandler","expandUploader","target","click","uploader","removeAttribute","add","aria","role","getInstanceForId","uploaders","filter","id","i","config","isMobile","stopPropagation","this","files","draggedOn","preventDefault","$dropArea","hasClass","$target","draggedOff","css","addClass","removeClass","uploaderInstance","numFiles","maxFiles","Number","handleFiles","numCanAdd","filesToAdd","createPreview","filesAsBinary","instance","instanceEl","reader","scaledImageObj","img","createElement","src","result","file","f","dataURItoBlob","size","push","CustomEvent","detail","dispatchEvent","button","dataset","targetId","label","setAttribute","querySelector","imgToRemove","selector","parentNode","removeChild","container","querySelectorAll","length","remove","removeAttr","removedId","getElementById","appendChild","insertAdjacentElement","u","attr","forEach","eventName","body","addEventListener","preventDefaults","addUploader","uploaderConfig","handleDrop","scrim","scrimIcon","instances","find","keydown","which","inputId","$input","getShortId","change","fileInputOnchange","POSITIVE_INFINITY","dataTransfer","uploaderId","oldDimensions","width","height","FileReader","readAsDataURL","onloadend","data","downscaleImage","fileContents","Promise","resolve","reject","image","url","Image","dataType","cache","done","EXIF","getData","srcOrientation","newDimensions","newWidth","newHeight","getTag","canvas","maxWidth","maxHeight","floor","Math","ctx","getContext","transform","drawImage","newDataUrl","toDataURL","newFileSize","ceil","split","onerror","then","window","jQuery"],"mappings":"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","file":"rocketbelt.uploaders.min.js","sourcesContent":["'use strict';\n((rb, document, $) => {\n  const activeClass = 'uploader-dragged-on';\n  const maxFilesClass = 'uploader-max-files';\n\n  // Prevent default drag behaviors\n  ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {\n    document.body.addEventListener(eventName, preventDefaults);\n  });\n\n  rb.uploaders = rb.uploaders || {};\n\n  rb.uploaders.addUploader = (uploaderConfig) => {\n    let uploader;\n\n    if (uploaderConfig &&\n        uploaderConfig.selector) {\n      uploader = document.querySelector(uploaderConfig.selector);\n      uploader.id = uploader.id || `rb_${rb.getShortId()}`;\n      uploaderConfig.id = uploader.id;\n\n      uploaderConfig.isMobile =\n        uploaderConfig.isMobile ||\n        (uploader && uploader.classList && uploader.classList.contains('uploader-mobile')) ||\n        document.querySelectorAll('.mobile .uploader, .tablet .uploader').length > 0;\n\n      if (uploader && uploader.classList) {\n        if (uploaderConfig.isMobile) {\n          uploader.classList.add('uploader-mobile');\n          uploader.addEventListener('click', mobileOpenPhotos);\n        }\n\n        if (!uploader.classList.contains('uploader-expanded')) {\n          uploader.setAttribute(rb.aria.role, 'button');\n          uploader.setAttribute('tabindex', 0);\n        }\n      }\n\n      if (!uploaderConfig.isMobile) {\n        uploader.addEventListener('click', expandClickHandler);\n\n        ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {\n          uploader.addEventListener(eventName, preventDefaults);\n        });\n\n        ['dragenter', 'dragover'].forEach(eventName => {\n          uploader.addEventListener(eventName, draggedOn);\n        });\n\n        ['dragleave', 'drop'].forEach(eventName => {\n          uploader.addEventListener(eventName, draggedOff);\n        });\n\n        uploader.addEventListener('drop', handleDrop);\n\n        // Add scrim elements\n        const scrim = document.createElement('div');\n        scrim.classList.add('scrim');\n        uploader.insertAdjacentElement('afterbegin', scrim);\n\n        // Register drag-related listeners\n        const scrimIcon = document.createElement('div');\n        scrimIcon.classList.add('scrim_icon');\n        scrim.insertAdjacentElement('afterend', scrimIcon);\n      }\n\n      rb.uploaders.instances = rb.uploaders.instances || [];\n      rb.uploaders.instances.push({\n        config: uploaderConfig,\n        files: []\n      });\n\n      // Register listener for keyboard input\n      $(uploader).find('.uploader_file-label').keydown((e) => {\n        // Since the browser's file input UI is hidden, we need to\n        // allow the label it's replaced with to be triggered via\n        // keyboard.\n        if ((e.which === 13 || e.which === 32)) {\n          $(e.target).click();\n        }\n      });\n\n      const $input = $(uploader).find('input[type=\"file\"]');\n      const inputId = $input[0].id || `rb_${rb.getShortId()}`;\n\n      $input.attr('id', inputId);\n      $(uploader).find('.uploader_file-label')\n        .attr('for', inputId)\n        .attr('aria-role', 'button')\n        .attr('tabindex', 0);\n\n      $input.change(fileInputOnchange);\n    }\n\n    return uploader.id;\n  };\n\n  function getClosestUploader(el) {\n    let actualUploader;\n\n    if (el.classList) {\n      actualUploader =\n      el.classList.contains('uploader') ? el : el.closest('.uploader');\n    }\n\n    return actualUploader;\n  }\n\n  function mobileOpenPhotos(e) {\n    if(getClosestUploader(e.target)) {\n      $(`#${getClosestUploader(e.target).id} input[type=\"file\"]`).click();\n    }\n  }\n\n  function expandClickHandler(e) {\n    expandUploader(getClosestUploader(e.target));\n  }\n\n  function expandUploader(uploader) {\n    if (uploader && uploader.classList) {\n      if (uploader.classList) {\n        uploader.classList.add('uploader-expanded');\n      }\n\n      uploader.removeAttribute(rb.aria.role);\n      uploader.removeAttribute('tabindex');\n\n      uploader.removeEventListener('click', mobileOpenPhotos);\n      uploader.removeEventListener('click', expandClickHandler);\n    }\n  }\n\n  function getInstanceForId(id) {\n    return rb.uploaders.instances.filter((i) => {\n      return i.config.id === id;\n    })[0];\n  }\n\n  rb.uploaders.getInstanceForId = getInstanceForId;\n\n  function fileInputOnchange(e) {\n    const id = getClosestUploader(e.target).id;\n    const instance = getInstanceForId(id);\n    const config = instance.config;\n\n    if (config.isMobile) {\n      expandClickHandler(e);\n    }\n\n    rb.uploaders.handleFiles(this.files, config.id);\n  }\n\n  function preventDefaults(e) {\n    e.preventDefault();\n    e.stopPropagation();\n  }\n\n  function draggedOn(e) {\n    const $target = $(e.target);\n\n    const $dropArea =\n      $target.hasClass(activeClass) ? $target : $target.closest('.uploader');\n\n    if (!$dropArea.hasClass(activeClass)) {\n      $dropArea.find('.scrim, .scrim_icon').css('z-index', '1');\n      $dropArea.addClass(activeClass);\n    }\n  }\n\n  function draggedOff(e) {\n    const $target = $(e.target);\n\n    const $dropArea =\n      $target.hasClass(activeClass) ? $target : $target.closest('.uploader');\n\n    if ($dropArea.hasClass(activeClass)) {\n      $dropArea.removeClass(activeClass);\n      $dropArea.find('.scrim, .scrim_icon').css('z-index', '-1');\n    }\n  }\n\n  rb.uploaders.numCanAdd = (id) => {\n    const uploaderInstance = getInstanceForId(id);\n    const numFiles = uploaderInstance.files ? uploaderInstance.files.length : 0;\n    const maxFiles = uploaderInstance.config.maxFiles || Number.POSITIVE_INFINITY;\n\n    return maxFiles - numFiles;\n  };\n\n  function handleDrop(e) {\n    const uploader = getClosestUploader(e.target);\n\n    if (rb.uploaders.numCanAdd(uploader.id) > 0) {\n      const dt = e.dataTransfer;\n      const files = dt.files;\n\n      rb.uploaders.handleFiles(files, uploader.id);\n    }\n  }\n\n  rb.uploaders.handleFiles = function handleFiles(files, uploaderId) {\n    const numCanAdd = rb.uploaders.numCanAdd(uploaderId);\n\n    const filesToAdd = [...files].slice(0, numCanAdd);\n    filesToAdd.forEach(file => { processFile(file, uploaderId); });\n  };\n\n  function getNewDimensions(oldDimensions) {\n    const width = oldDimensions.width;\n    const height = oldDimensions.height;\n    const maxWidth = 1500;\n    const maxHeight = 1500;\n    let newWidth;\n    let newHeight;\n    if (width <= maxWidth && height <= maxHeight) {\n      return { 'width': width, 'height': height };\n    }\n\n    if (height > width) {\n      if (height > maxHeight) {\n        newHeight = maxHeight;\n        newWidth = Math.floor((width / height) * newHeight);\n      } else {\n        return { 'width': width, 'height': height };\n      }\n    } else {\n      if (width > maxWidth) {\n        newWidth = maxWidth;\n        newHeight = Math.floor((height / width) * newWidth);\n      } else {\n        return { 'width': width, 'height': height };\n      }\n    }\n\n    return { 'width': newWidth, 'height': newHeight };\n  }\n\n  function downscaleImage(data) {\n    return new Promise((resolve, reject) => {\n      // Provide default values\n      const imageType = 'image/png';\n      const encoderOptions = 0.9;\n\n      // Create a temporary image so that we can compute the height of the downscaled image.\n      let image = new Image();\n      image.src = data;\n      image.onload = () => {\n        let srcOrientation = 1;\n        jQuery.ajax({\n          url: 'https://cdn.jsdelivr.net/npm/exif-js',\n          dataType: 'script',\n          cache: true\n        }).done(function () {\n          EXIF.getData(image, function () {\n            srcOrientation = EXIF.getTag(this, 'Orientation');\n            const newDimensions = getNewDimensions({ 'width': image.width, 'height': image.height });\n            const newWidth = newDimensions.width;\n            const newHeight = newDimensions.height;\n\n            // Create a temporary canvas to draw the downscaled image on.\n            let canvas = document.createElement('canvas');\n            if (srcOrientation > 4 && srcOrientation < 9) {\n              canvas.width = newHeight;\n              canvas.height = newWidth;\n            } else {\n              canvas.width = newWidth;\n              canvas.height = newHeight;\n            }\n\n            // Draw the downscaled image on the canvas and return the new data URL.\n            // Have to use 'let' instead of 'const' so it can be mutable\n            let ctx = canvas.getContext('2d');\n            switch (srcOrientation) {\n            case 2: ctx.transform(-1, 0, 0, 1, newWidth, 0); break;\n            case 3: ctx.transform(-1, 0, 0, -1, newWidth, newHeight); break;\n            case 4: ctx.transform(1, 0, 0, -1, 0, newHeight); break;\n            case 5: ctx.transform(0, 1, 1, 0, 0, 0); break;\n            case 6: ctx.transform(0, 1, -1, 0, newHeight, 0); break;\n            case 7: ctx.transform(0, -1, -1, 0, newHeight, newWidth); break;\n            case 8: ctx.transform(0, -1, 1, 0, 0, newWidth); break;\n            default: break;\n            }\n            ctx.drawImage(image, 0, 0, newWidth, newHeight);\n            const newDataUrl = canvas.toDataURL(imageType, encoderOptions);\n            const newFileSize = Math.ceil(newDataUrl.split(',')[1].length * 0.75);\n            resolve({ 'file': newDataUrl, 'size': newFileSize });\n          });\n        });\n      };\n      image.onerror = reject;\n    });\n  }\n\n  function createPreview(filesAsBinary, instance, instanceEl, reader, scaledImageObj) {\n    const img = document.createElement('img');\n    img.src = filesAsBinary ? reader.result : scaledImageObj.file;\n    img.id = `rb_${rb.getShortId()}`;\n    img.classList.add('uploader_thumb');\n\n    const f = {\n      id: img.id,\n      file: filesAsBinary ? rb.dataURItoBlob(reader.result) : scaledImageObj.file,\n      size: filesAsBinary ? reader.size : scaledImageObj.size\n    };\n    instance.files.push(f);\n\n    instanceEl\n      .dispatchEvent(new CustomEvent('rb.uploaders.fileAdded', { detail: f }));\n\n    const button = document.createElement('button');\n    button.dataset.targetId = img.id;\n    button.classList.add('uploader_thumbs_remove-button');\n    button.innerHTML = '&times;';\n    button.setAttribute(rb.aria.label, 'Remove this image');\n\n    rb.once(button, 'click', (e) => {\n      const id = e.target.dataset.targetId;\n      const imgToRemove = document.querySelector(`#${id}`);\n      const container = e.target.closest('.uploader');\n      const uploader = document.querySelector(instance.config.selector);\n\n      imgToRemove.parentNode.removeChild(imgToRemove);\n      e.target.parentNode.removeChild(e.target);\n      $(uploader).find('input[type=\"file\"]').val('');\n\n      if (container && container.querySelectorAll('.uploader_thumb').length === 0) {\n        container.classList.remove('uploader-has-thumbs');\n\n        if (instance.config.isMobile) {\n          container.classList.remove('uploader-expanded');\n          uploader.addEventListener('click', mobileOpenPhotos);\n        }\n      }\n\n      instance.files = instance.files.filter((el) => {\n        return el.id !== id;\n      });\n\n      if (rb.uploaders.numCanAdd(instanceEl.id) > 0) {\n        const $dropArea = $(`#${instanceEl.id}`);\n\n        $(`#${instanceEl.id} .uploader_file-input, #${instanceEl.id} .uploader_file-label`)\n          .removeAttr('disabled');\n\n        $dropArea.removeClass(maxFilesClass);\n      }\n\n      const i = { removedId: id };\n      document.getElementById(instanceEl.id)\n        .dispatchEvent(new CustomEvent('rb.uploaders.fileRemoved', { detail: i }));\n    });\n\n    document.querySelector(`#${instanceEl.id} .uploader_thumbs`).appendChild(img);\n    document.querySelector(`#${img.id}`).insertAdjacentElement('afterend', button);\n\n    const u = document.querySelector(`#${instanceEl.id}`);\n\n    if (u) {\n      u.classList.add('uploader-has-thumbs');\n    }\n\n    if (!rb.uploaders.numCanAdd(instanceEl.id)) {\n      const $dropArea = $(`#${instanceEl.id}`);\n\n      $(`#${instanceEl.id} .uploader_file-input, #${instanceEl.id} .uploader_file-label`)\n        .attr('disabled', '');\n\n      $dropArea.addClass(maxFilesClass);\n    }\n  }\n\n  function processFile(file, uploaderId) {\n    const instance = getInstanceForId(uploaderId);\n    const instanceEl = document.getElementById(uploaderId);\n    const reader = new FileReader();\n    reader.size = file.size;\n\n    instanceEl\n      .dispatchEvent(new CustomEvent('rb.uploaders.addingFile'));\n\n    reader.readAsDataURL(file);\n\n    reader.onloadend = () => {\n      const fileContents =\n        instance.config.filesAsBinary ?\n          rb.dataURItoBlob(reader.result) :\n          reader.result\n      ;\n\n      if (instance.config.filesAsBinary) {\n        createPreview(true, instance, instanceEl, reader);\n      } else {\n        downscaleImage(fileContents).then(scaledImageObj => {\n          createPreview(false, instance, instanceEl, reader, scaledImageObj);\n        });\n      }\n    };\n  }\n})(window.rb, document, jQuery);\n\n"],"sourceRoot":"../.."}