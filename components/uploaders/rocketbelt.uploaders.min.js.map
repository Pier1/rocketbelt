{"version":3,"sources":["components/uploaders/rocketbelt.uploaders.min.js"],"names":["rb","document","$","activeClass","maxFilesClass","actualUploader","target","expandUploader","removeAttribute","e","classList","contains","closest","uploader","aria","role","removeEventListener","expandClickHandler","uploaders","config","isMobile","handleFiles","this","files","stopPropagation","preventDefault","draggedOn","$dropArea","find","css","hasClass","addClass","removeClass","numCanAdd","handleDrop","dataTransfer","uploadProgress","forEach","eventName","body","addEventListener","preventDefaults","addUploader","uploaderConfig","selector","querySelector","id","querySelectorAll","length","add","click","setAttribute","draggedOff","scrim","createElement","insertAdjacentElement","scrimIcon","keydown","which","change","fileInputOnchange","maxFiles","numFiles","Number","POSITIVE_INFINITY","progressBar","updateProgress","percent","fileNumber","value","reduce","tot","curr","total","previewFile","file","FileReader","reader","getElementById","readAsDataURL","CustomEvent","img","src","result","f","dispatchEvent","push","button","dataset","detail","targetId","imgToRemove","once","parentNode","removeChild","container","remove","filter","el","i","removedId","attr","formData","FormData","prepXhr","xhr","XMLHttpRequest","upload","open","postUri","loaded","readyState","status","send","filesToAdd","initializeProgress","autoUpload","uploadFile","window","jQuery"],"mappings":"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","file":"rocketbelt.uploaders.min.js","sourcesContent":["'use strict';\n((rb, document, $) => {\n  const activeClass = 'uploader-dragged-on';\n  const maxFilesClass = 'uploader-max-files';\n\n  // Prevent default drag behaviors\n  ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {\n    document.body.addEventListener(eventName, preventDefaults);\n  });\n\n  rb.uploaders = rb.uploaders || {};\n\n  rb.uploaders.addUploader = (uploaderConfig) => {\n    if (uploaderConfig &&\n        uploaderConfig.selector) {\n      const uploader = document.querySelector(uploaderConfig.selector);\n      uploader.id = uploader.id || `rb_${rb.getShortId()}`;\n      uploaderConfig.id = uploader.id;\n\n      uploaderConfig.isMobile =\n        uploaderConfig.isMobile ||\n        uploader.classList.contains('uploader-mobile') ||\n        document.querySelectorAll('.mobile .uploader, .tablet .uploader').length > 0;\n\n      if (uploaderConfig.isMobile) {\n        uploader.classList.add('uploader-mobile');\n\n        rb.once(uploader, 'click', () => {\n          $(`#${rb.uploaders.config.id} input[type=\"file\"]`).click();\n        });\n      }\n\n      if (!uploader.classList.contains('uploader-expanded')) {\n        uploader.setAttribute(rb.aria.role, 'button');\n        uploader.setAttribute('tabindex', 0);\n      }\n\n      if (!uploaderConfig.isMobile) {\n        uploader.addEventListener('click', expandClickHandler);\n\n        ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {\n          uploader.addEventListener(eventName, preventDefaults);\n        });\n\n        ['dragenter', 'dragover'].forEach(eventName => {\n          uploader.addEventListener(eventName, draggedOn);\n        });\n\n        ['dragleave', 'drop'].forEach(eventName => {\n          uploader.addEventListener(eventName, draggedOff);\n        });\n\n        uploader.addEventListener('drop', handleDrop);\n\n        // Add scrim elements\n        const scrim = document.createElement('div');\n        scrim.classList.add('scrim');\n        uploader.insertAdjacentElement('afterbegin', scrim);\n\n        // Register drag-related listeners\n        const scrimIcon = document.createElement('div');\n        scrimIcon.classList.add('scrim_icon');\n        scrim.insertAdjacentElement('afterend', scrimIcon);\n      }\n\n      rb.uploaders.config = uploaderConfig;\n\n      // Register listener for keyboard input\n      $(uploader).find('.uploader_file-label').keydown((e) => {\n        // Since the browser's file input UI is hidden, we need to\n        // allow the label it's replaced with to be triggered via\n        // keyboard.\n        if ((e.which === 13 || e.which === 32)) {\n          $(e.target).click();\n        }\n      });\n\n      $(uploader).find('input[type=\"file\"]').change(fileInputOnchange);\n    }\n  };\n\n  function expandClickHandler(e) {\n    const actualUploader =\n      e.target.classList.contains('uploader') ? e.target : e.target.closest('.uploader');\n    expandUploader(actualUploader);\n  }\n\n  function expandUploader(uploader) {\n    uploader.classList.add('uploader-expanded');\n    uploader.removeAttribute(rb.aria.role);\n    uploader.removeAttribute('tabindex');\n\n    uploader.removeEventListener('click', expandClickHandler);\n  }\n\n  function fileInputOnchange(e) {\n    if (rb.uploaders.config.isMobile) {\n      expandClickHandler(e);\n    }\n\n    rb.uploaders.handleFiles(this.files, rb.uploaders.config);\n  }\n\n  function preventDefaults(e) {\n    e.preventDefault();\n    e.stopPropagation();\n  }\n\n  function draggedOn(e) {\n    const $dropArea =\n      $(e.target).hasClass(activeClass) ? $(e.target) : $(e.target).closest('.uploader');\n\n    if (!$dropArea.hasClass(activeClass)) {\n      $dropArea.find('.scrim, .scrim_icon').css('z-index', '1');\n      $dropArea.addClass(activeClass);\n    }\n  }\n\n  function draggedOff(e) {\n    const $dropArea =\n      $(e.target).hasClass(activeClass) ? $(e.target) : $(e.target).closest('.uploader');\n\n    if ($dropArea.hasClass(activeClass)) {\n      $dropArea.removeClass(activeClass);\n      $dropArea.find('.scrim, .scrim_icon').css('z-index', '-1');\n    }\n  }\n\n  rb.uploaders.numCanAdd = () => {\n    const numFiles = rb.uploaders.files ? rb.uploaders.files.length : 0;\n    const maxFiles = rb.uploaders.config.maxFiles || Number.POSITIVE_INFINITY;\n\n    return maxFiles - numFiles;\n  };\n\n  function handleDrop(e) {\n    if (rb.uploaders.numCanAdd() > 0) {\n      const dt = e.dataTransfer;\n      const files = dt.files;\n\n      rb.uploaders.handleFiles(files, rb.uploaders.config);\n    }\n  }\n\n  let uploadProgress = [];\n  const progressBar = document.querySelector('.uploader progress');\n\n  function initializeProgress(numFiles) {\n    progressBar.value = 0;\n    uploadProgress = [];\n\n    for (let i = numFiles; i > 0; i--) {\n      uploadProgress.push(0);\n    }\n  }\n\n  function updateProgress(fileNumber, percent) {\n    uploadProgress[fileNumber] = percent;\n    const total = uploadProgress.reduce((tot, curr) => tot + curr, 0) / uploadProgress.length;\n\n    progressBar.value = total;\n  }\n\n  rb.uploaders.handleFiles = function handleFiles(files) {\n    const numCanAdd = rb.uploaders.numCanAdd();\n\n    const filesToAdd = [...files].slice(0, numCanAdd);\n\n    initializeProgress(filesToAdd.length);\n\n    if (rb.uploaders.config.autoUpload) {\n      filesToAdd.forEach(uploadFile);\n    }\n\n    filesToAdd.forEach(previewFile);\n  };\n\n  function previewFile(file) {\n    rb.uploaders.files = rb.uploaders.files || [];\n\n    const reader = new FileReader();\n    reader.size = file.size;\n\n    document.getElementById(rb.uploaders.config.id)\n      .dispatchEvent(new CustomEvent('rb.uploaders.addingFile'));\n\n    reader.readAsDataURL(file);\n    reader.onloadend = () => {\n      const img = document.createElement('img');\n      img.src = reader.result;\n      img.id = `rb_${rb.getShortId()}`;\n      img.classList.add('uploader_thumb');\n\n      const f = { id: img.id, file: reader.result, size: reader.size };\n      rb.uploaders.files.push(f);\n\n      document.getElementById(rb.uploaders.config.id)\n        .dispatchEvent(new CustomEvent('rb.uploaders.fileAdded', { detail: f }));\n\n      const button = document.createElement('button');\n      button.dataset.targetId = img.id;\n      button.classList.add('uploader_thumbs_remove-button');\n      button.innerHTML = '&times;';\n      button.setAttribute(rb.aria.label, 'Remove this image');\n\n      rb.once(button, 'click', (e) => {\n        const id = e.target.dataset.targetId;\n        const imgToRemove = document.querySelector(`#${id}`);\n        const container = e.target.closest('.uploader');\n\n        imgToRemove.parentNode.removeChild(imgToRemove);\n        e.target.parentNode.removeChild(e.target);\n\n        if (container.querySelectorAll('.uploader_thumb').length === 0) {\n          container.classList.remove('uploader-has-thumbs');\n        }\n\n        rb.uploaders.files = rb.uploaders.files.filter((el) => {\n          return el.id !== id;\n        });\n\n        if (rb.uploaders.numCanAdd() > 0) {\n          const $dropArea = $(`#${rb.uploaders.config.id}`);\n\n          $('.uploader #uploader_file-input, .uploader .uploader_file-label')\n            .removeAttr('disabled');\n\n          $dropArea.removeClass(maxFilesClass);\n        }\n\n        const i = { removedId: id };\n        document.getElementById(rb.uploaders.config.id)\n          .dispatchEvent(new CustomEvent('rb.uploaders.fileRemoved', { detail: i }));\n      });\n\n      document.querySelector('.uploader_thumbs').appendChild(img);\n      document.querySelector(`#${img.id}`).insertAdjacentElement('afterend', button);\n\n      document.querySelector(`#${rb.uploaders.config.id}`).classList.add('uploader-has-thumbs');\n\n      if (!rb.uploaders.numCanAdd()) {\n        const $dropArea = $(`#${rb.uploaders.config.id}`);\n\n        $('.uploader #uploader_file-input, .uploader .uploader_file-label').attr('disabled', '');\n\n        $dropArea.addClass(maxFilesClass);\n      }\n    };\n  }\n\n  function uploadFile(file, i) {\n    let formData = new FormData();\n    let xhr = new XMLHttpRequest();\n\n    formData = rb.uploaders.config.prepFormData(formData);\n\n    if (rb.uploaders.config.prepXhr) {\n      xhr = rb.uploaders.config.prepXhr(xhr);\n    }\n\n    xhr.open('POST', rb.uploaders.config.postUri, true);\n    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n\n    xhr.upload.addEventListener('progress', (e) => {\n      updateProgress(i, (e.loaded * 100.0 / e.total) || 100);\n    });\n\n    xhr.addEventListener('readystatechange', (e) => {\n      if (xhr.readyState === 4 && xhr.status === 200) {\n        updateProgress(i, 100);\n        // rb.uploaders.onSuccess();\n      } else if (xhr.readyState === 4 && xhr.status !== 200) {\n        // rb.uploaders.onError(e);\n      }\n    });\n\n    xhr.send(formData);\n  }\n})(window.rb, document, jQuery);\n\n"],"sourceRoot":"../.."}