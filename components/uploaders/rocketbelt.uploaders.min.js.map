{"version":3,"sources":["components/uploaders/rocketbelt.uploaders.min.js"],"names":["rb","document","$","activeClass","maxFilesClass","actualUploader","classList","el","contains","closest","expandUploader","getClosestUploader","e","target","id","click","uploader","removeAttribute","add","aria","role","getInstanceForId","mobileOpenPhotos","uploaders","filter","expandClickHandler","i","config","isMobile","stopPropagation","this","files","draggedOn","preventDefault","$dropArea","hasClass","$target","draggedOff","css","addClass","removeClass","uploaderInstance","numFiles","maxFiles","Number","handleFiles","numCanAdd","filesToAdd","forEach","eventName","body","addEventListener","preventDefaults","addUploader","uploaderConfig","querySelector","selector","querySelectorAll","length","setAttribute","handleDrop","scrim","createElement","insertAdjacentElement","scrimIcon","instances","push","find","keydown","which","inputId","$input","getShortId","change","fileInputOnchange","attr","POSITIVE_INFINITY","dataTransfer","uploaderId","instanceEl","file","reader","dispatchEvent","getElementById","readAsDataURL","size","CustomEvent","img","src","result","fileContents","instance","button","dataset","targetId","innerHTML","f","container","detail","imgToRemove","parentNode","removeChild","remove","once","removedId","u","appendChild","window","jQuery"],"mappings":"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","file":"rocketbelt.uploaders.min.js","sourcesContent":["'use strict';\n((rb, document, $) => {\n  const activeClass = 'uploader-dragged-on';\n  const maxFilesClass = 'uploader-max-files';\n\n  // Prevent default drag behaviors\n  ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {\n    document.body.addEventListener(eventName, preventDefaults);\n  });\n\n  rb.uploaders = rb.uploaders || {};\n\n  rb.uploaders.addUploader = (uploaderConfig) => {\n    let uploader;\n\n    if (uploaderConfig &&\n        uploaderConfig.selector) {\n      uploader = document.querySelector(uploaderConfig.selector);\n      uploader.id = uploader.id || `rb_${rb.getShortId()}`;\n      uploaderConfig.id = uploader.id;\n\n      uploaderConfig.isMobile =\n        uploaderConfig.isMobile ||\n        (uploader && uploader.classList && uploader.classList.contains('uploader-mobile')) ||\n        document.querySelectorAll('.mobile .uploader, .tablet .uploader').length > 0;\n\n      if (uploader && uploader.classList) {\n        if (uploaderConfig.isMobile) {\n          uploader.classList.add('uploader-mobile');\n          uploader.addEventListener('click', mobileOpenPhotos);\n        }\n\n        if (!uploader.classList.contains('uploader-expanded')) {\n          uploader.setAttribute(rb.aria.role, 'button');\n          uploader.setAttribute('tabindex', 0);\n        }\n      }\n\n      if (!uploaderConfig.isMobile) {\n        uploader.addEventListener('click', expandClickHandler);\n\n        ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {\n          uploader.addEventListener(eventName, preventDefaults);\n        });\n\n        ['dragenter', 'dragover'].forEach(eventName => {\n          uploader.addEventListener(eventName, draggedOn);\n        });\n\n        ['dragleave', 'drop'].forEach(eventName => {\n          uploader.addEventListener(eventName, draggedOff);\n        });\n\n        uploader.addEventListener('drop', handleDrop);\n\n        // Add scrim elements\n        const scrim = document.createElement('div');\n        scrim.classList.add('scrim');\n        uploader.insertAdjacentElement('afterbegin', scrim);\n\n        // Register drag-related listeners\n        const scrimIcon = document.createElement('div');\n        scrimIcon.classList.add('scrim_icon');\n        scrim.insertAdjacentElement('afterend', scrimIcon);\n      }\n\n      rb.uploaders.instances = rb.uploaders.instances || [];\n      rb.uploaders.instances.push({\n        config: uploaderConfig,\n        files: []\n      });\n\n      // Register listener for keyboard input\n      $(uploader).find('.uploader_file-label').keydown((e) => {\n        // Since the browser's file input UI is hidden, we need to\n        // allow the label it's replaced with to be triggered via\n        // keyboard.\n        if ((e.which === 13 || e.which === 32)) {\n          $(e.target).click();\n        }\n      });\n\n      const $input = $(uploader).find('input[type=\"file\"]');\n      const inputId = $input[0].id || `rb_${rb.getShortId()}`;\n\n      $input.attr('id', inputId);\n      $(uploader).find('.uploader_file-label')\n        .attr('for', inputId)\n        .attr('aria-role', 'button')\n        .attr('tabindex', 0);\n\n      $input.change(fileInputOnchange);\n    }\n\n    return uploader.id;\n  };\n\n  function getClosestUploader(el) {\n    let actualUploader;\n\n    if (el.classList) {\n      actualUploader =\n      el.classList.contains('uploader') ? el : el.closest('.uploader');\n    }\n\n    return actualUploader;\n  }\n\n  function mobileOpenPhotos(e) {\n    $(`#${getClosestUploader(e.target).id} input[type=\"file\"]`).click();\n  }\n\n  function expandClickHandler(e) {\n    expandUploader(getClosestUploader(e.target));\n  }\n\n  function expandUploader(uploader) {\n    if (uploader && uploader.classList) {\n      if (uploader.classList) {\n        uploader.classList.add('uploader-expanded');\n      }\n\n      uploader.removeAttribute(rb.aria.role);\n      uploader.removeAttribute('tabindex');\n\n      uploader.removeEventListener('click', mobileOpenPhotos);\n      uploader.removeEventListener('click', expandClickHandler);\n    }\n  }\n\n  function getInstanceForId(id) {\n    return rb.uploaders.instances.filter((i) => {\n      return i.config.id === id;\n    })[0];\n  }\n\n  rb.uploaders.getInstanceForId = getInstanceForId;\n\n  function fileInputOnchange(e) {\n    const id = getClosestUploader(e.target).id;\n    const instance = getInstanceForId(id);\n    const config = instance.config;\n\n    if (config.isMobile) {\n      expandClickHandler(e);\n    }\n\n    rb.uploaders.handleFiles(this.files, config.id);\n  }\n\n  function preventDefaults(e) {\n    e.preventDefault();\n    e.stopPropagation();\n  }\n\n  function draggedOn(e) {\n    const $target = $(e.target);\n\n    const $dropArea =\n      $target.hasClass(activeClass) ? $target : $target.closest('.uploader');\n\n    if (!$dropArea.hasClass(activeClass)) {\n      $dropArea.find('.scrim, .scrim_icon').css('z-index', '1');\n      $dropArea.addClass(activeClass);\n    }\n  }\n\n  function draggedOff(e) {\n    const $target = $(e.target);\n\n    const $dropArea =\n      $target.hasClass(activeClass) ? $target : $target.closest('.uploader');\n\n    if ($dropArea.hasClass(activeClass)) {\n      $dropArea.removeClass(activeClass);\n      $dropArea.find('.scrim, .scrim_icon').css('z-index', '-1');\n    }\n  }\n\n  rb.uploaders.numCanAdd = (id) => {\n    const uploaderInstance = getInstanceForId(id);\n    const numFiles = uploaderInstance.files ? uploaderInstance.files.length : 0;\n    const maxFiles = uploaderInstance.config.maxFiles || Number.POSITIVE_INFINITY;\n\n    return maxFiles - numFiles;\n  };\n\n  function handleDrop(e) {\n    const uploader = getClosestUploader(e.target);\n\n    if (rb.uploaders.numCanAdd(uploader.id) > 0) {\n      const dt = e.dataTransfer;\n      const files = dt.files;\n\n      rb.uploaders.handleFiles(files, uploader.id);\n    }\n  }\n\n  rb.uploaders.handleFiles = function handleFiles(files, uploaderId) {\n    const numCanAdd = rb.uploaders.numCanAdd(uploaderId);\n\n    const filesToAdd = [...files].slice(0, numCanAdd);\n    filesToAdd.forEach(file => { previewFile(file, uploaderId); });\n  };\n\n  function previewFile(file, uploaderId) {\n    const instance = getInstanceForId(uploaderId);\n    const instanceEl = document.getElementById(uploaderId);\n    const reader = new FileReader();\n    reader.size = file.size;\n\n    instanceEl\n      .dispatchEvent(new CustomEvent('rb.uploaders.addingFile'));\n\n    reader.readAsDataURL(file);\n\n    reader.onloadend = () => {\n      const fileContents =\n        instance.config.filesAsBinary ?\n          rb.dataURItoBlob(reader.result) :\n          reader.result\n      ;\n\n      const img = document.createElement('img');\n      img.src = reader.result;\n      img.id = `rb_${rb.getShortId()}`;\n      img.classList.add('uploader_thumb');\n\n      const f = { id: img.id, file: fileContents, size: reader.size };\n      instance.files.push(f);\n\n      instanceEl\n        .dispatchEvent(new CustomEvent('rb.uploaders.fileAdded', { detail: f }));\n\n      const button = document.createElement('button');\n      button.dataset.targetId = img.id;\n      button.classList.add('uploader_thumbs_remove-button');\n      button.innerHTML = '&times;';\n      button.setAttribute(rb.aria.label, 'Remove this image');\n\n      rb.once(button, 'click', (e) => {\n        const id = e.target.dataset.targetId;\n        const imgToRemove = document.querySelector(`#${id}`);\n        const container = e.target.closest('.uploader');\n\n        imgToRemove.parentNode.removeChild(imgToRemove);\n        e.target.parentNode.removeChild(e.target);\n\n        if (container && container.querySelectorAll('.uploader_thumb').length === 0) {\n          container.classList.remove('uploader-has-thumbs');\n        }\n\n        instance.files = instance.files.filter((el) => {\n          return el.id !== id;\n        });\n\n        if (rb.uploaders.numCanAdd(instanceEl.id) > 0) {\n          const $dropArea = $(`#${instanceEl.id}`);\n\n          $(`#${instanceEl.id} .uploader_file-input, #${instanceEl.id} .uploader_file-label`)\n            .removeAttr('disabled');\n\n          $dropArea.removeClass(maxFilesClass);\n        }\n\n        const i = { removedId: id };\n        document.getElementById(instanceEl.id)\n          .dispatchEvent(new CustomEvent('rb.uploaders.fileRemoved', { detail: i }));\n      });\n\n      document.querySelector(`#${instanceEl.id} .uploader_thumbs`).appendChild(img);\n      document.querySelector(`#${img.id}`).insertAdjacentElement('afterend', button);\n\n      const u = document.querySelector(`#${instanceEl.id}`);\n\n      if (u) {\n        u.classList.add('uploader-has-thumbs');\n      }\n\n\n      if (!rb.uploaders.numCanAdd(instanceEl.id)) {\n        const $dropArea = $(`#${instanceEl.id}`);\n\n        $(`#${instanceEl.id} .uploader_file-input, #${instanceEl.id} .uploader_file-label`)\n          .attr('disabled', '');\n\n        $dropArea.addClass(maxFilesClass);\n      }\n    };\n  }\n})(window.rb, document, jQuery);\n\n"],"sourceRoot":"../.."}