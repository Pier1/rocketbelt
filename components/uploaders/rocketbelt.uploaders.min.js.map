{"version":3,"sources":["components/uploaders/rocketbelt.uploaders.min.js"],"names":["rb","document","$","activeClass","maxFilesClass","uploaders","config","id","click","actualUploader","classList","e","target","contains","closest","add","uploader","removeAttribute","aria","role","removeEventListener","mobileOpenPhotos","expandClickHandler","isMobile","handleFiles","this","files","stopPropagation","preventDefault","draggedOn","$dropArea","find","css","hasClass","addClass","removeClass","numCanAdd","handleDrop","dataTransfer","uploadProgress","forEach","eventName","body","addEventListener","preventDefaults","addUploader","uploaderConfig","selector","querySelector","querySelectorAll","length","setAttribute","draggedOff","scrim","createElement","insertAdjacentElement","scrimIcon","keydown","which","change","fileInputOnchange","maxFiles","numFiles","Number","POSITIVE_INFINITY","progressBar","updateProgress","percent","fileNumber","value","reduce","tot","curr","total","previewFile","file","FileReader","reader","getElementById","readAsDataURL","CustomEvent","img","src","result","f","dispatchEvent","push","button","dataset","detail","targetId","imgToRemove","once","parentNode","removeChild","container","remove","filter","el","i","removedId","u","appendChild","attr","formData","FormData","prepXhr","xhr","XMLHttpRequest","upload","open","postUri","loaded","readyState","status","send","filesToAdd","initializeProgress","autoUpload","uploadFile","window","jQuery"],"mappings":"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","file":"rocketbelt.uploaders.min.js","sourcesContent":["'use strict';\n((rb, document, $) => {\n  const activeClass = 'uploader-dragged-on';\n  const maxFilesClass = 'uploader-max-files';\n\n  // Prevent default drag behaviors\n  ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {\n    document.body.addEventListener(eventName, preventDefaults);\n  });\n\n  rb.uploaders = rb.uploaders || {};\n\n  rb.uploaders.addUploader = (uploaderConfig) => {\n    if (uploaderConfig &&\n        uploaderConfig.selector) {\n      const uploader = document.querySelector(uploaderConfig.selector);\n      uploader.id = uploader.id || `rb_${rb.getShortId()}`;\n      uploaderConfig.id = uploader.id;\n\n      uploaderConfig.isMobile =\n        uploaderConfig.isMobile ||\n        (uploader && uploader.classList && uploader.classList.contains('uploader-mobile')) ||\n        document.querySelectorAll('.mobile .uploader, .tablet .uploader').length > 0;\n\n      if (uploader && uploader.classList) {\n        if (uploaderConfig.isMobile) {\n          uploader.classList.add('uploader-mobile');\n          uploader.addEventListener('click', mobileOpenPhotos);\n        }\n\n        if (!uploader.classList.contains('uploader-expanded')) {\n          uploader.setAttribute(rb.aria.role, 'button');\n          uploader.setAttribute('tabindex', 0);\n        }\n      }\n\n      if (!uploaderConfig.isMobile) {\n        uploader.addEventListener('click', expandClickHandler);\n\n        ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {\n          uploader.addEventListener(eventName, preventDefaults);\n        });\n\n        ['dragenter', 'dragover'].forEach(eventName => {\n          uploader.addEventListener(eventName, draggedOn);\n        });\n\n        ['dragleave', 'drop'].forEach(eventName => {\n          uploader.addEventListener(eventName, draggedOff);\n        });\n\n        uploader.addEventListener('drop', handleDrop);\n\n        // Add scrim elements\n        const scrim = document.createElement('div');\n        scrim.classList.add('scrim');\n        uploader.insertAdjacentElement('afterbegin', scrim);\n\n        // Register drag-related listeners\n        const scrimIcon = document.createElement('div');\n        scrimIcon.classList.add('scrim_icon');\n        scrim.insertAdjacentElement('afterend', scrimIcon);\n      }\n\n      rb.uploaders.config = uploaderConfig;\n\n      // Register listener for keyboard input\n      $(uploader).find('.uploader_file-label').keydown((e) => {\n        // Since the browser's file input UI is hidden, we need to\n        // allow the label it's replaced with to be triggered via\n        // keyboard.\n        if ((e.which === 13 || e.which === 32)) {\n          $(e.target).click();\n        }\n      });\n\n      $(uploader).find('input[type=\"file\"]').change(fileInputOnchange);\n    }\n  };\n\n  function mobileOpenPhotos() {\n    $(`#${rb.uploaders.config.id} input[type=\"file\"]`).click();\n  }\n\n  function expandClickHandler(e) {\n    let actualUploader;\n\n    if (e.target.classList) {\n      actualUploader =\n        e.target.classList.contains('uploader') ? e.target : e.target.closest('.uploader');\n    }\n\n    expandUploader(actualUploader);\n  }\n\n  function expandUploader(uploader) {\n    if (uploader && uploader.classList) {\n      if (uploader.classList) {\n        uploader.classList.add('uploader-expanded');\n      }\n\n      uploader.removeAttribute(rb.aria.role);\n      uploader.removeAttribute('tabindex');\n\n      uploader.removeEventListener('click', mobileOpenPhotos);\n      uploader.removeEventListener('click', expandClickHandler);\n    }\n  }\n\n  function fileInputOnchange(e) {\n    if (rb.uploaders.config.isMobile) {\n      expandClickHandler(e);\n    }\n\n    rb.uploaders.handleFiles(this.files, rb.uploaders.config);\n  }\n\n  function preventDefaults(e) {\n    e.preventDefault();\n    e.stopPropagation();\n  }\n\n  function draggedOn(e) {\n    const $dropArea =\n      $(e.target).hasClass(activeClass) ? $(e.target) : $(e.target).closest('.uploader');\n\n    if (!$dropArea.hasClass(activeClass)) {\n      $dropArea.find('.scrim, .scrim_icon').css('z-index', '1');\n      $dropArea.addClass(activeClass);\n    }\n  }\n\n  function draggedOff(e) {\n    const $dropArea =\n      $(e.target).hasClass(activeClass) ? $(e.target) : $(e.target).closest('.uploader');\n\n    if ($dropArea.hasClass(activeClass)) {\n      $dropArea.removeClass(activeClass);\n      $dropArea.find('.scrim, .scrim_icon').css('z-index', '-1');\n    }\n  }\n\n  rb.uploaders.numCanAdd = () => {\n    const numFiles = rb.uploaders.files ? rb.uploaders.files.length : 0;\n    const maxFiles = rb.uploaders.config.maxFiles || Number.POSITIVE_INFINITY;\n\n    return maxFiles - numFiles;\n  };\n\n  function handleDrop(e) {\n    if (rb.uploaders.numCanAdd() > 0) {\n      const dt = e.dataTransfer;\n      const files = dt.files;\n\n      rb.uploaders.handleFiles(files, rb.uploaders.config);\n    }\n  }\n\n  let uploadProgress = [];\n  const progressBar = document.querySelector('.uploader progress');\n\n  function initializeProgress(numFiles) {\n    progressBar.value = 0;\n    uploadProgress = [];\n\n    for (let i = numFiles; i > 0; i--) {\n      uploadProgress.push(0);\n    }\n  }\n\n  function updateProgress(fileNumber, percent) {\n    uploadProgress[fileNumber] = percent;\n    const total = uploadProgress.reduce((tot, curr) => tot + curr, 0) / uploadProgress.length;\n\n    progressBar.value = total;\n  }\n\n  rb.uploaders.handleFiles = function handleFiles(files) {\n    const numCanAdd = rb.uploaders.numCanAdd();\n\n    const filesToAdd = [...files].slice(0, numCanAdd);\n\n    initializeProgress(filesToAdd.length);\n\n    if (rb.uploaders.config.autoUpload) {\n      filesToAdd.forEach(uploadFile);\n    }\n\n    filesToAdd.forEach(previewFile);\n  };\n\n  function previewFile(file) {\n    rb.uploaders.files = rb.uploaders.files || [];\n\n    const reader = new FileReader();\n    reader.size = file.size;\n\n    document.getElementById(rb.uploaders.config.id)\n      .dispatchEvent(new CustomEvent('rb.uploaders.addingFile'));\n\n    reader.readAsDataURL(file);\n    reader.onloadend = () => {\n      const img = document.createElement('img');\n      img.src = reader.result;\n      img.id = `rb_${rb.getShortId()}`;\n      img.classList.add('uploader_thumb');\n\n      const f = { id: img.id, file: reader.result, size: reader.size };\n      rb.uploaders.files.push(f);\n\n      document.getElementById(rb.uploaders.config.id)\n        .dispatchEvent(new CustomEvent('rb.uploaders.fileAdded', { detail: f }));\n\n      const button = document.createElement('button');\n      button.dataset.targetId = img.id;\n      button.classList.add('uploader_thumbs_remove-button');\n      button.innerHTML = '&times;';\n      button.setAttribute(rb.aria.label, 'Remove this image');\n\n      rb.once(button, 'click', (e) => {\n        const id = e.target.dataset.targetId;\n        const imgToRemove = document.querySelector(`#${id}`);\n        const container = e.target.closest('.uploader');\n\n        imgToRemove.parentNode.removeChild(imgToRemove);\n        e.target.parentNode.removeChild(e.target);\n\n        if (container && container.querySelectorAll('.uploader_thumb').length === 0) {\n          container.classList.remove('uploader-has-thumbs');\n        }\n\n        rb.uploaders.files = rb.uploaders.files.filter((el) => {\n          return el.id !== id;\n        });\n\n        if (rb.uploaders.numCanAdd() > 0) {\n          const $dropArea = $(`#${rb.uploaders.config.id}`);\n\n          $('.uploader #uploader_file-input, .uploader .uploader_file-label')\n            .removeAttr('disabled');\n\n          $dropArea.removeClass(maxFilesClass);\n        }\n\n        const i = { removedId: id };\n        document.getElementById(rb.uploaders.config.id)\n          .dispatchEvent(new CustomEvent('rb.uploaders.fileRemoved', { detail: i }));\n      });\n\n      document.querySelector('.uploader_thumbs').appendChild(img);\n      document.querySelector(`#${img.id}`).insertAdjacentElement('afterend', button);\n\n      const u = document.querySelector(`#${rb.uploaders.config.id}`);\n\n      if (u) {\n        u.classList.add('uploader-has-thumbs');\n      }\n\n      if (!rb.uploaders.numCanAdd()) {\n        const $dropArea = $(`#${rb.uploaders.config.id}`);\n\n        $('.uploader #uploader_file-input, .uploader .uploader_file-label').attr('disabled', '');\n\n        $dropArea.addClass(maxFilesClass);\n      }\n    };\n  }\n\n  function uploadFile(file, i) {\n    let formData = new FormData();\n    let xhr = new XMLHttpRequest();\n\n    formData = rb.uploaders.config.prepFormData(formData);\n\n    if (rb.uploaders.config.prepXhr) {\n      xhr = rb.uploaders.config.prepXhr(xhr);\n    }\n\n    xhr.open('POST', rb.uploaders.config.postUri, true);\n    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n\n    xhr.upload.addEventListener('progress', (e) => {\n      updateProgress(i, (e.loaded * 100.0 / e.total) || 100);\n    });\n\n    xhr.addEventListener('readystatechange', (e) => {\n      if (xhr.readyState === 4 && xhr.status === 200) {\n        updateProgress(i, 100);\n        // rb.uploaders.onSuccess();\n      } else if (xhr.readyState === 4 && xhr.status !== 200) {\n        // rb.uploaders.onError(e);\n      }\n    });\n\n    xhr.send(formData);\n  }\n})(window.rb, document, jQuery);\n\n"],"sourceRoot":"../.."}