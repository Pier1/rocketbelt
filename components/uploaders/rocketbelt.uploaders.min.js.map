{"version":3,"sources":["components/uploaders/rocketbelt.uploaders.min.js"],"names":["rb","document","$","activeClass","expandClickHandler","e","uploader","actualUploader","target","closest","expandUploader","classList","aria","role","removeAttribute","removeEventListener","fileInputOnchange","uploaders","files","config","preventDefaults","preventDefault","draggedOn","dropArea","hasClass","find","css","addClass","draggedOff","removeClass","dt","dataTransfer","handleFiles","forEach","eventName","body","addEventListener","addUploader","uploaderConfig","selector","querySelector","setAttribute","contains","handleDrop","scrim","createElement","add","scrimIcon","keydown","which","click","change","progressBar","uploadProgress","fileNumber","percent","reduce","total","tot","curr","length","value","previewFile","file","reader","FileReader","size","readAsDataURL","onloadend","img","src","result","id","f","getElementById","dispatchEvent","detail","CustomEvent","button","dataset","targetId","innerHTML","label","once","imgToRemove","container","parentNode","removeChild","querySelectorAll","remove","filter","el","i","removedId","insertAdjacentElement","formData","FormData","xhr","XMLHttpRequest","prepFormData","prepXhr","setRequestHeader","postUri","updateProgress","loaded","status","readyState","send","numFiles","push","autoUpload","uploadFile","window","jQuery"],"mappings":"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","file":"rocketbelt.uploaders.min.js","sourcesContent":["'use strict';\n((rb, document, $) => {\n  const activeClass = 'uploader-dragged-on';\n\n  // Prevent default drag behaviors\n  ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {\n    document.body.addEventListener(eventName, preventDefaults);\n  });\n\n  rb.uploaders = rb.uploaders || {};\n\n  rb.uploaders.addUploader = (uploaderConfig) => {\n    if (uploaderConfig &&\n        uploaderConfig.selector) {\n      const uploader = document.querySelector(uploaderConfig.selector);\n      uploader.id = uploader.id || `rb_${rb.getShortId()}`;\n      uploaderConfig.id = uploader.id;\n\n      if (!uploader.classList.contains('uploader-expanded')) {\n        uploader.setAttribute(rb.aria.role, 'button');\n        uploader.setAttribute('tabindex', 0);\n      }\n\n      if (!uploader.classList.contains('uploader-mobile')) {\n        uploader.addEventListener('click', expandClickHandler);\n\n        ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {\n          uploader.addEventListener(eventName, preventDefaults);\n        });\n\n        ['dragenter', 'dragover'].forEach(eventName => {\n          uploader.addEventListener(eventName, draggedOn);\n        });\n\n        ['dragleave', 'drop'].forEach(eventName => {\n          uploader.addEventListener(eventName, draggedOff);\n        });\n\n        uploader.addEventListener('drop', handleDrop);\n\n        // Add scrim elements\n        const scrim = document.createElement('div');\n        scrim.classList.add('scrim');\n        uploader.insertAdjacentElement('afterbegin', scrim);\n\n        // Register drag-related listeners\n        const scrimIcon = document.createElement('div');\n        scrimIcon.classList.add('scrim_icon');\n        scrim.insertAdjacentElement('afterend', scrimIcon);\n      }\n\n      rb.uploaders.config = uploaderConfig;\n\n      // Register listener for keyboard input\n      $(uploader).find('.uploader_file-label').keydown((e) => {\n        // Since the browser's file input UI is hidden, we need to\n        // allow the label it's replaced with to be triggered via\n        // keyboard.\n        if ((e.which === 13 || e.which === 32)) {\n          $(e.target).click();\n        }\n      });\n\n      $(uploader).find('input[type=\"file\"]').change(fileInputOnchange);\n    }\n  };\n\n  function expandClickHandler(e) {\n    const actualUploader =\n      e.target.classList.contains('uploader') ? e.target : e.target.closest('.uploader');\n    expandUploader(actualUploader);\n  }\n\n  function expandUploader(uploader) {\n    uploader.classList.add('uploader-expanded');\n    uploader.removeAttribute(rb.aria.role);\n    uploader.removeAttribute('tabindex');\n\n    uploader.removeEventListener('click', expandClickHandler);\n  }\n\n  function fileInputOnchange(e) {\n    rb.uploaders.handleFiles(this.files, rb.uploaders.config);\n  }\n\n  function preventDefaults(e) {\n    e.preventDefault();\n    e.stopPropagation();\n  }\n\n  function draggedOn(e) {\n    const dropArea =\n      $(e.target).hasClass(activeClass) ? e.target : $(e.target).closest('.uploader');\n\n    if (!$(dropArea).hasClass(activeClass)) {\n      $(dropArea).find('.scrim, .scrim_icon').css('z-index', '1');\n      $(dropArea).addClass(activeClass);\n    }\n  }\n\n  function draggedOff(e) {\n    const dropArea =\n      $(e.target).hasClass(activeClass) ? e.target : $(e.target).closest('.uploader');\n\n    if ($(dropArea).hasClass(activeClass)) {\n      $(dropArea).removeClass(activeClass);\n      $(dropArea).find('.scrim, .scrim_icon').css('z-index', '-1');\n    }\n  }\n\n  function handleDrop(e) {\n    const dt = e.dataTransfer;\n    const files = dt.files;\n\n    rb.uploaders.handleFiles(files, rb.uploaders.config);\n  }\n\n  let uploadProgress = [];\n  const progressBar = document.querySelector('.uploader progress');\n\n  function initializeProgress(numFiles) {\n    progressBar.value = 0;\n    uploadProgress = [];\n\n    for (let i = numFiles; i > 0; i--) {\n      uploadProgress.push(0);\n    }\n  }\n\n  function updateProgress(fileNumber, percent) {\n    uploadProgress[fileNumber] = percent;\n    const total = uploadProgress.reduce((tot, curr) => tot + curr, 0) / uploadProgress.length;\n\n    progressBar.value = total;\n  }\n\n  rb.uploaders.handleFiles = function handleFiles(files) {\n    files = [...files];\n    initializeProgress(files.length);\n\n    if (rb.uploaders.config.autoUpload) {\n      files.forEach(uploadFile);\n    }\n\n    files.forEach(previewFile);\n  };\n\n  function previewFile(file) {\n    rb.uploaders.files = rb.uploaders.files || [];\n\n    const reader = new FileReader();\n    reader.size = file.size;\n    reader.readAsDataURL(file);\n    reader.onloadend = () => {\n      const img = document.createElement('img');\n      img.src = reader.result;\n      img.id = `rb_${rb.getShortId()}`;\n      img.classList.add('uploader_thumb');\n\n      const f = { id: img.id, file: reader.result, size: reader.size };\n      rb.uploaders.files.push(f);\n\n      document.getElementById(rb.uploaders.config.id)\n        .dispatchEvent(new CustomEvent('rb.uploaders.fileAdded', { detail: f }));\n\n      const button = document.createElement('button');\n      button.dataset.targetId = img.id;\n      button.classList.add('uploader_thumbs_remove-button');\n      button.innerHTML = '&times;';\n      button.setAttribute(rb.aria.label, 'Remove this image');\n\n      rb.once(button, 'click', (e) => {\n        const id = e.target.dataset.targetId;\n        const imgToRemove = document.querySelector(`#${id}`);\n        const container = e.target.closest('.uploader');\n\n        imgToRemove.parentNode.removeChild(imgToRemove);\n        e.target.parentNode.removeChild(e.target);\n\n        if (container.querySelectorAll('.uploader_thumb').length === 0) {\n          container.classList.remove('uploader-has-thumbs');\n        }\n\n        rb.uploaders.files = rb.uploaders.files.filter((el) => {\n          return el.id !== id;\n        });\n\n        const i = { removedId: id };\n        document.getElementById(rb.uploaders.config.id)\n          .dispatchEvent(new CustomEvent('rb.uploaders.fileRemoved', { detail: i }));\n      });\n\n      document.querySelector('.uploader_thumbs').appendChild(img);\n      document.querySelector(`#${img.id}`).insertAdjacentElement('afterend', button);\n\n      document.querySelector(`#${rb.uploaders.config.id}`).classList.add('uploader-has-thumbs');\n    };\n  }\n\n  function uploadFile(file, i) {\n    let formData = new FormData();\n    let xhr = new XMLHttpRequest();\n\n    formData = rb.uploaders.config.prepFormData(formData);\n\n    if (rb.uploaders.config.prepXhr) {\n      xhr = rb.uploaders.config.prepXhr(xhr);\n    }\n\n    xhr.open('POST', rb.uploaders.config.postUri, true);\n    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n\n    xhr.upload.addEventListener('progress', (e) => {\n      updateProgress(i, (e.loaded * 100.0 / e.total) || 100);\n    });\n\n    xhr.addEventListener('readystatechange', (e) => {\n      if (xhr.readyState === 4 && xhr.status === 200) {\n        updateProgress(i, 100);\n        // rb.uploaders.onSuccess();\n      } else if (xhr.readyState === 4 && xhr.status !== 200) {\n        // rb.uploaders.onError(e);\n      }\n    });\n\n    xhr.send(formData);\n  }\n})(window.rb, document, jQuery);\n\n"],"sourceRoot":"../.."}