{"version":3,"sources":["components/dialogs/rocketbelt.dialogs.min.js"],"names":["$","initOptions","appendTo","blurElement","autoOpen","buttons","classes","rbDialog","rbDialogTitle","rbDialogBody","title","beforeClose","close","open","init","params","$cache","hasClass","this","hasOwnProperty","element","defaultElement","extend","options","html","addDialogClasses","length","addDialogButtons","data","each","closers","index","value","addEventListener","contains","appendChild","show","attr","addClass","isEmptyObject","isArray","indexOf","rbDialogButtons","remove","append","name","props","click","buttonOptions","isFunction","text","type","class","on","apply","arguments","getFocusableChildren","node","focusableElements","find","join","trapTabKey","event","focusableChildren","focusedItemIndex","document","activeElement","shiftKey","focus","preventDefault","setFocusToFirstItem","bindKeypress","shown","hasAttribute","which","maintainFocus","target","srcElement","removeAttr","focusedBeforeDialog","body","keydown","trigger","_trigger","removeClass","removeEventListener","destroy","style","animation","one","setTimeout","destroyTheWorld","children","detach","hide","prop","orig","callback","Event","widgetEventPrefix","toLowerCase","originalEvent","concat","isDefaultPrevented","last","fn","call"],"mappings":"AACAA,EAAE,WAcA,QAASC,KACP,OACEC,SAAU,OACVC,YAAa,iBACbC,UAAU,EACVC,WACAC,SACEC,SAAY,SACZC,cAAiB,eACjBC,aAAgB,eAElBC,MAAO,KACPC,YAAa,KACbC,MAAO,KACPC,KAAM,MAoBV,QAASC,GAAKC,GACRC,OAAOd,SAASe,SAAS,oBACzBC,KAAKC,eAAe,kBACtBC,QAAUpB,EAAEkB,KAAKG,gBAEjBD,QADSF,KACClB,EAAEkB,MAEFlB,EAAEoB,SAGdpB,EAAEsB,QAAO,EAAMC,EAASR,GAEpBQ,EAAQrB,WAAUc,OAAOd,SAAWF,EAAEuB,EAAQrB,WAC9CqB,EAAQpB,cAAaa,OAAOb,YAAcH,EAAEuB,EAAQpB,cACpDoB,EAAQb,OAAOM,OAAOR,cAAcgB,KAAKD,EAAQb,OACjDa,EAAQjB,SAASmB,IACU,IAA3BF,EAAQlB,QAAQqB,QAAcC,IAElCX,OAAOT,SAASqB,KAAK,UAAWL,GAEhCvB,EAAE6B,KAAKC,QAAS,SAAUC,EAAOC,GAC/BA,EAAMC,iBAAiB,QAASrB,KAE7BZ,EAAEkC,SAASlB,OAAOP,aAAa,GAAIW,QAAQ,KAC9CJ,OAAOP,aAAa,GAAG0B,YAAYf,QAAQ,IAE7CA,QAAQgB,QAGV,QAASX,KACHF,EAAQjB,QAAQC,WACe,WAA7BgB,EAAQjB,QAAQC,SAAuBS,OAAOT,SAAS8B,KAAK,QAAS,UAAYd,EAAQjB,QAAQC,UAChGS,OAAOT,SAAS8B,KAAK,QAAS,WAEjCd,EAAQjB,QAAQE,eAAeQ,OAAOR,cAAc8B,SAASf,EAAQjB,QAAQE,eAC7Ee,EAAQjB,QAAQG,cAAcO,OAAOP,aAAa6B,SAASf,EAAQjB,QAAQG,cAGjF,QAASkB,KACP,GAAItB,GAAUkB,EAAQlB,OAIlBL,GAAEuC,cAAclC,IAAaL,EAAEwC,QAAQnC,KAAaA,EAAQqB,SAAgE,IAApDH,EAAQjB,QAAQC,SAASkC,QAAQ,gBAIzGzB,OAAO0B,iBAAiB1B,OAAO0B,gBAAgBC,SACnD3C,EAAE,mBAAmB4C,OAAO5C,EAAE,uCAC9BgB,OAAO0B,gBAAkB1C,EAAE,mBAE3BA,EAAE6B,KAAKxB,EAAS,SAAUwC,EAAMC,GAC9B,GAAIC,GACAC,CACJF,GAAQ9C,EAAEiD,WAAWH,IAAWC,MAAOD,EAAOI,KAAML,GAASC,EAG7DA,EAAQ9C,EAAEsB,QAAS6B,KAAM,UAAYL,GAGrCC,EAAQD,EAAMC,MACdC,GACEI,MAAO,UAAYN,EAAMxC,QACzB4C,KAAMJ,EAAMI,YAGPJ,GAAMC,YACND,GAAMxC,QACa,iBAAfwC,GAAMI,YACRJ,GAAMI,KAGflD,EAAE,oBAAqB8C,GACpBT,KAAK,QAASW,EAAcI,OAC5BF,KAAKF,EAAcE,MACnBhD,SAASc,OAAO0B,iBAChBW,GAAG,QAAS,WACXN,EAAMO,MAAMtC,OAAOT,SAAUgD,UAAU,SAK/C,QAASC,GAAqBC,GAC5B,GAAIC,IAAqB,UAAW,aAAc,wBAAyB,yBAA0B,2BAA4B,yBAA0B,SAAU,SAAU,QAAS,oBAAqB,kCAC7M,OAAO1D,GAAEyD,GAAME,KAAKD,EAAkBE,KAAK,MAI7C,QAASC,GAAWJ,EAAMK,GACxB,GAAIC,GAAoBP,EAAqBC,GACzCO,EAAmBD,EAAkBhC,MAAM/B,EAAEiE,SAASC,eAEtDJ,GAAMK,UAAiC,IAArBH,GACpBD,EAAkBA,EAAkBrC,OAAS,GAAG0C,QAChDN,EAAMO,kBACIP,EAAMK,UAAYH,IAAqBD,EAAkBrC,OAAS,IAC5EqC,EAAkB,GAAGK,QACrBN,EAAMO,kBAIV,QAASC,GAAoBb,GAC3B,GAAIM,GAAoBP,EAAqBC,EACzCM,GAAkBrC,QAAQqC,EAAkB,GAAGK,QAGrD,QAASG,GAAaT,GACpB,GAAIU,IAASxD,OAAOT,SAAS,GAAGkE,aAAa,cACzCD,IAAyB,KAAhBV,EAAMY,QACjBZ,EAAMO,iBACNzD,KAGE4D,GAAyB,IAAhBV,EAAMY,OACjBb,EAAW7C,OAAOT,SAAUuD,GAIhC,QAASa,GAAcb,GACrB,GAAIc,EACAd,KACEA,EAAMc,OACRA,EAASd,EAAMc,OACNd,EAAMe,aACfD,EAASd,EAAMe,aAId7D,OAAOT,SAAS,GAAGkE,aAAa,gBAAmBzD,OAAOT,SAAS,GAAG2B,SAAS0C,IAClFN,EAAoBtD,OAAOT,UAI/B,QAASM,KACHG,OAAOd,SAASe,SAAS,oBAE7BD,OAAOd,SAASoC,SAAS,kBACzBtB,OAAOb,YAAYmC,SAAS,eAAeD,KAAK,eAAe,GAC/DrB,OAAOT,SAASuE,WAAW,eAC3BC,EAAsB/E,EAAEiE,SAASC,eACjCI,EAAoBtD,OAAOT,SAAS,IACpC0D,SAASe,KAAK/C,iBAAiB,QAAS0C,GAAe,GACvD3E,EAAEiE,UAAUgB,QAAQV,GAEpBvD,OAAOT,SAAS2E,QAAQ,iBACxBC,EAAS,SAGX,QAASvE,KACPuE,EAAS,eAELnE,OAAOT,SAAS,GAAGkE,aAAa,iBAEpCzD,OAAOd,SAASkF,YAAY,kBAC5BpE,OAAOb,YAAYiF,YAAY,eAAeN,WAAW,eACzD9D,OAAOT,SAAS8B,KAAK,cAAe,QACpC0C,GAAuBA,EAAoBX,QAC3CH,SAASe,KAAKK,oBAAoB,QAASV,GAAe,GAC1DV,SAASoB,oBAAoB,UAAWd,GAGxCvE,EAAE6B,KAAKC,QAAS,SAAUC,EAAOC,GAC/BA,EAAMqD,oBAAoB,QAASzE,KAGrCI,OAAOT,SAAS2E,QAAQ,kBACxBC,EAAS,SACTG,KAGF,QAASA,KACHrB,SAASe,KAAKO,MAAMC,UACtBxE,OAAOT,SAASkF,IAAI,+DAAgE,WAClFC,WAAWC,EAAiB,OAG9BD,WAAWC,EAAiB,KAIhC,QAASA,KACH3E,OAAO0B,iBAAiB1B,OAAO0B,gBAAgBC,SACnD3B,OAAOd,SAAS0C,OAAO5B,OAAOP,aAAamF,SAAS,KAAKC,SAASC,QAClE9E,OAAOR,cAAc0C,KAAK,IAC1B3B,EAAUtB,IAGZ,QAASkF,GAAShC,EAAMW,EAAOlC,GAC7B,GAAImE,GACAC,EACAC,EAAW1E,EAAQ4B,EAUvB,IATAvB,EAAOA,MACPkC,EAAQ9D,EAAEkG,MAAMpC,GAChBA,EAAMX,MAAQA,IAASjC,KAAKiF,kBAAoBhD,EAAOjC,KAAKiF,kBAAoBhD,GAAMiD,cAGtFtC,EAAMc,OAASxD,QAAQ,GAGvB4E,EAAOlC,EAAMuC,cAEX,IAAKN,IAAQC,GACLD,IAAQjC,KACZA,EAAMiC,GAAQC,EAAKD,GAMzB,OADA3E,SAAQ8D,QAAQpB,EAAOlC,KACd5B,EAAEiD,WAAWgD,KAAkE,IAArDA,EAAS3C,MAAMlC,QAAQ,IAAK0C,GAAOwC,OAAO1E,KAAoBkC,EAAMyC,sBAhQzG,GACIxB,GADAxD,EAAUtB,GAGde,SACEd,SAAUF,EAAEuB,EAAQrB,UACpBC,YAAaH,EAAEuB,EAAQpB,aACvBI,SAAUP,EAAE,WAAWwG,OACvBhG,cAAeR,EAAE,yBAAyBwG,OAC1C/F,aAAcT,EAAE,wBAAwBwG,QAE1CpF,QAAU,KACVU,QAAU9B,EAAEgB,OAAOT,UAAUoD,KAAK,yBA0BlC3D,EAAEyG,GAAGlG,SAAW,SAAUQ,GAExB,GADsB,gBAAXA,IAAqBD,EAAK4F,KAAKxF,KAAMH,GACjC,UAAXA,EAAoBH,QACnB,IAAe,YAAXG,EAAsBuE,QAC1B,IAAe,SAAXvE,GAAqBQ,EAAQnB,SAAUS,QAC3C,CAAA,GAAe,YAAXE,EAAsB,MAAOQ,EACjC,IAAe,WAAXR,EAAqB,MAAOC,QAAOd,SAASe,SAAS,kBAC9D,MAAO","file":"rocketbelt.dialogs.min.js","sourcesContent":["/* global $cache:true element:true closers:true */\n$(function () {\n  var options = initOptions();\n  var focusedBeforeDialog;\n  // IE doesn't apply append var to the global scope.\n  $cache = {\n    appendTo: $(options.appendTo),\n    blurElement: $(options.blurElement),\n    rbDialog: $('.dialog').last(),\n    rbDialogTitle: $('.dialog .dialog_title').last(),\n    rbDialogBody: $('.dialog .dialog_body').last()\n  };\n  element = null;\n  closers = $($cache.rbDialog).find('[data-rb-dialog-hide]');\n\n  function initOptions() {\n    return {\n      appendTo: 'body',\n      blurElement: 'body>div:first',\n      autoOpen: true,\n      buttons: [],\n      classes: {\n        'rbDialog': 'dialog',\n        'rbDialogTitle': 'dialog_title',\n        'rbDialogBody': 'dialog_body'\n      },\n      title: null,\n      beforeClose: null,\n      close: null,\n      open: null\n    };\n  }\n\n  /**\n   * rbDialog constructor\n   * @param {Object|string} [params] - Either the options object or function call as a string\n   * @returns {undefined} Returns undefined\n   * @description Pops a Rocketbelt modal\n   */\n  $.fn.rbDialog = function (params) {\n    if (typeof params !== 'string') init.call(this, params);\n    if (params === 'close') close();\n    else if (params === 'destroy') destroy();\n    else if (params === 'open' || options.autoOpen) open();\n    else if (params === 'options') return options;\n    else if (params === 'isOpen') return $cache.appendTo.hasClass('is-dialog-open');\n    return null;\n  };\n\n  function init(params) {\n    if ($cache.appendTo.hasClass('is-dialog-open')) return;\n    if (this.hasOwnProperty('defaultElement')) {\n      element = $(this.defaultElement);\n    } else if (this) {\n      element = $(this);\n    } else {\n      element = $(element);\n    }\n\n    $.extend(true, options, params);\n\n    if (options.appendTo) $cache.appendTo = $(options.appendTo);\n    if (options.blurElement) $cache.blurElement = $(options.blurElement);\n    if (options.title) $cache.rbDialogTitle.html(options.title);\n    if (options.classes) addDialogClasses();\n    if (options.buttons.length !== 0) addDialogButtons();\n\n    $cache.rbDialog.data('options', options);\n\n    $.each(closers, function (index, value) {\n      value.addEventListener('click', close);\n    });\n    if (!$.contains($cache.rbDialogBody[0], element[0])) {\n      $cache.rbDialogBody[0].appendChild(element[0]);\n    }\n    element.show();\n  }\n\n  function addDialogClasses() {\n    if (options.classes.rbDialog) {\n      if (options.classes.rbDialog !== 'dialog') $cache.rbDialog.attr('class', 'dialog ' + options.classes.rbDialog);\n      else $cache.rbDialog.attr('class', 'dialog');\n    }\n    if (options.classes.rbDialogTitle) $cache.rbDialogTitle.addClass(options.classes.rbDialogTitle);\n    if (options.classes.rbDialogBody) $cache.rbDialogBody.addClass(options.classes.rbDialogBody);\n  }\n\n  function addDialogButtons() {\n    var buttons = options.buttons;\n\n    // If we already have a button pane, remove it\n\n    if ($.isEmptyObject(buttons) || ($.isArray(buttons) && !buttons.length) || (options.classes.rbDialog.indexOf('dialog-max') !== -1 ) ) {\n      return;\n    }\n\n    if ($cache.rbDialogButtons) $cache.rbDialogButtons.remove();\n    $('.dialog_content').append($('<div class=\"dialog_buttons\"></div>'));\n    $cache.rbDialogButtons = $('.dialog_buttons');\n\n    $.each(buttons, function (name, props) {\n      var click;\n      var buttonOptions;\n      props = $.isFunction(props) ? { click: props, text: name } : props;\n\n      // Default to a non-submitting button\n      props = $.extend({ type: 'button' }, props);\n\n      // Change the context for the click callback to be the main element\n      click = props.click;\n      buttonOptions = {\n        class: 'button ' + props.classes,\n        text: props.text\n      };\n\n      delete props.click;\n      delete props.classes;\n      if (typeof props.text === 'boolean') {\n        delete props.text;\n      }\n\n      $('<button></button>', props)\n        .attr('class', buttonOptions.class)\n        .text(buttonOptions.text)\n        .appendTo($cache.rbDialogButtons)\n        .on('click', function () {\n          click.apply($cache.rbDialog, arguments[0]);\n        });\n    });\n  }\n\n  function getFocusableChildren(node) {\n    var focusableElements = ['a[href]', 'area[href]', 'input:not([disabled])', 'select:not([disabled])', 'textarea:not([disabled])', 'button:not([disabled])', 'iframe', 'object', 'embed', '[contenteditable]', '[tabindex]:not([tabindex^=\"-\"])'];\n    return $(node).find(focusableElements.join(','));\n  }\n\n  // Helper function trapping the tab key inside a node\n  function trapTabKey(node, event) {\n    var focusableChildren = getFocusableChildren(node);\n    var focusedItemIndex = focusableChildren.index($(document.activeElement));\n\n    if (event.shiftKey && focusedItemIndex === 0) {\n      focusableChildren[focusableChildren.length - 1].focus();\n      event.preventDefault();\n    } else if (!event.shiftKey && focusedItemIndex === focusableChildren.length - 1) {\n      focusableChildren[0].focus();\n      event.preventDefault();\n    }\n  }\n\n  function setFocusToFirstItem(node) {\n    var focusableChildren = getFocusableChildren(node);\n    if (focusableChildren.length) focusableChildren[0].focus();\n  }\n\n  function bindKeypress(event) {\n    var shown = !$cache.rbDialog[0].hasAttribute('aria-hidden');\n    if (shown && event.which === 27) {\n      event.preventDefault();\n      close();\n    }\n\n    if (shown && event.which === 9) {\n      trapTabKey($cache.rbDialog, event);\n    }\n  }\n\n  function maintainFocus(event) {\n    var target;\n    if (event) {\n      if (event.target) {\n        target = event.target;\n      } else if (event.srcElement) {\n        target = event.srcElement;\n      }\n    }\n\n    if (!$cache.rbDialog[0].hasAttribute('aria-hidden') && !$cache.rbDialog[0].contains(target)) {\n      setFocusToFirstItem($cache.rbDialog);\n    }\n  }\n\n  function open() {\n    if ($cache.appendTo.hasClass('is-dialog-open')) return;\n\n    $cache.appendTo.addClass('is-dialog-open');\n    $cache.blurElement.addClass('dialog_blur').attr('aria-hidden', true);\n    $cache.rbDialog.removeAttr('aria-hidden');\n    focusedBeforeDialog = $(document.activeElement);\n    setFocusToFirstItem($cache.rbDialog[0]);\n    document.body.addEventListener('focus', maintainFocus, true);\n    $(document).keydown(bindKeypress);\n\n    $cache.rbDialog.trigger('rbDialog:open');\n    _trigger('open');\n  }\n\n  function close() {\n    _trigger('beforeClose');\n\n    if ($cache.rbDialog[0].hasAttribute('aria-hidden')) return;\n\n    $cache.appendTo.removeClass('is-dialog-open');\n    $cache.blurElement.removeClass('dialog_blur').removeAttr('aria-hidden');\n    $cache.rbDialog.attr('aria-hidden', 'true');\n    focusedBeforeDialog && focusedBeforeDialog.focus();\n    document.body.removeEventListener('focus', maintainFocus, true);\n    document.removeEventListener('keydown', bindKeypress);\n\n    // Remove closing\n    $.each(closers, function (index, value) {\n      value.removeEventListener('click', close);\n    });\n\n    $cache.rbDialog.trigger('rbDialog:close');\n    _trigger('close');\n    destroy();\n  }\n\n  function destroy() {\n    if (document.body.style.animation) {\n      $cache.rbDialog.one('webkitAnimationEnd oanimationend msAnimationEnd animationend', function () {\n        setTimeout(destroyTheWorld, 200);\n      });\n    } else {\n      setTimeout(destroyTheWorld, 200);\n    }\n  }\n\n  function destroyTheWorld() {\n    if ($cache.rbDialogButtons) $cache.rbDialogButtons.remove();\n    $cache.appendTo.append($cache.rbDialogBody.children('*').detach().hide());\n    $cache.rbDialogTitle.text('');\n    options = initOptions();\n  }\n\n  function _trigger(type, event, data) {\n    var prop;\n    var orig;\n    var callback = options[type];\n    data = data || {};\n    event = $.Event(event);\n    event.type = (type === this.widgetEventPrefix ? type : this.widgetEventPrefix + type).toLowerCase();\n    // the original event may come from any element\n    // so we need to reset the target on the new event\n    event.target = element[0];\n\n    // copy original event properties over to the new event\n    orig = event.originalEvent;\n    if (orig) {\n      for (prop in orig) {\n        if (!(prop in event)) {\n          event[prop] = orig[prop];\n        }\n      }\n    }\n\n    element.trigger(event, data);\n    return !($.isFunction(callback) && callback.apply(element[0], [event].concat(data)) === false || event.isDefaultPrevented());\n  }\n});\n"],"sourceRoot":"../.."}