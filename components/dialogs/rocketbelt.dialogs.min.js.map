{"version":3,"sources":["components/dialogs/rocketbelt.dialogs.min.js"],"names":["$","init","params","$cache","appendTo","hasClass","this","hasOwnProperty","element","defaultElement","extend","options","blurElement","title","rbDialogTitle","html","classes","rbDialog","attr","addClass","rbDialogBody","addDialogClasses","buttons","length","isEmptyObject","isArray","indexOf","rbDialogButtons","remove","append","each","name","props","click","buttonOptions","isFunction","text","type","class","on","apply","arguments","addDialogButtons","data","closers","index","value","addEventListener","close","contains","appendChild","show","getFocusableChildren","node","find","join","setFocusToFirstItem","focusableChildren","focus","bindKeypress","event","shown","hasAttribute","which","preventDefault","focusedItemIndex","document","activeElement","shiftKey","trapTabKey","maintainFocus","target","srcElement","_trigger","removeClass","removeAttr","focusedBeforeDialog","body","removeEventListener","trigger","destroy","style","animation","one","setTimeout","destroyTheWorld","children","detach","hide","autoOpen","beforeClose","open","prop","orig","callback","Event","widgetEventPrefix","toLowerCase","originalEvent","concat","isDefaultPrevented","last","fn","call","keydown"],"mappings":"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","file":"rocketbelt.dialogs.min.js","sourcesContent":["/* global $cache:true element:true closers:true */\n$(function () {\n  var options = initOptions();\n  var focusedBeforeDialog;\n  // IE doesn't apply append var to the global scope.\n  $cache = {\n    appendTo: $(options.appendTo),\n    blurElement: $(options.blurElement),\n    rbDialog: $('.dialog').last(),\n    rbDialogTitle: $('.dialog .dialog_title').last(),\n    rbDialogBody: $('.dialog .dialog_body').last()\n  };\n  element = null;\n  closers = $($cache.rbDialog).find('[data-rb-dialog-hide]');\n\n  function initOptions() {\n    return {\n      appendTo: 'body',\n      blurElement: 'body>div:first',\n      autoOpen: true,\n      buttons: [],\n      classes: {\n        'rbDialog': 'dialog',\n        'rbDialogTitle': 'dialog_title',\n        'rbDialogBody': 'dialog_body'\n      },\n      title: null,\n      beforeClose: null,\n      close: null,\n      open: null\n    };\n  }\n\n  /**\n   * rbDialog constructor\n   * @param {Object|string} [params] - Either the options object or function call as a string\n   * @returns {undefined} Returns undefined\n   * @description Pops a Rocketbelt modal\n   */\n  $.fn.rbDialog = function (params) {\n    if (typeof params !== 'string') init.call(this, params);\n    if (params === 'close') close();\n    else if (params === 'destroy') destroy();\n    else if (params === 'open' || options.autoOpen) open();\n    else if (params === 'options') return options;\n    else if (params === 'isOpen') return $cache.appendTo.hasClass('is-dialog-open');\n    return null;\n  };\n\n  function init(params) {\n    if ($cache.appendTo.hasClass('is-dialog-open')) return;\n    if (this.hasOwnProperty('defaultElement')) {\n      element = $(this.defaultElement);\n    } else if (this) {\n      element = $(this);\n    } else {\n      element = $(element);\n    }\n\n    $.extend(true, options, params);\n\n    if (options.appendTo) $cache.appendTo = $(options.appendTo);\n    if (options.blurElement) $cache.blurElement = $(options.blurElement);\n    if (options.title) $cache.rbDialogTitle.html(options.title);\n    if (options.classes) addDialogClasses();\n    if (options.buttons.length !== 0) addDialogButtons();\n\n    $cache.rbDialog.data('options', options);\n\n    $.each(closers, function (index, value) {\n      value.addEventListener('click', close);\n    });\n    if (!$.contains($cache.rbDialogBody[0], element[0])) {\n      $cache.rbDialogBody[0].appendChild(element[0]);\n    }\n    element.show();\n  }\n\n  function addDialogClasses() {\n    if (options.classes.rbDialog) {\n      if (options.classes.rbDialog !== 'dialog') $cache.rbDialog.attr('class', 'dialog ' + options.classes.rbDialog);\n      else $cache.rbDialog.attr('class', 'dialog');\n    }\n    if (options.classes.rbDialogTitle) $cache.rbDialogTitle.addClass(options.classes.rbDialogTitle);\n    if (options.classes.rbDialogBody) $cache.rbDialogBody.addClass(options.classes.rbDialogBody);\n  }\n\n  function addDialogButtons() {\n    var buttons = options.buttons;\n\n    // If we already have a button pane, remove it\n\n    if ($.isEmptyObject(buttons) || ($.isArray(buttons) && !buttons.length) || (options.classes.rbDialog.indexOf('dialog-max') !== -1 ) ) {\n      return;\n    }\n\n    if ($cache.rbDialogButtons) $cache.rbDialogButtons.remove();\n    $('.dialog_content').append($('<div class=\"dialog_buttons\"></div>'));\n    $cache.rbDialogButtons = $('.dialog_buttons');\n\n    $.each(buttons, function (name, props) {\n      var click;\n      var buttonOptions;\n      props = $.isFunction(props) ? { click: props, text: name } : props;\n\n      // Default to a non-submitting button\n      props = $.extend({ type: 'button' }, props);\n\n      // Change the context for the click callback to be the main element\n      click = props.click;\n      buttonOptions = {\n        class: 'button ' + props.classes,\n        text: props.text\n      };\n\n      delete props.click;\n      delete props.classes;\n      if (typeof props.text === 'boolean') {\n        delete props.text;\n      }\n\n      $('<button></button>', props)\n        .attr('class', buttonOptions.class)\n        .text(buttonOptions.text)\n        .appendTo($cache.rbDialogButtons)\n        .on('click', function () {\n          click.apply($cache.rbDialog, arguments[0]);\n        });\n    });\n  }\n\n  function getFocusableChildren(node) {\n    var focusableElements = ['a[href]', 'area[href]', 'input:not([disabled])', 'select:not([disabled])', 'textarea:not([disabled])', 'button:not([disabled])', 'iframe', 'object', 'embed', '[contenteditable]', '[tabindex]:not([tabindex^=\"-\"])'];\n    return $(node).find(focusableElements.join(','));\n  }\n\n  // Helper function trapping the tab key inside a node\n  function trapTabKey(node, event) {\n    var focusableChildren = getFocusableChildren(node);\n    var focusedItemIndex = focusableChildren.index($(document.activeElement));\n\n    if (event.shiftKey && focusedItemIndex === 0) {\n      focusableChildren[focusableChildren.length - 1].focus();\n      event.preventDefault();\n    } else if (!event.shiftKey && focusedItemIndex === focusableChildren.length - 1) {\n      focusableChildren[0].focus();\n      event.preventDefault();\n    }\n  }\n\n  function setFocusToFirstItem(node) {\n    var focusableChildren = getFocusableChildren(node);\n    if (focusableChildren.length) focusableChildren[0].focus();\n  }\n\n  function bindKeypress(event) {\n    var shown = !$cache.rbDialog[0].hasAttribute('aria-hidden');\n    if (shown && event.which === 27) {\n      event.preventDefault();\n      close();\n    }\n\n    if (shown && event.which === 9) {\n      trapTabKey($cache.rbDialog, event);\n    }\n  }\n\n  function maintainFocus(event) {\n    var target;\n    if (event) {\n      if (event.target) {\n        target = event.target;\n      } else if (event.srcElement) {\n        target = event.srcElement;\n      }\n    }\n\n    if (!$cache.rbDialog[0].hasAttribute('aria-hidden') && !$cache.rbDialog[0].contains(target)) {\n      setFocusToFirstItem($cache.rbDialog);\n    }\n  }\n\n  function open() {\n    if ($cache.appendTo.hasClass('is-dialog-open')) return;\n\n    $cache.appendTo.addClass('is-dialog-open');\n    $cache.blurElement.addClass('dialog_blur').attr('aria-hidden', true);\n    $cache.rbDialog.removeAttr('aria-hidden');\n    focusedBeforeDialog = $(document.activeElement);\n    setFocusToFirstItem($cache.rbDialog[0]);\n    document.body.addEventListener('focus', maintainFocus, true);\n    $(document).keydown(bindKeypress);\n\n    $cache.rbDialog.trigger('rbDialog:open');\n    _trigger('open');\n  }\n\n  function close() {\n    _trigger('beforeClose');\n\n    if ($cache.rbDialog[0].hasAttribute('aria-hidden')) return;\n\n    $cache.appendTo.removeClass('is-dialog-open');\n    $cache.blurElement.removeClass('dialog_blur').removeAttr('aria-hidden');\n    $cache.rbDialog.attr('aria-hidden', 'true');\n    focusedBeforeDialog && focusedBeforeDialog.focus();\n    document.body.removeEventListener('focus', maintainFocus, true);\n    document.removeEventListener('keydown', bindKeypress);\n\n    // Remove closing\n    $.each(closers, function (index, value) {\n      value.removeEventListener('click', close);\n    });\n\n    $cache.rbDialog.trigger('rbDialog:close');\n    _trigger('close');\n    destroy();\n  }\n\n  function destroy() {\n    if (document.body.style.animation) {\n      $cache.rbDialog.one('webkitAnimationEnd oanimationend msAnimationEnd animationend', function () {\n        setTimeout(destroyTheWorld, 200);\n      });\n    } else {\n      setTimeout(destroyTheWorld, 200);\n    }\n  }\n\n  function destroyTheWorld() {\n    if ($cache.rbDialogButtons) $cache.rbDialogButtons.remove();\n    $cache.appendTo.append($cache.rbDialogBody.children('*').detach().hide());\n    $cache.rbDialogTitle.text('');\n    options = initOptions();\n  }\n\n  function _trigger(type, event, data) {\n    var prop;\n    var orig;\n    var callback = options[type];\n    data = data || {};\n    event = $.Event(event);\n    event.type = (type === this.widgetEventPrefix ? type : this.widgetEventPrefix + type).toLowerCase();\n    // the original event may come from any element\n    // so we need to reset the target on the new event\n    event.target = element[0];\n\n    // copy original event properties over to the new event\n    orig = event.originalEvent;\n    if (orig) {\n      for (prop in orig) {\n        if (!(prop in event)) {\n          event[prop] = orig[prop];\n        }\n      }\n    }\n\n    element.trigger(event, data);\n    return !($.isFunction(callback) && callback.apply(element[0], [event].concat(data)) === false || event.isDefaultPrevented());\n  }\n});\n"],"sourceRoot":"../.."}