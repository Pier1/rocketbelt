{"version":3,"sources":["components/dialogs/rocketbelt.dialogs.min.js"],"names":["$","init","params","element","hasClass","this","hasOwnProperty","extend","options","headerless","required","classes","appendTo","blurElement","buttons","length","addDialogButtons","$cache","rbDialog","data","rbDialogTitle","html","title","rbDialogBody","attr","addClass","addDialogClasses","each","closers","isEmptyObject","isArray","indexOf","rbDialogButtons","remove","append","props","name","buttonOptions","isFunction","click","text","class","type","apply","getFocusableChildren","focusableElements","on","arguments","el","index","contains","addEventListener","close","node","focusableChildren","focusedItemIndex","focus","bindKeypress","event","shown","hasAttribute","which","maintainFocus","target","preventDefault","document","activeElement","setFocusToFirstItem","shiftKey","trapTabKey","srcElement","scrollBeforeDialog","window","scrollTop","_trigger","removeEventListener","css","removeClass","removeAttr","focusedBeforeDialog","body","destroy","value","animation","trigger","setTimeout","destroyTheWorld","orig","callback","children","detach","hide","autoOpen","beforeClose","open","Event","originalEvent","widgetEventPrefix","toLowerCase","prop","concat","isDefaultPrevented","last","find","fn","call","$closeContainer","$headerlessDialog","insertAfter","keydown","classList"],"mappings":"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","file":"rocketbelt.dialogs.min.js","sourcesContent":["/* global $cache:true element:true closers:true */\n$(function () {\n  var options = initOptions();\n  var focusedBeforeDialog;\n  var scrollBeforeDialog;\n  // IE doesn't apply append var to the global scope.\n  var $cache = {\n    appendTo: $(options.appendTo),\n    blurElement: $(options.blurElement),\n    rbDialog: $('.dialog').last(),\n    rbDialogTitle: $('.dialog .dialog_title').last(),\n    rbDialogBody: $('.dialog .dialog_body').last()\n  };\n  var element = null;\n  var closers = $($cache.rbDialog).find('[data-rb-dialog-hide]');\n\n  function initOptions() {\n    return {\n      appendTo: 'body',\n      blurElement: 'body>div:first',\n      autoOpen: true,\n      buttons: [],\n      classes: {\n        'rbDialog': 'dialog',\n        'rbDialogTitle': 'dialog_title',\n        'rbDialogBody': 'dialog_body'\n      },\n      title: null,\n      beforeClose: null,\n      close: null,\n      open: null,\n      required: false,\n      headerless: false\n    };\n  }\n\n  /**\n   * rbDialog constructor\n   * @param {Object|string} [params] - Either the options object or function call as a string\n   * @returns {undefined} Returns undefined\n   * @description Pops a Rocketbelt modal\n   */\n  $.fn.rbDialog = function (params) {\n    if (typeof params !== 'string') init.call(this, params);\n    if (params === 'close') close();\n    else if (params === 'destroy') destroy();\n    else if (params === 'open' || options.autoOpen) open();\n    else if (params === 'options') return options;\n    else if (params === 'isOpen') return $cache.appendTo.hasClass('is-dialog-open');\n    return null;\n  };\n\n  function init(params) {\n    if ($cache.appendTo.hasClass('is-dialog-open')) return;\n    if (this.hasOwnProperty('defaultElement')) {\n      element = $(this.defaultElement);\n    } else if (this) {\n      element = $(this);\n    } else {\n      element = $(element);\n    }\n\n    $.extend(true, options, params);\n\n    if (options.required) options.classes['rbDialog'] += ' dialog_required';\n\n    if (options.headerless) {\n      options.classes['rbDialog'] += ' dialog_headerless';\n    }\n\n    if (options.appendTo) $cache.appendTo = $(options.appendTo);\n    if (options.blurElement) $cache.blurElement = $(options.blurElement);\n    if (options.title) $cache.rbDialogTitle.html(options.title);\n    if (options.classes) addDialogClasses();\n    if (options.buttons.length !== 0) addDialogButtons();\n\n    $cache.rbDialog.data('options', options);\n\n    $.each(closers, function (index, el) {\n      if ( options.required && $(el).is('.dialog_overlay, .dialog_close') ) return;\n\n      el.addEventListener('click', close);\n    });\n    if (!$.contains($cache.rbDialogBody[0], element[0])) {\n      $cache.rbDialogBody.append(element);\n    }\n    element.show();\n  }\n\n  function addDialogClasses() {\n    if (options.classes.rbDialog) {\n      if (options.classes.rbDialog !== 'dialog') $cache.rbDialog.attr('class', 'dialog ' + options.classes.rbDialog);\n      else $cache.rbDialog.attr('class', 'dialog');\n    }\n    if (options.classes.rbDialogTitle) $cache.rbDialogTitle.addClass(options.classes.rbDialogTitle);\n    if (options.classes.rbDialogBody) $cache.rbDialogBody.addClass(options.classes.rbDialogBody);\n  }\n\n  function addDialogButtons() {\n    var buttons = options.buttons;\n\n    // If we already have a button pane, remove it\n\n    if ($.isEmptyObject(buttons) || ($.isArray(buttons) && !buttons.length) || (options.classes.rbDialog.indexOf('dialog-max') !== -1)) {\n      return;\n    }\n\n    if ($cache.rbDialogButtons) $cache.rbDialogButtons.remove();\n    $('.dialog_content').append($('<div class=\"dialog_buttons\"></div>'));\n    $cache.rbDialogButtons = $('.dialog_buttons');\n\n    $.each(buttons, function (name, props) {\n      var click;\n      var buttonOptions;\n      props = $.isFunction(props) ? { click: props, text: name } : props;\n\n      // Default to a non-submitting button\n      props = $.extend({ type: 'button' }, props);\n\n      // Change the context for the click callback to be the main element\n      click = props.click;\n      buttonOptions = {\n        class: 'button ' + props.classes,\n        text: props.text\n      };\n\n      delete props.click;\n      delete props.classes;\n      if (typeof props.text === 'boolean') {\n        delete props.text;\n      }\n\n      $('<button></button>', props)\n        .attr('class', buttonOptions.class)\n        .text(buttonOptions.text)\n        .appendTo($cache.rbDialogButtons)\n        .on('click', function () {\n          click.apply($cache.rbDialog, arguments[0]);\n        });\n    });\n  }\n\n  function getFocusableChildren(node) {\n    var focusableElements = ['a[href]', 'area[href]', 'input:not([disabled])', 'select:not([disabled])', 'textarea:not([disabled])', 'button:not([disabled])', 'iframe', 'object', 'embed', '[contenteditable]', '[tabindex]:not([tabindex^=\"-\"])'];\n    return $(node).find(focusableElements.join(','));\n  }\n\n  // Helper function trapping the tab key inside a node\n  function trapTabKey(node, event) {\n    var focusableChildren = getFocusableChildren(node);\n    var focusedItemIndex = focusableChildren.index($(document.activeElement));\n\n    if (event.shiftKey && focusedItemIndex === 0) {\n      focusableChildren[focusableChildren.length - 1].focus();\n      event.preventDefault();\n    } else if (!event.shiftKey && focusedItemIndex === focusableChildren.length - 1) {\n      focusableChildren[0].focus();\n      event.preventDefault();\n    }\n  }\n\n  function setFocusToFirstItem(node) {\n    var focusableChildren = getFocusableChildren(node);\n    if (focusableChildren.length) focusableChildren[0].focus();\n  }\n\n  function bindKeypress(event) {\n    var shown = !$cache.rbDialog[0].hasAttribute('aria-hidden');\n    if (shown && !options.required && event.which === 27) {\n      event.preventDefault();\n      close();\n    }\n\n    if (shown && event.which === 9) {\n      trapTabKey($cache.rbDialog, event);\n    }\n  }\n\n  function maintainFocus(event) {\n    var target;\n    if (event) {\n      if (event.target) {\n        target = event.target;\n      } else if (event.srcElement) {\n        target = event.srcElement;\n      }\n    }\n\n    if (!$cache.rbDialog[0].hasAttribute('aria-hidden') && !$cache.rbDialog[0].contains(target)) {\n      setFocusToFirstItem($cache.rbDialog);\n    }\n  }\n\n  function open() {\n    if ($cache.appendTo.hasClass('is-dialog-open')) return;\n\n    // Preserve scroll position\n    scrollBeforeDialog = $(window).scrollTop();\n    $cache.appendTo.css('top', '-' + scrollBeforeDialog + 'px');\n\n    $cache.appendTo.addClass('is-dialog-open');\n    $cache.blurElement.addClass('dialog_blur').attr('aria-hidden', true);\n    $cache.rbDialog.removeAttr('aria-hidden');\n    focusedBeforeDialog = $(document.activeElement);\n    setFocusToFirstItem($cache.rbDialog[0]);\n    document.body.addEventListener('focus', maintainFocus, true);\n    $(document).keydown(bindKeypress);\n\n    if ($cache.rbDialog[0].classList.contains('dialog_headerless')) {\n      var $closeContainer = $('.dialog_headerless .dialog_close_container').detach();\n      var $headerlessDialog = $('.dialog_headerless .dialog_content');\n\n      if (!$headerlessDialog.children('.dialog_close_container').length) {\n        $closeContainer.insertAfter('.dialog_headerless .dialog_content .dialog_header');\n      }\n    }\n\n    $cache.rbDialog.trigger('rbDialog:open');\n    _trigger('open');\n  }\n\n  function close() {\n    _trigger('beforeClose');\n\n    if ($cache.rbDialog[0].hasAttribute('aria-hidden')) return;\n\n    $cache.appendTo.removeClass('is-dialog-open');\n\n    // Preserve scroll position\n    $cache.appendTo.css('top', '0');\n    $(window).scrollTop(scrollBeforeDialog);\n\n    $cache.blurElement.removeClass('dialog_blur').removeAttr('aria-hidden');\n    $cache.rbDialog.attr('aria-hidden', 'true');\n    focusedBeforeDialog && focusedBeforeDialog.focus();\n    document.body.removeEventListener('focus', maintainFocus, true);\n    document.removeEventListener('keydown', bindKeypress);\n\n    // Remove closing\n    $.each(closers, function (index, value) {\n      value.removeEventListener('click', close);\n    });\n\n    $cache.rbDialog.trigger('rbDialog:close');\n    _trigger('close');\n    destroy();\n  }\n\n  function destroy() {\n    if (document.body.style.animation) {\n      $cache.rbDialog.one('webkitAnimationEnd oanimationend msAnimationEnd animationend', function () {\n        setTimeout(destroyTheWorld, 200);\n      });\n    } else {\n      setTimeout(destroyTheWorld, 200);\n    }\n  }\n\n  function destroyTheWorld() {\n    if ($cache.rbDialogButtons) $cache.rbDialogButtons.remove();\n    $cache.appendTo.append($cache.rbDialogBody.children('*').detach().hide());\n    $cache.rbDialogTitle.text('');\n    options = initOptions();\n  }\n\n  function _trigger(type, event, data) {\n    var prop;\n    var orig;\n    var callback = options[type];\n\n    data = data || {};\n    event = $.Event(event);\n    if (this) {\n      event.type = (type === this.widgetEventPrefix ? type : this.widgetEventPrefix + type).toLowerCase();\n    } else {\n      event.type = type;\n    }\n    // the original event may come from any element\n    // so we need to reset the target on the new event\n    event.target = element[0];\n\n    // copy original event properties over to the new event\n    orig = event.originalEvent;\n    if (orig) {\n      for (prop in orig) {\n        if (!(prop in event)) {\n          event[prop] = orig[prop];\n        }\n      }\n    }\n\n    element.trigger(event, data);\n    return !($.isFunction(callback) && callback.apply(element[0], [event].concat(data)) === false || event.isDefaultPrevented());\n  }\n});\n"],"sourceRoot":"../.."}