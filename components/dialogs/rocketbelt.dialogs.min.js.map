{"version":3,"sources":["components/dialogs/rocketbelt.dialogs.min.js"],"names":["$","init","params","element","hasClass","this","hasOwnProperty","extend","options","title","$cache","buttons","length","appendTo","addDialogButtons","blurElement","rbDialog","data","rbDialogTitle","html","classes","rbDialogBody","attr","addClass","addDialogClasses","each","closers","isEmptyObject","isArray","indexOf","rbDialogButtons","remove","append","props","name","buttonOptions","isFunction","click","text","class","type","apply","getFocusableChildren","focusableElements","on","arguments","value","addEventListener","close","contains","node","focusableChildren","focusedItemIndex","focus","bindKeypress","event","shown","hasAttribute","which","maintainFocus","target","preventDefault","index","document","activeElement","setFocusToFirstItem","shiftKey","trapTabKey","srcElement","scrollBeforeDialog","window","scrollTop","_trigger","removeEventListener","css","removeClass","removeAttr","focusedBeforeDialog","body","destroy","animation","trigger","setTimeout","destroyTheWorld","orig","callback","children","detach","hide","autoOpen","beforeClose","open","Event","originalEvent","widgetEventPrefix","toLowerCase","prop","concat","isDefaultPrevented","last","find","fn","call"],"mappings":"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","file":"rocketbelt.dialogs.min.js","sourcesContent":["/* global $cache:true element:true closers:true */\n$(function () {\n  var options = initOptions();\n  var focusedBeforeDialog;\n  var scrollBeforeDialog;\n  // IE doesn't apply append var to the global scope.\n  var $cache = {\n    appendTo: $(options.appendTo),\n    blurElement: $(options.blurElement),\n    rbDialog: $('.dialog').last(),\n    rbDialogTitle: $('.dialog .dialog_title').last(),\n    rbDialogBody: $('.dialog .dialog_body').last()\n  };\n  var element = null;\n  var closers = $($cache.rbDialog).find('[data-rb-dialog-hide]');\n\n  function initOptions() {\n    return {\n      appendTo: 'body',\n      blurElement: 'body>div:first',\n      autoOpen: true,\n      buttons: [],\n      classes: {\n        'rbDialog': 'dialog',\n        'rbDialogTitle': 'dialog_title',\n        'rbDialogBody': 'dialog_body'\n      },\n      title: null,\n      beforeClose: null,\n      close: null,\n      open: null\n    };\n  }\n\n  /**\n   * rbDialog constructor\n   * @param {Object|string} [params] - Either the options object or function call as a string\n   * @returns {undefined} Returns undefined\n   * @description Pops a Rocketbelt modal\n   */\n  $.fn.rbDialog = function (params) {\n    if (typeof params !== 'string') init.call(this, params);\n    if (params === 'close') close();\n    else if (params === 'destroy') destroy();\n    else if (params === 'open' || options.autoOpen) open();\n    else if (params === 'options') return options;\n    else if (params === 'isOpen') return $cache.appendTo.hasClass('is-dialog-open');\n    return null;\n  };\n\n  function init(params) {\n    if ($cache.appendTo.hasClass('is-dialog-open')) return;\n    if (this.hasOwnProperty('defaultElement')) {\n      element = $(this.defaultElement);\n    } else if (this) {\n      element = $(this);\n    } else {\n      element = $(element);\n    }\n\n    $.extend(true, options, params);\n\n    if (options.appendTo) $cache.appendTo = $(options.appendTo);\n    if (options.blurElement) $cache.blurElement = $(options.blurElement);\n    if (options.title) $cache.rbDialogTitle.html(options.title);\n    if (options.classes) addDialogClasses();\n    if (options.buttons.length !== 0) addDialogButtons();\n\n    $cache.rbDialog.data('options', options);\n\n    $.each(closers, function (index, value) {\n      value.addEventListener('click', close);\n    });\n    if (!$.contains($cache.rbDialogBody[0], element[0])) {\n      $cache.rbDialogBody.append(element);\n    }\n    element.show();\n  }\n\n  function addDialogClasses() {\n    if (options.classes.rbDialog) {\n      if (options.classes.rbDialog !== 'dialog') $cache.rbDialog.attr('class', 'dialog ' + options.classes.rbDialog);\n      else $cache.rbDialog.attr('class', 'dialog');\n    }\n    if (options.classes.rbDialogTitle) $cache.rbDialogTitle.addClass(options.classes.rbDialogTitle);\n    if (options.classes.rbDialogBody) $cache.rbDialogBody.addClass(options.classes.rbDialogBody);\n  }\n\n  function addDialogButtons() {\n    var buttons = options.buttons;\n\n    // If we already have a button pane, remove it\n\n    if ($.isEmptyObject(buttons) || ($.isArray(buttons) && !buttons.length) || (options.classes.rbDialog.indexOf('dialog-max') !== -1)) {\n      return;\n    }\n\n    if ($cache.rbDialogButtons) $cache.rbDialogButtons.remove();\n    $('.dialog_content').append($('<div class=\"dialog_buttons\"></div>'));\n    $cache.rbDialogButtons = $('.dialog_buttons');\n\n    $.each(buttons, function (name, props) {\n      var click;\n      var buttonOptions;\n      props = $.isFunction(props) ? { click: props, text: name } : props;\n\n      // Default to a non-submitting button\n      props = $.extend({ type: 'button' }, props);\n\n      // Change the context for the click callback to be the main element\n      click = props.click;\n      buttonOptions = {\n        class: 'button ' + props.classes,\n        text: props.text\n      };\n\n      delete props.click;\n      delete props.classes;\n      if (typeof props.text === 'boolean') {\n        delete props.text;\n      }\n\n      $('<button></button>', props)\n        .attr('class', buttonOptions.class)\n        .text(buttonOptions.text)\n        .appendTo($cache.rbDialogButtons)\n        .on('click', function () {\n          click.apply($cache.rbDialog, arguments[0]);\n        });\n    });\n  }\n\n  function getFocusableChildren(node) {\n    var focusableElements = ['a[href]', 'area[href]', 'input:not([disabled])', 'select:not([disabled])', 'textarea:not([disabled])', 'button:not([disabled])', 'iframe', 'object', 'embed', '[contenteditable]', '[tabindex]:not([tabindex^=\"-\"])'];\n    return $(node).find(focusableElements.join(','));\n  }\n\n  // Helper function trapping the tab key inside a node\n  function trapTabKey(node, event) {\n    var focusableChildren = getFocusableChildren(node);\n    var focusedItemIndex = focusableChildren.index($(document.activeElement));\n\n    if (event.shiftKey && focusedItemIndex === 0) {\n      focusableChildren[focusableChildren.length - 1].focus();\n      event.preventDefault();\n    } else if (!event.shiftKey && focusedItemIndex === focusableChildren.length - 1) {\n      focusableChildren[0].focus();\n      event.preventDefault();\n    }\n  }\n\n  function setFocusToFirstItem(node) {\n    var focusableChildren = getFocusableChildren(node);\n    if (focusableChildren.length) focusableChildren[0].focus();\n  }\n\n  function bindKeypress(event) {\n    var shown = !$cache.rbDialog[0].hasAttribute('aria-hidden');\n    if (shown && event.which === 27) {\n      event.preventDefault();\n      close();\n    }\n\n    if (shown && event.which === 9) {\n      trapTabKey($cache.rbDialog, event);\n    }\n  }\n\n  function maintainFocus(event) {\n    var target;\n    if (event) {\n      if (event.target) {\n        target = event.target;\n      } else if (event.srcElement) {\n        target = event.srcElement;\n      }\n    }\n\n    if (!$cache.rbDialog[0].hasAttribute('aria-hidden') && !$cache.rbDialog[0].contains(target)) {\n      setFocusToFirstItem($cache.rbDialog);\n    }\n  }\n\n  function open() {\n    if ($cache.appendTo.hasClass('is-dialog-open')) return;\n\n    // Preserve scroll position\n    scrollBeforeDialog = $(window).scrollTop();\n    $cache.appendTo.css('top', '-' + scrollBeforeDialog + 'px');\n\n    $cache.appendTo.addClass('is-dialog-open');\n    $cache.blurElement.addClass('dialog_blur').attr('aria-hidden', true);\n    $cache.rbDialog.removeAttr('aria-hidden');\n    focusedBeforeDialog = $(document.activeElement);\n    setFocusToFirstItem($cache.rbDialog[0]);\n    document.body.addEventListener('focus', maintainFocus, true);\n    $(document).keydown(bindKeypress);\n\n    $cache.rbDialog.trigger('rbDialog:open');\n    _trigger('open');\n  }\n\n  function close() {\n    _trigger('beforeClose');\n\n    if ($cache.rbDialog[0].hasAttribute('aria-hidden')) return;\n\n    $cache.appendTo.removeClass('is-dialog-open');\n\n    // Preserve scroll position\n    $cache.appendTo.css('top', '0');\n    $(window).scrollTop(scrollBeforeDialog);\n\n    $cache.blurElement.removeClass('dialog_blur').removeAttr('aria-hidden');\n    $cache.rbDialog.attr('aria-hidden', 'true');\n    focusedBeforeDialog && focusedBeforeDialog.focus();\n    document.body.removeEventListener('focus', maintainFocus, true);\n    document.removeEventListener('keydown', bindKeypress);\n\n    // Remove closing\n    $.each(closers, function (index, value) {\n      value.removeEventListener('click', close);\n    });\n\n    $cache.rbDialog.trigger('rbDialog:close');\n    _trigger('close');\n    destroy();\n  }\n\n  function destroy() {\n    if (document.body.style.animation) {\n      $cache.rbDialog.one('webkitAnimationEnd oanimationend msAnimationEnd animationend', function () {\n        setTimeout(destroyTheWorld, 200);\n      });\n    } else {\n      setTimeout(destroyTheWorld, 200);\n    }\n  }\n\n  function destroyTheWorld() {\n    if ($cache.rbDialogButtons) $cache.rbDialogButtons.remove();\n    $cache.appendTo.append($cache.rbDialogBody.children('*').detach().hide());\n    $cache.rbDialogTitle.text('');\n    options = initOptions();\n  }\n\n  function _trigger(type, event, data) {\n    var prop;\n    var orig;\n    var callback = options[type];\n\n    data = data || {};\n    event = $.Event(event);\n    if (this) {\n      event.type = (type === this.widgetEventPrefix ? type : this.widgetEventPrefix + type).toLowerCase();\n    } else {\n      event.type = type;\n    }\n    // the original event may come from any element\n    // so we need to reset the target on the new event\n    event.target = element[0];\n\n    // copy original event properties over to the new event\n    orig = event.originalEvent;\n    if (orig) {\n      for (prop in orig) {\n        if (!(prop in event)) {\n          event[prop] = orig[prop];\n        }\n      }\n    }\n\n    element.trigger(event, data);\n    return !($.isFunction(callback) && callback.apply(element[0], [event].concat(data)) === false || event.isDefaultPrevented());\n  }\n});\n"],"sourceRoot":"../.."}