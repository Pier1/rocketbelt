{"version":3,"sources":["components/busy-indicators/rocketbelt.progress-indicators.min.js"],"names":["rb","document","mutations","mutationsLen","onClassMutation","length","k","mutation","target","classList","contains","getElementsByClassName","markup","elType","el","nodeName","fragment","insertAdjacentHTML","overlay","parentNode","removeChild","busyable","querySelectorAll","busyableLen","busyableEl","i","observer","MutationObserver","subtree","attributes","attributeOldValue","observe","attributeFilter","progressIndicators","observeComponents","window"],"mappings":"AAAA,cACA,SAAEA,EAAIC,GAAL,SAACD,EAAiBE,GAIf,IAAK,IAHPC,EAASC,GAA2BF,EAAAG,OAAAH,EAAAG,OAAA,EAGzBC,EAAI,EAAGA,EAAIH,EAAcG,IAAK,CAAvC,IAAKC,EAAWD,EAAIH,GACZI,EAAAA,EAAWL,OAGjB,GAAIK,EAASC,OAAOC,WAAaF,EAASC,OAAOC,UAAUC,SAAS,YAClE,GAAA,IAAAH,EAAAC,OAAAG,uBAAA,mBAAAN,OAAA,CAEE,IAAAO,EAAA,GAGAA,EAAIL,EAASC,OAAOC,UAAUC,SAAS,oBAAnCH,yIAEG,iIAIP,IAEMM,EAAyB,OAAhBC,EAAGC,UAAqC,OAAhBD,EAAGC,SAAoB,KAAO,MAC/DC,EAAAA,IACAH,EADAG,wIAKHC,EALGD,iBAMPH,EANOG,IAQRF,EAAAG,mBAAA,YAAAD,QADK,CAKHE,IAAAA,EAAQC,EAAAA,iBAAuBD,oBAA/B,GAEHA,IAAAA,EAAAC,WAAAV,UAAAC,SAAA,YACFQ,EAAAC,WAAAC,YAAAF,KAMD,SAAIG,IACFA,IAAAA,EAAWpB,EAASqB,iBAAiB,gBADf,IAApBD,EAAShB,SAIbgB,EAAME,EAAcF,iBAApB,SAKE,IAAA,IAFMG,EAAaH,EAAAhB,OAEnBoB,EAAA,EAAAA,EAAAF,EAAAE,IAAA,CACA,IAAMC,EAAeC,EAAAA,GACJH,IAAAA,iBAAcI,SAAAA,GAAeC,EAAkBC,KACjEC,QAAAP,GAAAI,SAAA,EAAAC,YAAA,EAAAC,mBAAA,EAAAE,iBAAA,YAIHhC,EAAGiC,gBAAAA,GACHjC,EAAGiC,mBAAmBC,EAAAA,uBA7DxBlC,EA8DGmC,mBA9DHD,kBAAAA,EAAA,CA8DGC,OAAOnC,GAAIC","file":"rocketbelt.progress-indicators.min.js","sourcesContent":["'use strict';\n((rb, document) => {\n  function onClassMutation(mutations) {\n    const mutationsLen = mutations && mutations.length ? mutations.length : 0;\n\n    for (let k = 0; k < mutationsLen; k++) {\n      const mutation = mutations[k];\n      const el = mutation.target;\n\n      if (mutation.target.classList && mutation.target.classList.contains('is-busy')) {\n        // If \"is-busy\" was added, do the decoratin'\n        if (mutation.target.getElementsByClassName('is-busy_overlay').length === 0) {\n          // Only add overlay if one doesn't already exist\n          let markup = '';\n\n          if (mutation.target.classList.contains('is-busyable-page')) {\n            markup = '<div class=\"box-loader\"><div class=\"border\"></div><div class=\"border\"></div><div class=\"border\"></div><div class=\"border\"></div></div>';\n          } else {\n            markup = '<div class=\"dot\" aria-hidden=\"true\"></div><div class=\"dot\" aria-hidden=\"true\"></div><div class=\"dot\" aria-hidden=\"true\"></div>';\n          }\n\n          const a11yAttrs =\n            'aria-label=\"Loading.\" role=\"alert\" aria-live=\"polite\" aria-busy=\"true\"';\n          const elType = el.nodeName === 'UL' || el.nodeName === 'OL' ? 'li' : 'div';\n          const fragment =\n            `<${elType} class=\"is-busy_overlay is-busy_overlay-opaque\" ${a11yAttrs}>\\\n              ${markup}\\\n            </${elType}>`;\n\n          el.insertAdjacentHTML('beforeend', fragment);\n        }\n      } else {\n        // If \"is-busy\" was removed\n        const overlay = el.querySelectorAll('.is-busy_overlay')[0];\n\n        if (overlay && !overlay.parentNode.classList.contains('is-busy')) {\n          overlay.parentNode.removeChild(overlay);\n        }\n      }\n    }\n  }\n\n  function observeComponents() {\n    let busyable = document.querySelectorAll('.is-busyable');\n\n    if (busyable.length === 0) {\n      busyable = document.querySelectorAll('body');\n    }\n\n    const busyableLen = busyable.length;\n\n    for (let i = 0; i < busyableLen; i++) {\n      const busyableEl = busyable[i];\n\n      // Set an observer to listen for .invalid.\n      const observer = new MutationObserver((mutations) => { onClassMutation(mutations); });\n      observer.observe(busyableEl, { subtree: true, attributes: true, attributeOldValue: true, attributeFilter: ['class'] });\n    }\n  }\n\n  rb.onDocumentReady(observeComponents);\n  rb.progressIndicators = rb.progressIndicators || {};\n  rb.progressIndicators.observeComponents = observeComponents;\n})(window.rb, document);\n"],"sourceRoot":"../.."}