{"version":3,"sources":["components/busy-indicators/rocketbelt.progress-indicators.min.js"],"names":["rb","document","onClassMutation","mutations","mutationsLen","length","k","mutation","el","target","classList","contains","dot","elType","nodeName","fragment","innerHTML","overlay","querySelectorAll","parentNode","removeChild","observeComponents","busyable","busyableLen","i","busyableEl","MutationObserver","observe","subtree","attributes","attributeOldValue","attributeFilter","onDocumentReady","progressIndicators","window"],"mappings":"CAAA,SAAuCA,EAAIC,GACzC,SAASC,EAAgBC,GAGvB,IAAK,IAFDC,EAAeD,GAAaA,EAAUE,OAASF,EAAUE,OAAS,EAE7DC,EAAI,EAAGA,EAAIF,EAAcE,IAAK,CACrC,IAAIC,EAAWJ,EAAUG,GACrBE,EAAKD,EAASE,OAElB,GAAIF,EAASE,OAAOC,UAAUC,SAAS,WAAY,CAEjD,IAAIC,EAAM,6CAENC,EAAyB,OAAhBL,EAAGM,UAAqC,OAAhBN,EAAGM,SAAoB,KAAO,MAC/DC,EAAW,IAAMF,EAAS,0HAAuED,EAAMA,EAAMA,EAAM,KAAOC,EAAS,IAEvIL,EAAGQ,UAAYR,EAAGQ,UAAYD,MACzB,CAEL,IAAIE,EAAUT,EAAGU,iBAAiB,oBAAoB,GAElDD,GACFA,EAAQE,WAAWC,YAAYH,KAMvC,SAASI,IACP,IAAIC,EAAWrB,EAASiB,iBAAiB,gBAEjB,IAApBI,EAASjB,SACXiB,EAAWrB,EAASiB,iBAAiB,SAKvC,IAAK,IAFDK,EAAcD,EAASjB,OAElBmB,EAAI,EAAGA,EAAID,EAAaC,IAAK,CACpC,IAAIC,EAAaH,EAASE,GAGX,IAAIE,iBAAiB,SAAUvB,GAAaD,EAAgBC,KAClEwB,QAAQF,GAAcG,SAAS,EAAMC,YAAY,EAAMC,mBAAmB,EAAMC,iBAAkB,YAI/G/B,EAAGgC,gBAAgBX,GACnBrB,EAAGiC,mBAAqBjC,EAAGiC,uBAC3BjC,EAAGiC,mBAAmBZ,kBAAoBA,EA/C5C,CAgDGa,OAAOlC,GAAIC","file":"rocketbelt.progress-indicators.min.js","sourcesContent":["(function rocketbeltProgressIndicators(rb, document) {\n  function onClassMutation(mutations) {\n    var mutationsLen = mutations && mutations.length ? mutations.length : 0;\n\n    for (var k = 0; k < mutationsLen; k++) {\n      var mutation = mutations[k];\n      var el = mutation.target;\n\n      if (mutation.target.classList.contains('is-busy')) {\n        // If \"is-busy\" was added, do the decoratin'\n        var dot = '<div class=\"dot\" aria-hidden=\"true\"></div>';\n        var a11yAttrs = 'aria-label=\"Loading.\" role=\"alert\" aria-live=\"polite\" aria-busy=\"true\"';\n        var elType = el.nodeName === 'UL' || el.nodeName === 'OL' ? 'li' : 'div';\n        var fragment = '<' + elType + ' class=\"is-busy_overlay is-busy_overlay-opaque\" ' + a11yAttrs + '>' + dot + dot + dot + '</' + elType + '>';\n\n        el.innerHTML = el.innerHTML + fragment;\n      } else {\n        // If \"is-busy\" was removed\n        var overlay = el.querySelectorAll('.is-busy_overlay')[0];\n\n        if (overlay) {\n          overlay.parentNode.removeChild(overlay);\n        }\n      }\n    }\n  }\n\n  function observeComponents() {\n    var busyable = document.querySelectorAll('.is-busyable');\n\n    if (busyable.length === 0) {\n      busyable = document.querySelectorAll('body');\n    }\n\n    var busyableLen = busyable.length;\n\n    for (var i = 0; i < busyableLen; i++) {\n      var busyableEl = busyable[i];\n\n      // Set an observer to listen for .invalid.\n      var observer = new MutationObserver(function (mutations) { onClassMutation(mutations); });\n      observer.observe(busyableEl, { subtree: true, attributes: true, attributeOldValue: true, attributeFilter: ['class'] });\n    }\n  }\n\n  rb.onDocumentReady(observeComponents);\n  rb.progressIndicators = rb.progressIndicators || {};\n  rb.progressIndicators.observeComponents = observeComponents;\n})(window.rb, document);\n"],"sourceRoot":"../.."}