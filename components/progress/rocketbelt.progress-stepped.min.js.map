{"version":3,"sources":["components/progress/rocketbelt.progress-stepped.min.js"],"names":["rb","document","aria","onAttrMutation","mutations","mutationsLen","length","_loop","i","mutation","target","attributes","getNamedItem","current","querySelectorAll","oldDescriptors","forEach","element","span","createElement","textContent","setAttribute","classList","add","querySelector","linksToDisable","linksLen","parentNode","j","link","disabled","linkToEnable","hiddenText","decorateProgressStepped","progressIndicators","progressIndicatorsLen","progressIndicator","hasAttribute","label","MutationObserver","observer","subtree","attributeFilter","sibs","onDocumentReady"],"mappings":"AAAA,cACA,SAAEA,EAAIC,GAAL,IAAAC,EAAKD,EAAAA,KAGJ,SAASE,EAAeC,GAGtB,IAHF,IAAAC,EAAAD,EAAAE,OAAmCC,EAAA,SAGxBC,GAHwB,IAAAC,EAAAL,EAAAI,GAQ/B,KAJiBJ,EAAjBM,OAAAC,WAGkCC,aAAaV,EAAKW,SACpD,CACoBZ,EAAAa,iBAAA,+CACZC,QAAiBd,SAAAA,GACvBc,EAAAA,OAAeC,YAAQC,KAIvB,IAAAC,EAAAjB,EAAAkB,cAAA,QACAD,EAAMA,YAAOjB,iBACbiB,EAAKE,aAAL,QAAmB,mBACnBF,EAAKG,UAAAA,IAAa,+BAClBH,EAAKI,OAAUC,aAAIL,EAAAT,EAAAC,OAAnBc,cAAA,MAcC,IAXD,IAAAC,EACAhB,EAKMiB,OAFDC,WAIAb,iBAPL,IAOoBY,EAAUE,QAP9B,SAOmC1B,EAAAW,QAPnC,YAQQgB,EAAOJ,EAAbnB,OAEDsB,EAAA,EAAAA,EAAAF,EAAAE,IAAA,CACIH,EAAAG,GACPP,aAAAnB,EAAA4B,UAAA,QAEEC,CADA,IAAMA,EAAetB,EAASC,OAAOc,cAAc,KAInDO,EAAIC,gBAAY9B,EAAA4B,UACdE,IAAAA,EAAWZ,EAAcO,WAAzBH,cAAA,oBAEHQ,IA3C8BA,EAAAZ,YAAA,iBAGxBZ,EAAI,EAAGA,EAAIH,EAAcG,IAAKD,EAA9BC,GA4CX,SAASyB,IAIP,IAJF,IAAAC,EAASD,EAA0BnB,iBAAA,qBAC3BoB,EAAqBjC,EAASa,OAG3BN,EAAI,EAAGA,EAAI2B,EAAuB3B,IAAK,CAAhD,IAAK4B,EAAeD,EAApB3B,GAGO4B,EAAkBC,aAAanC,EAAKoC,QAAzCF,EAAKA,aAAkBC,EAAanC,MAAKoC,sBAIzCF,EAAkBf,aAAa,OAAQ,OAAvCe,EAAkBf,aAAa,WAAQ,KAGtB,IAAIkB,iBAAiB,SAACnC,GAAgBD,EAAeC,KAAhEoC,QAAWJ,EAAqB,CAAiBjC,SAAAA,EAAvDQ,YAAA,EACA6B,mBAAiBJ,EACfK,gBADkC,CAAAvC,EAAAW,WAIlC6B,IAAAA,EAAAA,EAAiBlB,cAAjBkB,IAAiBxC,EAAAW,QAAjB6B,KAJF7B,IASEA,EAAUuB,EAAkBZ,cAAc,OAFxCX,aAAUuB,EAAAA,QAAkBZ,QAG9BX,EAAAA,cAAA,KAAqBX,aAAcA,EAAnC4B,SAAA,QAKF,IAAA,IAAMa,EAAOP,EAAkBtB,iBAAlB,IAAuCZ,EAAKW,QAA5C,YAFbA,EAAQW,EAARlB,OAEMqC,EAAOP,EAAAA,EAAAA,EAAkBtB,IAAAA,CACf6B,EAAKrC,GAIfe,aAAanB,EAAK4B,SAAU,UAEnC9B,EAAA4C,gBAAAX,GACFjC,EAAAkC,mBAAAlC,EAAAkC,oBAAA,GAIDlC,EAAGkC,mBAAmBD,wBAA0BA,EA5FlD,CA0FEjC,OAAG4C,GAAAA","file":"rocketbelt.progress-stepped.min.js","sourcesContent":["'use strict';\n((rb, document) => {\n  const aria = rb.aria;\n\n  function onAttrMutation(mutations) {\n    const mutationsLen = mutations.length;\n\n    for (let i = 0; i < mutationsLen; i++) {\n      const mutation = mutations[i];\n      const attributes = mutation.target.attributes;\n\n      const hasAriaCurrent = attributes.getNamedItem(aria.current) ? true : false;\n      // If target's attributes include aria-current\n      if (hasAriaCurrent) {\n        const oldDescriptors = document.querySelectorAll('[aria-current] .progress-stepped_descriptor');\n        oldDescriptors.forEach(element => {\n          mutation.target.removeChild(element);\n        });\n\n        // Add visually-hidden descriptor\n        const span = document.createElement('span');\n        span.textContent = 'Current Step: ';\n        span.setAttribute('class', 'visually-hidden');\n        span.classList.add('progress-stepped_descriptor')\n        mutation.target.insertBefore(span, mutation.target.querySelector('a'));\n\n        // Decorate current & subsequent links with aria-disabled\n        const linksToDisable =\n          mutation\n            .target\n            .parentNode\n            .querySelectorAll(`[${aria.current}] a, [${aria.current}] ~ li a`);\n        const linksLen = linksToDisable.length;\n\n        for (let j = 0; j < linksLen; j++) {\n          const link = linksToDisable[j];\n          link.setAttribute(aria.disabled, true);\n        }\n      } else {\n      // If target doesn't have aria-current, remove aria-disabled from child link\n        const linkToEnable = mutation.target.querySelector('a');\n        linkToEnable.removeAttribute(aria.disabled);\n        const hiddenText = linkToEnable.parentNode.querySelector('.visually-hidden');\n\n        if (hiddenText) {\n          hiddenText.textContent = 'Completed: ';\n        }\n      }\n    }\n  }\n\n  function decorateProgressStepped() {\n    const progressIndicators = document.querySelectorAll('.progress-stepped');\n    const progressIndicatorsLen = progressIndicators.length;\n\n    for (let i = 0; i < progressIndicatorsLen; i++) {\n      const progressIndicator = progressIndicators[i];\n\n      if (!progressIndicator.hasAttribute(aria.label)) {\n        progressIndicator.setAttribute(aria.label, 'Progress Indicator');\n      }\n\n      progressIndicator.setAttribute('role', 'nav');\n      progressIndicator.setAttribute('tabindex', '0');\n\n      const observer = new MutationObserver((mutations) => { onAttrMutation(mutations); });\n      observer.observe(progressIndicator, {\n        subtree: true,\n        attributes: true,\n        attributeOldValue: true,\n        attributeFilter: [aria.current]\n      });\n\n      let current = progressIndicator.querySelector(`[${aria.current}]`);\n      if (!current) {\n        current = progressIndicator.querySelector('li');\n        current.setAttribute(aria.current, 'page');\n      }\n\n      current.querySelector('a').setAttribute(aria.disabled, 'true');\n\n      const sibs = progressIndicator.querySelectorAll(`[${aria.current}] ~ li a`);\n      const sibsLen = sibs.length;\n\n      for (let j = 0; j < sibsLen; j++) {\n        const sib = sibs[j];\n        sib.setAttribute(aria.disabled, 'true');\n      }\n    }\n  }\n\n  rb.onDocumentReady(decorateProgressStepped);\n  rb.progressIndicators = rb.progressIndicators || {};\n  rb.progressIndicators.decorateProgressStepped = decorateProgressStepped;\n})(window.rb, document);\n"],"sourceRoot":"../.."}