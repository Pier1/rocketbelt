.form-group,
fieldset {
  display: flex;
  flex-direction: column;

  &:not(:last-child) {
    margin-bottom: ms(-10);
  }

  label,
  legend {
    font-weight: font-weight(semibold);
    font-size: ms(-1);
    align-self: flex-start;

    &::after {
      color: color(gray, plus1);
      font-weight: font-weight(normal);
    }
  }
}

.form-group:not(.inline) {
  .messages {
    display: flex;
    flex-wrap: wrap;

    .validation-message::after {
      color: color(gray, plus1);
      content: unicode(nbsp) + unicode('horizontal-bar') + unicode(nbsp);
    }
  }
}

.form-group {
  &.inline {
    flex-direction: row;
    align-items: center;

    &:first-child {
      margin-top: ms(-10);
    }

    .helper-text,
    label {
      flex: 0 0 auto;
      align-self: center;
    }

    label {
      display: flex;
      flex-direction: column;
      padding-right: ms(-4);
    }

    .helper-text {
      padding-left: ms(-4);
    }

    .messages {
      display: flex;
      flex-direction: column;
      flex: 0 0 auto;
      padding-left: ms(-4);
      order: last;

      .helper-text {
        padding-left: 0;
      }

      .helper-text,
      .validation-message {
        align-self: flex-start;
      }
    }

    input,
    select,
    textarea {
      &:focused {
        overflow: auto;
      }
      &[required] {
        & + label::after {
          content: '(required)';
        }
      }

      &:not([required]) {
        & + label::after {
          content: '(optional)';
        }
      }
    }

    &.inline-with-button {
      font-size: 0;

      input {
        height: 2rem;
        outline: 0;
        border: 1px solid color(gray, plus1);
        border-right: 0;
        border-top-left-radius: 2px;
        border-top-right-radius: 0;
        border-bottom-right-radius: 0;
        border-bottom-left-radius: 2px;

        &:focus {
          border: 2px solid color(primary);
          border-right: 0;
          border-radius: 0;

          & ~ button,
          & ~ .button {
            border: 2px solid color(primary);
            border-left: 0;
            border-radius: 0;
            transition: none;
          }
        }
      }

      button,
      .button {
        @include button-style(secondary);

        min-width: auto;
        height: 2rem;
        border: 1px solid color(gray, plus1);
        border-left: 0;
        border-top-left-radius: 0;
        border-top-right-radius: 2px;
        border-bottom-right-radius: 2px;
        border-bottom-left-radius: 0;
        background: transparent;
        box-shadow: none;
        line-height: 1;

        &:hover,
        &:active {
          box-shadow: none;
        }
      }
    }
  }
}

html {
  &.touchevents {
    button,
    input,
    select {
      min-height: 44px;
    }
  }
}

input:not([type='checkbox']),
select {
  min-height: 2rem;
}

input:not([type='checkbox']),
select,
textarea {
  display: block;
  padding: ms(-12) ms(-10);
  width: 100%;
  border: 1px solid color(gray, plus1);
  border-radius: 2px;
  font-size: ms(-1);

  & + label {
    order: -1;
  }

  &:focus {
    overflow: hidden;
    outline: 2px solid color(primary);

    &.invalid {
      outline-color: color(error);
    }
  }

  &[disabled] {
    border-color: transparent;
    background-color: color(gray, plus3);
  }

  &.invalid {
    border-width: 2px;
    border-color: color(error);

    & ~ .messages {
      .validation-message {
        display: block;
        visibility: visible;
        color: color(error);
      }
    }
  }

  &:valid:not(.invalid) {
    & ~ .messages {
      .validation-message {
        display: none;
        visibility: hidden;
      }
    }
  }
  // Character Based Ems - Good Idea??
  &.field-small {
    width: 8em;
  }

  &.field-medium {
    width: 16em;
  }

  &.field-large {
    width: 24em;
  }

  &.read-only {
    &[disabled] {
      margin-bottom: 0;
      padding: 0;
      border-width: 1px;
      border-color: transparent;
      background: transparent;
      color: color(gray);
      font-size: 1rem;
      opacity: 1;
    }
  }
}

[disabled] {
  opacity: 0.6;
  filter: grayscale(0.6);
  transition: opacity 500ms ease;
}

input {
  &.rb-checkbox[type='checkbox'],
  &[type='radio'] {
    &[disabled] + label {
      color: color(gray, plus2);
    }
  }
}

select {
  $fill: quote(color(black));
  background-image: svg-url('<svg viewBox="0 6 32 21" xmlns="http://www.w3.org/2000/svg"> <path fill="#{$fill}" fill-rule="evenodd" d="M27.728 6L32 10.272 16 26.194 0 10.272 4.272 6 16 17.69z"/> </svg> ');
  background-repeat: no-repeat;
  background-color: color(white);
  background-position: right 0.5rem center;
  background-size: 1rem;
  appearance: none;
  padding-right: 25px;

  &.field-auto {
    width: auto;
    margin-right: auto;
    padding-right: 2em;
  }
}

textarea {
  &.read-only {
    &[disabled] {
      resize: none;
    }
  }
}

.form-group {
  input,
  select,
  textarea {
    & + label::after {
      font-size: font-size(-2);
    }

    &[required] {
      & + label::after {
        content: unicode(nbsp) + '(required)';
      }
    }

    &:not([required]) {
      & + label::after {
        content: unicode(nbsp) + '(optional)';
      }
    }
    &.read-only {
      &[disabled] {
        & ~ label::after {
          content: none;
        }
      }
    }
  }

  &.required-suppressed {
    input,
    select,
    textarea {
      &[required] {
        & + label::after {
          content: '';
        }
      }

      &:not([required]) {
        & + label::after {
          content: '';
        }
      }
    }
  }

  .helper-text {
    color: color(gray, plus1);
  }

  .helper-text,
  .validation-message {
    font-size: font-size(-2);
  }
}

fieldset {
  margin: 0;
  padding: 0;
  border: 0;

  &[required] {
    legend::after {
      content: unicode(nbsp) + '(required)';
    }
  }

  &:not([required]) {
    legend::after {
      content: unicode(nbsp) + '(optional)';
    }
  }
}
