$button-color-base-fg: color(ui, button-base-fg);
$button-color-base-bg: transparent;
$button-color-border: color(ui, button-base-fg);
$button-box-shadow: z-depth(0);

.button {
  @include vset(--button-color-fg, $button-color-base-fg);
  @include vset(--button-color-bg, $button-color-base-bg);
  @include vset(--button-color-border, $button-color-border);
  @include vset(--button-box-shadow, $button-box-shadow);

  height: 2.9rem;
  border: 1px solid vget(--button-color-border, $button-color-border);
  color: vget(--button-color-fg, $button-color-base-fg);
  background: vget(--button-color-bg, $button-color-base-bg);
  fill: vget(--button-color-fg, $button-color-base-fg);
  cursor: pointer;
  padding: 0 2em;
  box-shadow: vget(--button-box-shadow, $button-box-shadow);

  &:not(:last-of-type) {
    margin-right: 0.5em;
  }

  &:hover {
    @include vset(--button-color-fg, scale-color($button-color-base-fg, $lightness: 12.5%));
    @include vset(--button-color-bg, transparentize($color: scale-color($button-color-base-fg, $lightness: 85%), $amount: 0.85));
    @include vset(--button-box-shadow, z-depth(2));
  }

  &:active {
    @include vset(--button-color-fg, $button-color-base-fg);
    @include vset(--button-color-bg, $button-color-base-bg);
    @include vset(--button-box-shadow, z-depth(1));
  }

  &[disabled] {
    @include vset(--button-color-fg, rgba($button-color-base-fg, 0.9));
    @include vset(--button-color-bg, desaturate(scale-color($button-color-base-fg, $lightness: 97.5%), 65%));
    @include vset(--button-box-shadow, 0);

    cursor: default;
  }
}

a[role='button'] {
  display: inline-flex;
  align-items: center;
}

a[role='button'],
.button-primary {
  $button-primary-color-fg: color(white);
  $button-primary-color-bg: color(primary);
  $button-primary-color-border: color(primary);

  color: $button-primary-color-fg;

  @include vset(--button-color-fg, $button-primary-color-fg);
  @include vset(--button-color-bg, $button-primary-color-bg);
  @include vset(--button-color-border, $button-color-border);

  &:hover,
  &:active,
  &[disabled] {
    @include vset(--button-color-fg, $button-primary-color-fg);
  }

  &:hover {
    @include vset(--button-color-bg, scale-color($button-primary-color-bg, $lightness: 10%));
  }

  &:active {
    @include vset(--button-color-bg, scale-color($button-primary-color-bg, $lightness: -12.5%));
  }

  &[disabled] {
    @include vset(--button-color-bg, desaturate($button-primary-color-bg, 65%));
  }
}

.button-text {
  $button-text-color-fg: color(ui, link);
  $button-text-color-bg: transparent;

  color: $button-text-color-fg;
  display: inline-block;
  border: 0;
  padding: 0;
  box-shadow: none;
  height: auto;

  &:active {
    background: $button-text-color-bg;
    color: $button-text-color-fg;
    box-shadow: none;
  }

  &:hover {
    $hover-color: scale-color($button-text-color-fg, $lightness: 25%);
    color: $hover-color;
    background: $button-text-color-bg;
  }

  &[disabled] {
    background: $button-text-color-bg;
    opacity: 0.6;
    filter: grayscale(0.6);
    pointer-events: none;
  }
}

.button-sm,
.button-small {
  height: 2.4rem;
  font-size: font-size(-1);
}

.button-mini {
  height: 2rem;
  font-size: font-size(-1);
}

.button-dynamic {
  @include button-style(dynamic);
}

.button-busy {
  @include button-style(busy);
}

.button-success {
  @include button-style(success);
}

.touchevents {
  // Enlarges the click area without enlarging the UI element
  .button-sm,
  .button-mini {
    position: relative;
    &:after {
      content: '';
      position: absolute;
      top: -10px;
      bottom: -10px;
      left: -10px;
      right: -10px;
      min-height: 44px;
    }
  }
}

@keyframes spin {
  0%   { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}